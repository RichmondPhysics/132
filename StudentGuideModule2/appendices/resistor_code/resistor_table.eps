%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: resistor_table.pdf
%%Creator: Adobe Acrobat 11.0.23
%%For: mtrawick
%%CreationDate: 2/23/2020, 7:49:02 AM
%%BoundingBox: 0 0 347 295
%%HiResBoundingBox: 0 0 346.2561 294.5468
%%CropBox: 0 0 346.2561 294.5468
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1437 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c006 80.159825, 2016/09/16-03:31:08        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/"
   xmp:ModifyDate="2020-02-23T07:48:54-05:00"
   xmp:CreateDate="2020-02-23T07:48:15-05:00"
   xmp:MetadataDate="2020-02-23T07:48:54-05:00"
   xmp:CreatorTool="Acrobat PDFMaker 11 for Word"
   xmpMM:DocumentID="uuid:73b34777-c4a8-4854-8d3b-795613a646c9"
   xmpMM:InstanceID="uuid:965d55b3-8286-4cd2-a11a-717515d0e732"
   dc:format="application/pdf"
   pdf:Producer="Adobe PDF Library 11.0"
   pdf:Keywords=""
   pdfx:SourceModified="D:20200223124804"
   pdfx:Company="University of Richmond"
   pdfx:Comments="">
   <xmpMM:subject>
    <rdf:Seq>
     <rdf:li>10</rdf:li>
    </rdf:Seq>
   </xmpMM:subject>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:title>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:description>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Trawick, Matt</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
<<
/0 
[/DeviceRGB] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 0 
/Lookup <~
!!!!~>
>>
/CSD add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -294.547 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 294.547 li
346.256 294.547 li
346.256 0 li
cp
clp
gsave
-.873306 295.4 mo
347.127 295.4 li
347.127 -.600455 li
-.873306 -.600455 li
-.873306 295.4 li
clp
gsave
2.36664 15.1195 mo
64.8857 15.1195 li
64.8857 2.87959 li
2.36664 2.87959 li
2.36664 15.1195 li
clp
false sop
/1 
[/DeviceRGB] /CSA add_res
.137422 .122799 .126081 rgb
%ADOBeginSubsetFont: ONKBAA+Calibri-Bold Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /ONKBAA+Calibri-Bold def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 67 /C put
dup 108 /l put
dup 111 /o put
dup 114 /r put
def
/FontBBox {-519 -349 1263 1039} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
5 dict dup begin
/.notdef <1C60D8A8C9B7A086528E2CBE7FD4F03CC6CDCA18E09BCC917FA5F1
19478AAC0A696931453BF661861F40ACE8D15EA0278E8F88478BB0248E8D1904
2FB8B7F2BB2D4ECFE961B3EEB80565197E481D427DFF375EC95F16C0E36FE28A
EC2A0702F6CB5ACA5B242B6593847C74B58C6FBE25BCF0D4AFF25D49578CAB0D
929B025DECF86FE8C45E91FC3804785896842CEEC7085BA98EF5BCC94B208BF4
3A5FA51448171853E476E618A0AB76D0CDCEE51B8CF3FCD6DA051824D7EFC40D
8D270BAD39624CE3E5CBFE64B165BA24EF48FCEC82F8DEB8BFCD829A07FF03FF
E381E622BF0967DB53309A79D2F393F52C4B535EC59CAFAAC152061A92D31A3A
6E83C18D63056F4453027EAA702C494809677EB8C59BD219046DE492EABC7DF1
9D085C93C98D2A8DDC68AF0F5D7D82447ED6165A8DE95E6965A0F15A3F7696EA
E508CE290FD5B2FFA8A49A20B157645C3C3FEFBC64E2B40E75B90474094AF159
9689FA1EAB0D131F6DB991FC0D5943DE54CA9E5ECDA986A63CDF0394AF79DB39
8CE8AC4F02FDBD88EE6AE535CFB6C3B33C157AAFFBEC52BA3DACE77ABDA0C787
220FBA75DA1E45C945> |-
/C <1C60D8A8C9B78AC3254CB836613B50FEE731C2E5FF280A909853D6AAC757
04A475106F343DA61338D6EE17C81455E5E94E3F2741FBC5A7A55DD147D129E9
9F091EF153D9400A04C295AF15CFE8E5EF897CA1760331E3EC16FF6DDF59CBE4
B8B189FBC000E1020B39AD4C860C477A6DADD3B61FF9666F144B51FA295CD747
BE0B0975C46FB9A64CF31B5B38EC2E16C2393646605BF1D7CFFCC4A2898D2D56
C78772F400DB0DEED21E9AD336A75503A00BDBD615F8BA93E3CAB6C42A285B4A
EA5BF202EF5C37256592BD4040034E3A7EBDD1E055E2381646DDB411A05665A7
BE606403C9AFF5D744DFBFAE5AFB2DC42D9F6BC86ED0962C547BBABC78E279A5
3D52EEA95D4976CD7142776F2988E43A7BE44D2CDF85216C769CE74967C09EA4
8A353B8AE0C3F6529C709DBE56EBBF40E019180A2AC98F4F24B439D8B503726D
C1BB6799D23A36A5761BC46D9B39706FD587C314645EF07556EBA44DDF99582B
6E> |-
/l <1C60D8A8C9B874A685BEE6A5E28F9948AE1E7D147199A7FD5C3385C67EA3
BE0E4BDDEEBED94EEAEFFC708E6FBFBB110A4FD3B0B2C6A50B9DF51D26DA8F79
E50A98C439853420902774615E5C4AA802BC14286E49C6715A4394D046A1685B
7F2557950D872EDAE985E8B69D5B3A1679FE91E5F44DD94A755B4DC7CB2094A7
62633492> |-
/o <1C60D8A8C9B78181CF98F408291F4DD5CDCB6D065079E3C32B2DC7574F85
010122317EAC4CB787C5DCCAEA2DCDF59718E98AB798D0A7C1D0A4AFDAF28987
02DB340B4925E43E83E5146EC936D266F11A185F61F58114BA94B80C81D7D8DC
D3FC28BA75D8A38DA3AC10DA8DE7F6935CAB2D98F05D04B7C0D79A2CEACAB661
A11B789E89B6D4B148DC1A7CB3550A2956556AF6D6068A328964C77CAC19F987
75B69DBB8B2282422672CD9527E49182094C282B5043D56AD150402E5BC1D0FB
CC13812FC82AC63ACFCEEF5D77A3A595F46555D44C6632B4645C234C6CF48BE6
8F54878A59D4C863675CD2B4AF968FD7298C1FD09F77D9> |-
/r <1C60D8A8C9B8096E3702EF2E87B058AE842B207DEF574BB847CCD95112A7
D3AF2292BD58741562B9BCC6292F597F1D5EBCE0E807704FFEEE94A1C26C1217
A6936D01C623E2C5895684B5E303EB80975424515B84C7D69EC348651F11929D
BDB8CCFDA7B6F9C1B9009E28D94026AB5BD0038F56495AC64C32BF2B47869240
B887B12AEF109BCAC343F49ECBE16F183F080759D157DB3263D01310CAAE2C54
DDFFEC62D46A41ECF6143B8F31D2939D6A574F5434EA593BC099DA68B97E5EC7
884FCC239BC4456DDBC4F814CD1EB45CF26D8A7ABC526080AD2183CF51F78664
0C20279AD04AC16902E6B89034C7C376D1FE7A7CD7A590466C8F02B429577E18
2F4F0EAD1CF88B5E7E78E67C50CD4796431188A92962F05200A8DB3D5ACE7A4B
4F41560DE12E28A90ED4FC728B93C15758> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/OPDWMY+Calibri-Bold /ONKBAA+Calibri-Bold findfont ct_VMDictPut
/OPDWMY+Calibri-Bold*1 
[67{/.notdef}rp /C 40{/.notdef}rp /l 2{/.notdef}rp /o 2{/.notdef}rp /r 
141{/.notdef}rp]
OPDWMY+Calibri-Bold nf
OPDWMY+Calibri-Bold*1 [9.96 0 0 -9.96 0 0 ]msf
22.5267 12.4796 mo
(Color)
[5.27986 5.40025 2.3994 5.40025 0 ]xsh
grestore
gsave
2.36664 15.1195 mo
64.8857 15.1195 li
64.8857 2.87959 li
2.36664 2.87959 li
2.36664 15.1195 li
clp
false sop
.137422 .122799 .126081 rgb
%ADOBeginSubsetFont: ONKBAA+Calibri-Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
systemdict begin
OPDWMY+Calibri-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B888C146> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OPDWMY+Calibri-Bold /Encoding get
dup 32 /space put
pop
%ADOEndSubsetFont
/OPDWMY+Calibri-Bold*1 
[32{/.notdef}rp /space 34{/.notdef}rp /C 40{/.notdef}rp /l 2{/.notdef}rp /o 
2{/.notdef}rp /r 141{/.notdef}rp]
OPDWMY+Calibri-Bold nf
OPDWMY+Calibri-Bold*1 [9.96 0 0 -9.96 0 0 ]msf
44.6067 12.4796 mo
( )sh
grestore
gsave
65.3667 15.1195 mo
186.687 15.1195 li
186.687 2.87959 li
65.3667 2.87959 li
65.3667 15.1195 li
clp
false sop
.137422 .122799 .126081 rgb
%ADOBeginSubsetFont: ONKBAA+Calibri-Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
systemdict begin
OPDWMY+Calibri-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/D <1C60D8A8C9B66B395FA10874C49903C5BA5D8A11648D789575D5BDD1F662
23F5068AFB07B7D4A6F562CA3B74B13B5EA917B7C1AD358BE09BEB4E72893350
C36BDE7853C8F59B15C9C7D4DF300E1CF389834D73F73BEAFCCB36018862705A
4AA45264E1F40B031B51D9E2D256C5A222096B45098A61598A49246878A44E20
B4E2650D94107FDA3430A83D1D935A730ADC0CB97EA2F81591EE89713F0A5E7D
91B0AB952FB896B549D9AF25BF5D9521D347CC> |-
/g <1C60D8A8C9B741FC33483764299A12FECF5B424B921F1638B418D49AD8CC
9963C63B3AA219A5D4BE1E61602E0A46D9B7EFE172316C6D5B892D6ADDE5D252
8F58404262014692776607ED9FEF376902580B8C02BD731773D6FB7F2B7E8EB8
5C23FCC5E1AF9DFBBC90E2E61912ECD90630A69F23FF0B8C4EE724E61487824F
0AD0E39D6070F4E4045884E75A2063D1947EBCB0E10D1BE681823C4CDB758BE7
63EF892DC6733924007429A4A2787F28FEA57B2FFB5ABDDFA7D9E9074D9F3756
D6F34C0CF43B19360B382394D183AF45B0B3B98FC3F1D24257EBFF530F2F277B
17FA1E0C87E667FD5F85997B524610195116A8FE72672B292B06D63E095A2E86
A919F48751EA4D1B00566804965EA47D6EEDA872F76C4297F60EB4DB86C215A3
ABBA39D53700A0373989904046CD6FF12E13667085134B6D432AC6DF8D6B8D4A
1E48A3CB9A9B89F04E1FA7F186F4239393424E4D2D80048B3B74D449F9056EFD
A684BFA5A5756929753C434B4ECBD6DA1C66BD87629F33C7FB19CC2BFD390673
2A4B9F90C757E2A2AD993D4CCBB93191D5606033A5FB35BDD63214D3B0478ED8
768EC2FD124C41DB78452CEBD65904535C9E7E425B9032F384103F708FC89C61
68EB599D175B46EF0FF68E2E1C705DCAA4668D7FE56C29AE86E26C1109490736
A57C4139D482B4A559434FC9EA8FE3D7CF06BDE7DB76036EF6D4AD6F172AEC1A
B158F9> |-
/i <1C60D8A8C9B874A685BEE7073E3D9BEB2350BB486AC62AB5FFB3F3055796
FFA7201F6E4CDF32059564C619C9CC449E2E13D3438C6F3A00A8C33DF67EED72
B4A703E19615397FBD65B8F41AB93A2D076C7948B4D6A7E1920548D052C7AB18
31CD8F1E6F01CDE398A3464141E18D2DB8A524CC3BE1885811A2FA4464E9BFA4
4F3B137A209AC07BC2D4DC8265BE2C3CDB96FC76B4E494C7989F89FD865B563D
37857FCA1A5FB165B3A362BB87A93EC69254C2AAA91985E82347B6547083A306
CE> |-
/s <1C60D8A8C9B70C3961F94CC53AE3C44F5C46AC95D939CE1FE52948C4EEE7
85E0FF2F5DF6799D25AA3A56FE93A6DDD98DB4188430DEDDFD51DDDD0EC4FB2D
10B9991F4B7C4CB67E794966F2D33D75FB1F2DDE6EFD4602642CFD9DACD32FA3
6EDA8C51397D987B567B7680BA36338AB94FBCABA34B92422BB4A6BB2CBE6206
F57AA0A2A8A2C374FA199F756B8C6892CB5299CACCD25A505726792E9EDF4479
2CB8DB652BC2C1E7DA21138C5E5015116A1741E17007ED6C22C23344D4AB6862
1949E14CE8A88829C82C8B15CED1FB4CCBFE9D40DE0799FB0EF64F8A219CA309
825B69AD031354812E61F884D22EE3AACEE031A6653B1519602284061900E2F8
27432CCC337FB59A551E141C30CC55CE4632D5C31E3FC4C5BA252294FEB6FD80
75BB079C3F24431E8D5C774D59E09AC7C64BB8C53AB6E9F8C7BB53DE483CF423
4705F7D8C8DAE52A381BB24528B826C29FDDB8CF4F5222BFD577514759571983
51D7133DAADA661E1D1810802FDA79930F2C9526AA05D8290ED2102740497D73
44C308314BA0C891CD0738B84DA16A83588E2CD4B55EB551DFD1259DA456FC99
12D108BF1E0B750B68510C7DC36D8861FED79A1710E9E95C8C80B37227AD97F0
B3CDDD> |-
/t <1C60D8A8C9B811DA5D4543EFE763FE07FB96B6C57E1041B720B12395755A
D170E1C95BCAF4A2E07F08B3527B85FB4B749D3F56190F68B968E525451C3AE3
228733358D3B0A4C671159FB2D66F4623773F95AB53B6E5F82C4D1162EF1F1D4
E57FDA1EEF70327DBE4F94D4CA953DA49B009A6CE451FDF5FD819F6892B657B7
073F3DB90026C98348CDA83213F5FE3803287637443B9875961ADEC93A662F36
7D30B1D64FEC94C3B7D13A776301EC9C6F446E01C4556C7599D35348744BB4C0
7BEDF72B7B19A9909847F0BA47C222B2E533F87C4B7AA516B5A1E0E7365242B5
879EFE81A74993AD272F8F9838C2A26DF98C12A45718CB59AC62E5107E8E34F2
7910F2367476C7C04E0E4233AFE86333074EFF0032ECDB6435F19DBFBCDB19D0
579CF4055335373B7C3C1BD559B22725F49EA0166722B1401585> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OPDWMY+Calibri-Bold /Encoding get
dup 68 /D put
dup 103 /g put
dup 105 /i put
dup 115 /s put
dup 116 /t put
pop
%ADOEndSubsetFont
/OPDWMY+Calibri-Bold*1 
[32{/.notdef}rp /space 34{/.notdef}rp /C /D 34{/.notdef}rp /g /.notdef 
/i 2{/.notdef}rp /l 2{/.notdef}rp /o 2{/.notdef}rp /r /s 
/t 139{/.notdef}rp]
OPDWMY+Calibri-Bold nf
OPDWMY+Calibri-Bold*1 [9.96 0 0 -9.96 0 0 ]msf
114.327 12.4796 mo
(Digits)
[6.23502 2.5199 4.6812 2.40036 3.47903 0 ]xsh
grestore
gsave
65.3667 15.1195 mo
186.687 15.1195 li
186.687 2.87959 li
65.3667 2.87959 li
65.3667 15.1195 li
clp
false sop
.137422 .122799 .126081 rgb
OPDWMY+Calibri-Bold*1 [9.96 0 0 -9.96 0 0 ]msf
137.727 12.4796 mo
( )sh
grestore
gsave
187.167 15.1195 mo
276.327 15.1195 li
276.327 2.87959 li
187.167 2.87959 li
187.167 15.1195 li
clp
false sop
.137422 .122799 .126081 rgb
%ADOBeginSubsetFont: ONKBAA+Calibri-Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
systemdict begin
OPDWMY+Calibri-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/M <1C60D8A8C9B69F2EDC57251C098CD494497F9B27194FB941BAEBBFCF67DA
468CE7126865CFA25F226DFD40C157E80D1E6900C376BA8BC9DC47B3111C3A2C
D936AC8EC362BD24ED74F642515609D1C548907C5A1CDCADA83FAA2E203936CD
43067EFBE431C5F6A9F1C54FA865F37B94E12BAE34D11E926760BF310C17B2CE
06E3D9CA51D2CDAE57290F2C0E51E689DD3CF7F162E13246FD68DE31ADED7654
844D6F16DD1C60B43CBAAE0BADB905E9902A259EA8BD8FB7086C09F8F0B477B0
A845988A188A5E96A72E7AD3EE7686FB5FCB80E70073858768D75997C754CB9C
9D55A01464323F19DDCED74648DEA355AF857FC34746DE585A82906FDE1212C1
9591617D74A65399EEA7419B90CC120A94EF1CB8C35CC45B7CB54CC43612522A
C61EB82DBCB150F072182572BD2E99E351C000C5A8C1DDE6C3EA6FE78C06CD77
A518> |-
/e <1C60D8A8C9B7A4C86C545A4AC8A7D7F6C345E834CA1213E882E926387794
826A205EEEE689D37E8FC5A261291E47A8EB37515D6AFF3E8D4C2927EEA10BDE
E7B9C51B7C7E29EC21F969487478C80B6DD492C8CB06797735DBFAA0767835E1
6CF60557FF99669574049AC02AF815FE3A71EC95AE08115F25C3E55D5B1FD10C
A1E741534F0E60416081D7FA16D9DFEF57FF91FD82FC7BA4FB9689D718D9A71D
ED1EF9DCA51AF0BBC79B40093EF91CBC3D8C48A3FDFEA41B5047A65EAFDD5AF1
021F9C948AAB35D583226126C585E079DEB6D479075845CECA8ED7ED10944C11
C924501DD381B71E2F7690C30AF54ADDDF92DD4099EA219A54E3CF84E276FA78
71C8A6ED23473DBBAA6EDA7BEF929816C1760D14417F454980C243ACB7FEEE42
2DBAD62FF97870FD2250B1790169B64F76> |-
/p <1C60D8A8C9B78256DD05CEB4DA9E965AB07EBB69AB364D14F4B8A1E6129E
1A1B57A9F6AF54A3080C4C156F4713FDECBA67C18FBD4873468229BF2E56E475
55C842162EA8AFD838229FDC9DDEF310896F702CA81E89654B1920C456B61229
04925826DCCF02D5C1E273B9B70F686A52F233CB0BF53CA99DE0726AB8843AE1
8A2F544EEFCCB9368EBBD2EAF30818B845E8A149610E23EA632E165F5F7A4520
EBF45E5F0A7C6C568F3780A23188579ACA934B1151F60150BE69611E3BBA1C15
169CC459A53E1BC79B4E95D0D1E38FE34738BA484CC420DDF487453BC7EA44E7
585361232849BCEDF40AAC7FE11F5957D235AD9EDF320D6585B01D68C46BE5D9
691D1F0D2A2633C87BEE9F7062A178C86B69B109CEB96764C1C8FBD01DA9DDE3
6AB596536073622CAD7E9206511E05DBC09A13A3DCE8DBA476EE29BA282BA829
67374BCFCA66C6C7134003DFF5B8CBD8A2DF42CA27C9663DE571271A8218E1F5
A8F5301D> |-
/u <1C60D8A8C9B78256DD14A9D4CFBED1BDC0F18C95C4082E386E4202EC316A
773D8A30F080ADEC91D0110972258C98F99D057AA4BEADF7377C0737CBC02B02
83A44BC0695ADE1B267F48E12CE2216B2E9CE1F46FA8F6A7E394206FAB10EC5A
9623D4E38E3233F4B79961F3FC497A2341DE4C19EF987B2BBD60C6954F7C2A66
BFAC441FC6EF5D70CAE4B9D18C6C234C845D9B5C1128E01D7EED3EBACBCEAA81
555CE1104ABBEE3361A0DA732C15BFA88A8DC8AC2892954D8120CDA8D9F901B3
8677E84A025079FEBC3F90CA210E453321C393CC904D5039FFAB58A79ABCF1EF
3103597A64D9EFE158B9CA965B63D2279CEC94C047DCAAE96F0583EF883AECBA
4354D2178D47E9266659EB4ED782FE0D3BB7E0DF2E8F26E4> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OPDWMY+Calibri-Bold /Encoding get
dup 77 /M put
dup 101 /e put
dup 112 /p put
dup 117 /u put
pop
%ADOEndSubsetFont
/OPDWMY+Calibri-Bold*1 
[32{/.notdef}rp /space 34{/.notdef}rp /C /D 8{/.notdef}rp /M 23{/.notdef}rp 
/e /.notdef /g /.notdef /i 2{/.notdef}rp /l 2{/.notdef}rp 
/o /p /.notdef /r /s /t /u 138{/.notdef}rp]
OPDWMY+Calibri-Bold nf
OPDWMY+Calibri-Bold*1 [9.96 0 0 -9.96 0 0 ]msf
211.047 12.4796 mo
(Multiplier)
[8.75974 5.40036 2.40036 3.48004 2.40039 5.40033 2.40039 2.40036 5.03983 0 ]xsh
grestore
gsave
187.167 15.1195 mo
276.327 15.1195 li
276.327 2.87959 li
187.167 2.87959 li
187.167 15.1195 li
clp
false sop
.137422 .122799 .126081 rgb
OPDWMY+Calibri-Bold*1 [9.96 0 0 -9.96 0 0 ]msf
252.447 12.4796 mo
( )sh
grestore
gsave
276.927 15.1195 mo
343.887 15.1195 li
343.887 2.87959 li
276.927 2.87959 li
276.927 15.1195 li
clp
false sop
.137422 .122799 .126081 rgb
%ADOBeginSubsetFont: ONKBAA+Calibri-Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
systemdict begin
OPDWMY+Calibri-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/T <1C60D8A8C9B7AC352685EBF0C70CC299C781505881750549B1329E325E48
906D6144E4F2B8FADCE07AE09672A94B6042B3746FEC4270EC99DA196999FD36
B24CF260547D3D85E1C92CEF863DA0F5138E37E3009356FCB5DEC98DF9343267
13DE1955741FD457C6A79D71D77EECD67D7BFD3D3EB12C39414487AF3B4E9613
5DE9D2C5920A006C6765D689980A7C77873CD78C6B4E821034B8E7EED35F6A2E
87E34A17C1BBFC596185D90F9C080897916508E299FCE09F3295EF2CE5720E2B
2D1B9374706152A4> |-
/a <1C60D8A8C9B7AD0A34D5A33DA54D708C09070E3263DB3F8B204742934F45
464C864E5219DC64C17C21334728C70A28136E97F8B50DED54E9169E494DCFFB
E08054CD1ABEDFE9442047B18ABC511F07776D5525C7536F54A7020A4D066604
44EA4587557797F3D30E946423D7B549AB2AE4911FA9B4137E2A2722357A506A
6A05F91A214894E28FEC6B492CDF90F6872AAE0C40180F5DD11FF249C62B7437
E3A71BA232F3D2872FD555E1C9AC4E7F4B48457EB6186F604DC3EE6103F0F881
A966A4A53DB93C1C7AD28044A61CF0FCE7D40BA68015641BB746FB7DDE0D2F13
5B3E72C27DE147EB6127162600CEE2FE996BF71B8B39FDE57DFC392DDA09C4BF
60254D74CA373499967C5100501D06A31B9AF30F8F868E5E3B054E309214BEED
4F999B3B55712B0FD812D6575581ED3C4A080C3FC359594852C6FA23B784C4DB
4B1AC424E90B4505E356F1C575F8C57FE52642AA261D219ED5B82760638581CA
02> |-
/c <1C60D8A8C9B719BD263F1C66E176AB1A9B9A5A3A8367D7DDD55624575D83
30769E89EDE2B210CAC0C33466D934E07EE8C5D0A40F156D15CC57AF923B2505
73D6A3F9259B0A3431793F366C2A4E1951E4FEDD7CFAEAA854A72A9831B3A189
34A1E3BA67B1825DD68D168A926FEDC2EA7260DFA821668535829AE8FBDD7974
81380CC39C4AF2C6ECADB05FF3DA8E4A111EB4A3E3B59FFB126A3A37C4B5A113
868987F4611BA41E12178776F476582469050F58D9C2434F2F75015CEE522ED8
E12899B67502531E8AB98B42F667383D35B65B55576BE7A1323FDACE70DEAB60
FF6C739F5C1FBD6BC404A862F611E798DE5F7D20626F50E2F0A84DB6262D7AA2
98F592743052BB8FB5A0340AD9FF86B3B347A6731F17F7E35046670F71F40967
A7BFAB9BA0179B380201FC6F3EA37CFED86A9E1255880201A87ECC18F17716BB
9085A306CE> |-
/n <1C60D8A8C9B78256DD09855002C1F642102EC28B82F48E21B28CD8D11618
04F5A9A747AD2624D941564B1DAE90411653B58E89369C53390A39373C180E92
1901CFF6CB5B97D1E2F6881105A39AF049AF7BAB6A1217A5C2B8A9279563CA12
76FC02BACD1EEE8432C4000AF8AC8B81C2B3B82F6968BF9741308293C4341FD8
C1BF06F82527B4BB1BFEB05C7AAE16687F72280798047F2DE0F0B0C1A73D4FFE
FAEDFA40DAB27F9393250746B607E6DD1B8488942E5E65DC28EF4BF61000038A
490B102DA889E711AC446FA2AE5AF546DC759185DC2C75747BB2C76E9F900921
B79B64F414F07BA72B97757066640FBFE321B86C7EC04E0E0AD1B078011E4790
36E3D4D1746C4387436B0F75E38AB678D2BFE9BAAAF021F8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OPDWMY+Calibri-Bold /Encoding get
dup 84 /T put
dup 97 /a put
dup 99 /c put
dup 110 /n put
pop
%ADOEndSubsetFont
/OPDWMY+Calibri-Bold*1 
[32{/.notdef}rp /space 34{/.notdef}rp /C /D 8{/.notdef}rp /M 6{/.notdef}rp 
/T 12{/.notdef}rp /a /.notdef /c /.notdef /e /.notdef 
/g /.notdef /i 2{/.notdef}rp /l /.notdef /n /o 
/p /.notdef /r /s /t /u 138{/.notdef}rp]
OPDWMY+Calibri-Bold nf
OPDWMY+Calibri-Bold*1 [9.96 0 0 -9.96 0 0 ]msf
289.767 12.4796 mo
(Tolerance)
[4.9202 5.39926 2.40039 5.03979 3.59952 4.92026 5.40036 4.2001 0 ]xsh
grestore
gsave
276.927 15.1195 mo
343.887 15.1195 li
343.887 2.87959 li
276.927 2.87959 li
276.927 15.1195 li
clp
false sop
.137422 .122799 .126081 rgb
OPDWMY+Calibri-Bold*1 [9.96 0 0 -9.96 0 0 ]msf
330.687 12.4796 mo
( )sh
grestore
1.88667 2.87958 mo
2.36768 2.87958 li
2.36768 2.3996 li
1.88667 2.3996 li
cp
false sop
.137422 .122799 .126081 rgb
f
1.88667 2.87958 mo
2.36768 2.87958 li
2.36768 2.3996 li
1.88667 2.3996 li
cp
f
2.36668 2.87958 mo
64.8857 2.87958 li
64.8857 2.3996 li
2.36668 2.3996 li
cp
f
64.8867 2.87958 mo
65.3677 2.87958 li
65.3677 2.3996 li
64.8867 2.3996 li
cp
f
65.3667 2.87958 mo
186.687 2.87958 li
186.687 2.3996 li
65.3667 2.3996 li
cp
f
186.687 2.87958 mo
187.167 2.87958 li
187.167 2.3996 li
186.687 2.3996 li
cp
f
187.167 2.87958 mo
276.447 2.87958 li
276.447 2.3996 li
187.167 2.3996 li
cp
f
276.447 2.87958 mo
276.927 2.87958 li
276.927 2.3996 li
276.447 2.3996 li
cp
f
276.927 2.87958 mo
343.887 2.87958 li
343.887 2.3996 li
276.927 2.3996 li
cp
f
343.887 2.87958 mo
344.368 2.87958 li
344.368 2.3996 li
343.887 2.3996 li
cp
f
343.887 2.87958 mo
344.368 2.87958 li
344.368 2.3996 li
343.887 2.3996 li
cp
f
1.88667 15.1196 mo
2.36768 15.1196 li
2.36768 2.87958 li
1.88667 2.87958 li
cp
f
64.8867 15.1196 mo
65.3677 15.1196 li
65.3677 2.87958 li
64.8867 2.87958 li
cp
f
186.687 15.1196 mo
187.167 15.1196 li
187.167 2.87958 li
186.687 2.87958 li
cp
f
276.447 15.1196 mo
276.927 15.1196 li
276.927 2.87958 li
276.447 2.87958 li
cp
f
343.887 15.1196 mo
344.368 15.1196 li
344.368 2.87958 li
343.887 2.87958 li
cp
f
2.36668 27.8396 mo
64.8867 27.8396 li
64.8867 15.5996 li
2.36668 15.5996 li
cp
.862551 .867103 .872214 rgb
ef
7.52667 27.8396 mo
59.7267 27.8396 li
59.7267 15.5996 li
7.52667 15.5996 li
cp
f
gsave
2.36664 27.8396 mo
64.8857 27.8396 li
64.8857 15.5996 li
2.36664 15.5996 li
2.36664 27.8396 li
clp
.137422 .122799 .126081 rgb
%ADOBeginSubsetFont: XOSAAA+Calibri Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /XOSAAA+Calibri def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 83 /S put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 114 /r put
dup 118 /v put
def
/FontBBox {-503 -312 1240 1026} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
7 dict dup begin
/.notdef <1C60D8A8C9B7A086528E2CBE7FD4F03CC1C545DFC3C53F52C69233
4252531335C4AFD91E9493A7B9787114ADBF50CAD0D8D8F4E0FD112CA0EDC244
BC77AFB35E52902467E4B7D65BC23E8AB084EE08EDC3C9FE17948A4E93ECA5D5
D8A99AF099DAB98A96A7EEC3487AD5909F63F36A9F52E364FE794F0586CEACB0
693AEA3E3B131EDB924E9018AC085D5D058B3A8419D5096479413ADE107D9F53
02816818EECEB683CD82FAAA79E358EAA71283CC02664EE09C62BDF6E0D9BC98
D9F308DF8AEA61A9B7C090BD7FD96A3223C7AE0D3D1A8F2E623FA6B7C467CA6F
ECDBA0B792188DFEEBD3D01BCE6CC077D778842DE1B5E36F7F8EB4C68A439269
E0981B28AD1790AA058065E4B6AD27A659E12C7322A5BE1E7DF9729C0030192F
3688A380035351BB0945D5DC7515959F458727E2B8854977E466D6DDC900E997
B52F6BAB4C73A178A3B47EBB3C3FC842F51CC6E114336F3E4E5E72B20D8F94A7
BA3BA965E83BF37BAA664C34B8502BB9E9B9BEDD7EBC5DCBC4FFF5EBCA9C0324
49885D42A9DCCBA2A816B59D7978373DF4208E5608F69A2EAF492AC156CC637D
5A11AF573B17CF9F38> |-
/S <1C60D8A8C9B770DA42E8D37F1E32882D4AD6464D850106A0DE7A83B47F0E
C65143E84B8F9887D8EF560BBB7DAED9582F38B6974AE06071D74243DE04377A
9E38C603D44A0AA623BF84EDE575A39EAD4593C4B3F424F5317061A5AEF0FCBD
5198E5F9AB43FD8C228E541FA391BADB0ACDBD5FBBD08EBCA2700B6A1105DB45
395D242F8C44AC433C3725A9D5F6A91B5DF820F4E2F6E66101242BAA426ABA58
4BF91A7E8CBD825612324F28F3BB6B5F4B6A98D5678C5683C423898401C97DB6
AEBB3B08F0E49015B8C09294559F0324646775C30687BA8725A301A8E7ACA559
E180CD1BA525300AD3D8DFA8A8C34309FA6E01CA0BA9F33D60D410C3785C9A35
A4D33DC4DA697FAAF83556B3BAF038631153B21CFA05AC7F6B965B6C9DD580EC
DAA5E19D631487362428CB6C15F8951776CB9C454AE2ECDA7CED1F00599F6057
8050870FD9F672ABB02F7641BFFDFC908D98DE75282B9085EDCE585EED996ACD
325E186C6CC942676730FDB64EACBC2CC9670AC8631DB84FE5F13182767EAE21
F9BC28BA89B244DFD720C9DF35E92F57747BB59E5AF5F4663BAF9B03DC716D74
DBD0D4D1BB2703443369B43A50F5B2916833184106C2158995BEF98CEF08C3DF
5A6182> |-
/e <1C60D8A8C9B7A9C0DC897A849B356D31E2254DD2E5BDA9320580C3E0839C
715C00D9D27B634D4BEEF0FE1F6AD3CCFBCCE9FDE38A84A563FB744619F62FCB
F09ACBF7337FE050BE068BCA744FAC4471C4195B7CEC353B3CAECCCEC91AAE22
E8955469041D97A8837F9398CE520ABB35C688EEF4229957FD92C79439BF99D2
4AD4D8B3CAC5B975D966AB01856E8FAEAE3BEB03E1CC76DF299391134BFB02DD
61F6D73B2AAAA0D725ABCA9FE504FB3A1EC1E2449C5D921F0DE45A9278013CF0
832F39E3771D2B318D27AFF5849066ED5A64AA8E3E404B520DE5F08BE74DD8D5
8BD1B0FA461EBCBB4DC632B680CFAE62B61DD4FC04FC017D59147CB2E0FBEAAF
A402B5BFBD0C4F13F4BD9227D1353527A23B3EF7CA3E7F599CB51DDAF43A5674
78E4C81011D9D8D5DAD9CB1F948F5FCE67> |-
/i <1C60D8A8C9B887F0644B8F9A77200B5B21E7A46843656F48CC872DF3AFB5
8D86B9B1B70DF0F8BF4F1A9D845350075385C2FAC40F64A57A633024956B42D2
D155265D68692B1DD96FCB1CFEA6F03B67B191D75D9251636A71B366F484AC7D
D61A648087A690F42FCD56728047D5F145B28180BC49A70304D616C17E08688B
C2AB34D235D029750826D6A02D57888DCAF080A15DCB2D8AE91CB7938E088D74
26B3BCAD6531F243F29763FBDE3F087E3965B6148DD52590D1BA20021D15293C
FC> |-
/l <1C60D8A8C9B887F0644B8EDF7E394B2B17D648B60040EB6DBE2B8847CEEB
752ACB6F5AD37E1FA4A050E94786AD18088ED8DC4464B0DE1BE6F00A802A61F4
A34EAA84659717045B37042963C71284B8AC29AE9E0F8305F213AE4489E2DB55
EC12AFE94E44F64596D135D1BEB997D5B9A0BB5A35AE0E0CE05B7B1F89372931
9FB81429> |-
/r <1C60D8A8C9B80F37F21112BA81A46E1A1A16E843530DEF66F6901DB9A722
A358478F1B0799F6041BFFF7D05EE602307D474F1DB84BF73C4EC1FF13A4D2D5
B370042C9A314A700782F944BCE36786AFBD72FA62259FABABA90F1F2BE008B7
993D5E1813324C60BD953524A1040FB1A790007846FA5DED6ACE6C7D436FF1C0
B97E4BBDDDA28F066E204B37F8321753E1473DDD8EE76C12A0011B04832F5C47
D3FF30EE31FE70EF82623D628622FAE52A70984ACD43F9718BC02CE5AA3F5832
FAB343FD6D53F2375C811D54E6B415E257D8BB3A2542930D7E0D6DF96FAA0688
822B6655966904164F87FA904C272BFAD51FAFF11CA14EBB5F6472235CA20889
D111211CF90F83807D99EF12B3B6827C1CA4720D03729BEEEA22A1313C4BDCE8
78453F5E6DCAD449D1F3B7D54D32C49DA0> |-
/v <1C60D8A8C9B77771B09AD302B4CB2C18543FBB2E7E6342969838CF2C3340
35065E921A40A75882974808107F0F5C3AC1CD7A10BA6075C83F1DE48B37CB4A
8C976EF88D75006F44747CDCEE5069475B014DB29A6BE7A1F25A9ABA2642AE0B
12F169B7C26C5BB2C6831FDDDADD15DE53220C2A354D3DB65E39662BC3F52DBE
3E6F55BA2941DB48175EDD867619C5C4F72AF6BDE0336B64DD708A70A9B30434
46299A2061A5B31F71BCE056DDAEEEA357563374E361165ED57E4A9861B82CE2
6F9B6BF6D6DD8B8E105752A19647DA81C937CF2BEAF032E992A09CE082764919
EAB1094210448A121FEB79BB41C951E6B43D3384AE29644009EB9FEBB553A8B9
5EE31D86> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/OPDWMZ+Calibri /XOSAAA+Calibri findfont ct_VMDictPut
/OPDWMZ+Calibri*1 
[83{/.notdef}rp /S 17{/.notdef}rp /e 3{/.notdef}rp /i 2{/.notdef}rp /l 
5{/.notdef}rp /r 3{/.notdef}rp /v 137{/.notdef}rp]
OPDWMZ+Calibri nf
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
22.5267 25.1996 mo
(Silver)
[4.56168 2.28088 2.27988 4.55965 4.92026 0 ]xsh
grestore
gsave
2.36664 27.8396 mo
64.8857 27.8396 li
64.8857 15.5996 li
2.36664 15.5996 li
2.36664 27.8396 li
clp
.137422 .122799 .126081 rgb
%ADOBeginSubsetFont: XOSAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
systemdict begin
OPDWMZ+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B888C146> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OPDWMZ+Calibri /Encoding get
dup 32 /space put
pop
%ADOEndSubsetFont
/OPDWMZ+Calibri*1 
[32{/.notdef}rp /space 50{/.notdef}rp /S 17{/.notdef}rp /e 3{/.notdef}rp /i 
2{/.notdef}rp /l 5{/.notdef}rp /r 3{/.notdef}rp /v 137{/.notdef}rp]
OPDWMZ+Calibri nf
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
44.7267 25.1996 mo
( )sh
grestore
65.3667 40.5596 mo
105.327 40.5596 li
105.327 15.5995 li
65.3667 15.5995 li
cp
1 1 1 rgb
ef
70.5267 27.8396 mo
100.167 27.8396 li
100.167 15.5996 li
70.5267 15.5996 li
cp
f
gsave
65.3667 40.5596 mo
105.327 40.5596 li
105.327 15.5986 li
65.3667 15.5986 li
65.3667 40.5596 li
clp
.137422 .122799 .126081 rgb
%ADOBeginSubsetFont: XOSAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
systemdict begin
OPDWMZ+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/one <1C60D8A8C9B7A0860A305D7D1540DECC7BE2F83965065BA1F58088FE75
1F51768999AF3CB0CBD98712B4A20A30CFDD23F3D718AE6664545AA64C90E87A
977C061638AE7B9844BD53D39E1CD919540EC0AFC0ADDD639213BAA3C2156ECF
4D5FEFDF4B77C92C9A62F21FEF596A47F254F30F662D97990A276CD1E50761DD
9D07D78B626617E74128BC5D647B42ED807FE6DD0588AD25D211834DAC9410A0
AEBD06E6565C1DCBD86013B11A7BE0A2010B12635869FAC3323D92D6BCCC10D0
2550F431D6753E5E6C65DB63D883AF6BCE4C75C5A66BF9AE47A5570BA4B61C57
63C152A7FDEC11C0C748631E999D604A7F2938BB57220CBE02AE758E60183316
61C475AA9DED7C59> |-
/s <1C60D8A8C9B7347873EC11B675AA6F6B461106EA2C61A0AE571750A08267
9294B529694EFA74202690239BCD02BDE93B33BD8DE0F0F0056B04093EE6C4E8
3D6F00E22E61E0A53509E628E3614EF2EF2CA3A8502F22A560E46ED3E4AED0BF
D271CCE464114B6332D17C4A046EF74FFF1283283A642C8C06B85A0D72357B56
65CD862A8E3D30EFFEE242F88B9C12DF917A74252DB462B49970474974786963
8F8FD8E70AF4405F95B11DFD154B7101933A31068AA1E65CC021277CCB9EC0EA
A7B978A081D1A4252A6693984AAF2CEC4413666DCF8B310A71A67C6E7B1DB954
E186EA16C83551DD0516966C156876A3DE36ED7253FFBBC1504668DC98301370
300A04E6753189718288CD7EF0ED409765A888272FDB25977C8A74BC113E188B
3DF6A69F7851A7E60496291AA0B15532572787EAC7F32F09F1E72589E0E74E03
49313472D872E64E7DB78BAB05598FE04B70E52D818F2F7B0B56A5688299352E
62F16B011595A7D7701FD641BB2FCFCADB2E33263B8A208C4183E753AD5C2586
1BF542F2009EA70BB7A67B3BE61085D37469DCDCB97CB2B41A0E2B4DB3BE67C2
BA9A1482E51611AB708AAB8BC978B06758006F3287DD3A3CABA09A9F59A21B0D
386F88> |-
/t <1C60D8A8C9B81D89610FFBFD2F87712D18AB3F2201A6640C86A2CD8B533C
9E9613B748962BD3321D998A13FF4A410946A55D4AE3CDBD806BF0BBD38F8435
DE762245288A30426FF012946D0E2E36D4EBD7E81C44D06926164FB6F91AA67E
EAF9AC4BC77C470E117D4634F7F90C1771292F30769DD575DD5B3F0D104730DE
CDCF41E7D59747B6A2D0EF143B06FA6BBA4F9E744BD6E4827C627C6619571415
1061BE64BA6B45A36E91B80557E1CF613697CA2B60F02790B7CBE3BBB5ABEC19
0F88D2844D8139B7D141D834706D11BA3108576C531B823977B908AC9FF80DF3
22060C351BA43A8EA770319D1AF8085E209B940EDEE1B85419EF87F01EED1C4E
0307B2BC95989AC0998A9EA8A0DFB99539E7D0B836F4EB9E9D6147AFB55082A1
E63F64D57A8E7F63465BA308FA03AEB2787221627AF8F99523DB260C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OPDWMZ+Calibri /Encoding get
dup 49 /one put
dup 115 /s put
dup 116 /t put
pop
%ADOEndSubsetFont
/OPDWMZ+Calibri*1 
[32{/.notdef}rp /space 16{/.notdef}rp /one 33{/.notdef}rp /S 17{/.notdef}rp /e 
3{/.notdef}rp /i 2{/.notdef}rp /l 5{/.notdef}rp /r /s /t 
/.notdef /v 137{/.notdef}rp]
OPDWMZ+Calibri nf
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
79.1667 25.1996 mo
(1st)
[5.03979 3.84064 0 ]xsh
grestore
gsave
65.3667 40.5596 mo
105.327 40.5596 li
105.327 15.5986 li
65.3667 15.5986 li
65.3667 40.5596 li
clp
.137422 .122799 .126081 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
91.5267 25.1996 mo
( )sh
grestore
105.927 40.5596 mo
145.887 40.5596 li
145.887 15.5995 li
105.927 15.5995 li
cp
ef
110.967 27.8396 mo
140.727 27.8396 li
140.727 15.5996 li
110.967 15.5996 li
cp
f
gsave
105.927 40.5596 mo
145.887 40.5596 li
145.887 15.5986 li
105.927 15.5986 li
105.927 40.5596 li
clp
.137422 .122799 .126081 rgb
%ADOBeginSubsetFont: XOSAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
systemdict begin
OPDWMZ+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B7A0860A3F41F4B5F8C84A302144D2A68052268BA33C08F1
4E9024203A43F9861DB1372AE620C85B5997156713B3D52B841947202E77B0C2
CB414A698B86ABC8A4E75821012456D5020DA227DFEF8C5D8DB95EBE919EE715
28F7186EAF21E351CBD957516793A596628548012B490542857EE9AD26B93BE0
9822488FFA92D417AEC74A1F7CD3F4086D2106FC51C85A2037F2B9A0C7F20F95
265886609863A1C5F24DF7B0A900E498DA2F78FC8847FC48711DA5F7718C543A
B1317AD922AE297322A814FAE4926A273690C557D10E81AE194D331B49C1AE8C
81F09FF9C6C0138B7CA170F398B4828657BCD8F518515EBEE88F3E7CAAF8D53D
FF51CD8B58FC43A0393FF3BAAC61C4C54BAED846AB03C5029732B46B642E71B9
F477640318C582068EEDAD42004E409178DCD37800E9D052502DD85B334EBD67
9CA70294673E8EE8A3969E138989BAAC7D6DF5921118D0D203FDC015CB80084F
99BE2DC9C90C6E2171BED79C2858C6> |-
/d <1C60D8A8C9B78E05EAA3CECCCC7ABA6A35E55F211820F669BFFF2D107F3F
003F84456D947B5557966A2009812B81B51372EB70EB729C8C82B63A473DB516
1C83385AAD04B71C9D388B2F86E7C2E91E06E59E76C532F8A600B530589A218B
CA1E889366120C885033631C7850C65A7F9274D24F9BF6FA89E174B53B0E1A2C
F6D783F32D4C0BE4ACD3EEAF66A8BEC8DB7AC7ADBF3C9CDF5485D002662D310A
CCD320AD0234A2F2251E7C0B1667BFFC7E10EE40C7CB623518E3E168137CE699
E133B767C86E16CACCA64A58BD9D7F6E66BED6D6FE5D80E0381141549FFB2FBF
94ECD2D262EB097909F9092B71E3573FC9B4FD273505C685B327AE9095A2A155
45986A397AE2796BDB3888D16AF3DD82BF32621BC8C1393814540227FC926F77
872F2FAF5DD33717EB461ACFE3EE5C279294EBB5AADC09C8B10C3F2CB25CCD97
C6> |-
/n <1C60D8A8C9B78E05EAADB0123115B3BD5BA83FAABE276A1BF5A23DB55CF4
C30D8A20FB7C70B167834EB1FCB2A451DA55CBA774B9C40CA48F3B7AD8E41B3F
0C2665E2AF85619561E070ABE3E4EFEC9983825210D2A0599E48D162F3133798
2CE0D843D2D41F1F7924A343E37439CC75937984C88A0080C28B8BFBFB8F444A
FA11CBAA4BCF4C8D3087770F88F26B0A8B30E46AE29C6BF9720949C50E19D624
8BB58DE961D63651843F9B3B8EE9AA75CDE28D1F95D7703116FE7AA23945B580
8B97F9947888D114BE2523F872057145410E975A2CA83D430B49A7CAE2661901
2C2444BEBF6DC1397EFC38FADD0435CE6D4A1478744BC983827B31CF502C4487
AF1E48BBC2EB6153C1C5367B96A212BCD3FEE3B9DEC12C4E> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OPDWMZ+Calibri /Encoding get
dup 50 /two put
dup 100 /d put
dup 110 /n put
pop
%ADOEndSubsetFont
/OPDWMZ+Calibri*1 
[32{/.notdef}rp /space 16{/.notdef}rp /one /two 32{/.notdef}rp /S 16{/.notdef}rp 
/d /e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n 
3{/.notdef}rp /r /s /t /.notdef /v 137{/.notdef}rp]
OPDWMZ+Calibri nf
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
117.927 25.1996 mo
(2nd)
[5.03979 5.28075 0 ]xsh
grestore
gsave
105.927 40.5596 mo
145.887 40.5596 li
145.887 15.5986 li
105.927 15.5986 li
105.927 40.5596 li
clp
.137422 .122799 .126081 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
133.527 25.1996 mo
( )sh
grestore
146.367 40.5596 mo
186.687 40.5596 li
186.687 15.5995 li
146.367 15.5995 li
cp
.578984 .587127 .597516 rgb
ef
151.527 23.3996 mo
181.527 23.3996 li
181.527 15.5996 li
151.527 15.5996 li
cp
f
gsave
146.367 40.5596 mo
186.687 40.5596 li
186.687 15.5986 li
146.367 15.5986 li
146.367 40.5596 li
clp
.137422 .122799 .126081 rgb
%ADOBeginSubsetFont: XOSAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
systemdict begin
OPDWMZ+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7A0860A2FEF09FCB80607108B3B71A30E2FFE5A0F53F1
F3CE33E25BDD9A37F12480657F287B11234D872A9341B8D761BAC5B337758ED3
4FBDB0155B2DB8FB089986F2CBFC580855A552E4E7BA3E50F802AF5BABA1A72C
62BC1E6D108EEB3A3C66741F416B352CC414FB931072A8C5863DBBAA93C49B22
4ADC9F8CAA75F5C9BFEB2915D3505CD6144D20AF6779286AAF407AAC26D69248
C394FBB9BF32373F684ACA2E19C0F36192202ACAF72B1025D6F0CF7066494E82
7BB306A2A776E0F2B6F3F0E76AC8A13169FA8D6AD525762CBAE08E1976BA0FA8
68484244B2C6286C74EE91A2C98728E442E286200142B1A5906E7DF9201821B2
7907537A9A18D5757AABAE23C46953763B0140A749D71AFB31CB71FE8CEB3596
B5D9F27628C8660D823DA7A912BCD8F676248CEB1E8BAEB1BE8A438B018DEAB6
2C462D1458D0606C924EBCEC79E3D916B8F995C300564C3F71FF08DB1F5BD306
FF743BF5E6C612870C09ECDB532B05A7DD75F09723F8164F23FA51923DA26610
7C0EB4976641F969687AA087A6CC3FBA3B6B49CB68C88F765064561D586CDB15
837CCCDF95B1ED2288DB0948C8291CEF223BB458BF8475B7D75BEC1205D90B55
55DC2429D51153DF3C83901B6982E60F7C7F061954215DB5FAEB8718AB7756E4
DAA99626BD231EE3CF4090380F8238B83D56E35DB5099A025EA0320D1A3DE89D
5285DD> |-
/g <1C60D8A8C9B7445140600976780BBEB6A3D2658D3A4C7F919C88C52D412C
8E364C5F7636792196FD221C121AC8A143979AFAA3A09359F0F2A21E651450F6
F05ACC0E82C2760ECA4A653600DE52AE0D5358458AF930D6BDEB0904E4313A0C
BCA78B5C6EE35CCCF928264F350C0A023EDD3B664C736748E408C524202A3326
D95C7DCABC59764E7D97C53C3E04189FF055F0A0F707215CE9EBCE6A5429EBED
17A701726A8DEDD69C85101530BFD06F1546D47732DA28D5440C29DB9FD39281
2122E25828F7402340CB2AAD1BBC054F22EBE3B4068E1189E1BBFDEDCE3380BE
2A1BC64D61665F8EA89BD12E55203D2F412C82771F2C0ABF3E56A249110A5F4D
FD7E943B7CBB3957D78564ABEBC14037C62116307C9CC2770007504568A496F0
E371B5E27EA91CE4ED6B158CDD56E512A87B38DA763ADE44907E57CB7229D283
C8A7D867519E31285088BE518A70B9193ED1297DE2FF3E929169124C3A44E72E
DA1A3B2C0E0DA57F0E79BC1C7BEFED8509DD8CC00683DBCDE9C2A776B95D5831
197913BF75A301F1EB13F5C4E48D99B31FDB0B54BB7B640060AFF7A1619C4EE7
C3CA0DE734198387C7205D8F2F952A1BC7A9DB628AB7F298888007AA604549FA
9EA5ECD6ED4A814A52FD636085B1A8D57F31E70472C30EB60858254A7B95E2F6
778797B84C60B2ED0823FE7265B0CE1B1A64D8F159C443134DC16E39D207947A
0FD5903276> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OPDWMZ+Calibri /Encoding get
dup 51 /three put
dup 103 /g put
pop
%ADOEndSubsetFont
/OPDWMZ+Calibri*1 
[32{/.notdef}rp /space 16{/.notdef}rp /one /two /three 31{/.notdef}rp /S 
16{/.notdef}rp /d /e /.notdef /g /.notdef /i 2{/.notdef}rp 
/l /.notdef /n 3{/.notdef}rp /r /s /t /.notdef 
/v 137{/.notdef}rp]
OPDWMZ+Calibri nf
OPDWMZ+Calibri*1 [8.04 0 0 -8.04 0 0 ]msf
151.527 21.7196 mo
(3rd digit )
[4.08032 2.75772 4.20004 1.80093 4.20007 1.80017 3.83984 1.8002 2.63959 0 ]xsh
grestore
151.527 31.1996 mo
181.527 31.1996 li
181.527 23.3996 li
151.527 23.3996 li
cp
ef
.137422 .122799 .126081 rgb
%ADOBeginSubsetFont: XOSAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
systemdict begin
OPDWMZ+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/f <1C60D8A8C9B83BB8632FB1D3D91BD66E5512F6DD2CCB59074315803E2F43
0B096626F50C9126DF15B1D22935F28B97AB5D3B7DB8B1B8EC17F9868DFC8B9B
A6A909CA8727D3C9D8FCF13C3B6D5F4F33EA07DFD158F20416D4C6EEC8FD3EF1
4FC86346A94355FA1C2B6FA55C0124FFA9705858D4628EE39DA0E3A156A386DF
00613D8189EFFC0AEADC5BE3915D9C022BA6356303A46539775608C62B3D24CB
372AF4E663162E7C4ACC81D2F2C5F206BB702A5D73C1A974C0BFD7875757B79A
A73010AE51501D97B980E0F2ACE1EF1ED3F60A9C6E02B8D29057E3D98A685003
06E46C9A2B914F56A55773A150BF63B33B5E351FC714462135973FE682DBCBC0
C1B38B7A71A2F4C684D75344384C54C140B13A70313E2F4EDF68E127B4C55F26
525A530E7BB82AEC944EFDC27B6BB93FA6C499E5069AA3B6387EF0576DB7B6BE
E15BB0B269E8ACB562> |-
/o <1C60D8A8C9B78C66ECF3075BCC0F7D87F2E9EA9E473D66D53E6D1735C12E
AC0562A2F6FB428E7F7051A3A7B2D4CA6ED90F77808579359B7E539B5388F6F5
4555E1422B5F329989100C1CD5239E87FECD85E14E914ADC27391A1F5624B31E
E69A68B9016D73D6A01A100E004523AC53318A2FC2260E74BA80D4ABD1433EC6
7800CC9F77763DCF8156EA5CA478ABF1FAF7864EAD55939BE7FA4A9E8660CE98
DDE8CBC35F3FFF4E5C2DA4A292CE30D82057E70A8562AFB17C90FC331A4C46B4
8C7BBCED55DB7F94D559D534C59FF211B5A85F0207876BD8D6B2C7BBBC06964A
16F72BBAE841F001B71209E6C81DC64817ADE625E8FF> |-
/y <1C60D8A8C9B776A06C625D9575F6DBFFEE93EC1CB9A335325BD9E365428E
EA1BD5B7A305D96437BF24D2E59BF0DFE2360EDCA01120D4DA769624265DE986
6EA970971BD84B20E81D769B1F13D7A21674FB5E8C4844518680BB1DE710B743
8090302965C932285C6A137B1923CFCED74D1C71B686BDF1263BE348B2F06F53
4EDA8A2856376F820F03A76FD878686946B3B179B9CD823AA55541A535E0CCC6
D2D21B3D6A73597DDD43BBEFD829B55A26664F2F8221FA6814449CF6D0CFA134
92A2A7CF82E9D18F6E0413> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OPDWMZ+Calibri /Encoding get
dup 102 /f put
dup 111 /o put
dup 121 /y put
pop
%ADOEndSubsetFont
/OPDWMZ+Calibri*1 
[32{/.notdef}rp /space 16{/.notdef}rp /one /two /three 31{/.notdef}rp /S 
16{/.notdef}rp /d /e /f /g /.notdef /i 2{/.notdef}rp 
/l /.notdef /n /o 2{/.notdef}rp /r /s /t 
/.notdef /v 2{/.notdef}rp /y 134{/.notdef}rp]
OPDWMZ+Calibri nf
OPDWMZ+Calibri*1 [8.04 0 0 -8.04 0 0 ]msf
151.527 29.5196 mo
(only for )
[4.19681 4.20007 1.80096 3.60196 1.80093 2.3999 4.19681 2.87991 0 ]xsh
151.527 38.9996 mo
181.527 38.9996 li
181.527 31.1996 li
151.527 31.1996 li
cp
.578984 .587127 .597516 rgb
ef
.137422 .122799 .126081 rgb
%ADOBeginSubsetFont: XOSAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
systemdict begin
OPDWMZ+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/five <1C60D8A8C9B7A0860A2FEF2204D5F6595F7308551A6818CDF94E88E3B
51B4BFE590C6C493EDCD8FEAF219DF0A81427DD4448B9AA3D521907C381F007F
90EAA6BC6813C5ECBAAF3D43E8D7ECD68BE462C6609F3ACF35A15EAD8FA724A3
9F8FF3985AE57C3EE7F2468EE63E1FB60462E54FAAE1AC468FACAB6388343391
78434A5708D879091BB754334B9583D4A5B182F7341B7C5532CBD4850F827BD4
7C22464ADF744DC69CDD73CE1B847A119D178326C1D936B2671B4F66DB4C82AB
BF0998D204C6B2C54A8D1373452768F53CE9B8820F53D8324A8C20B1220EC9CC
36BAB88FC34DC3CEFE67B448F164F98C88B484017D4F4837C386AA9084C55574
5CF40FCBA2F2E48A2601177A6F7710FB1E609D9618B1B59141D82B990F422233
CFE27E6C13ACAEB970E79830DB3E2D7CCF772EC4469F50BF2745AF6F98962532
A3064E83D5AB1B0D7166D20C01E1963E937E8AD71B78DC8903FAA6A9997FA20C
8> |-
/a <1C60D8A8C9B75CBB53379352952B97D633633CE49B1F5650B8155AFDFA57
F94D359804093E4912F3B89577762AB5877203F1CDAD240C521DE74183EDA105
01967DB6487C182138B12C453C5DB9629F7EF021028117511EFEAB941896E32D
9CC68D6E66540771999A4E30C4826A52D7536EDDF7E00016C895CE43408B44BE
33E2D9A6163827E05AB8B1144BC909A74F6D7828DE6E08164A25E320920E3540
20A41D59E9E3B008A20EC107F9E18745DE21F9AF293EB0F319B529D840D8BA93
19522EDDCACA13336C059581181C082BF0D7F4117FAEB429D871E099AEE4394F
ED2FB3A1C712D1799055BA832AD846B95DA8BB4E63B103C908FA309FAA3B7814
0CE2A22AE06B2A1EA5BD3AA13DD1ED75DA4AD37493780FE662EF5D1B53C4AF41
845C0C77655CE94F0C9DEBE29248A1EAAF3A6EA79D5BB5C090457B818DD62F70
E197CEA94F90229AB4FD685A1ADB5E4E4C1DBDB28AA3854323EE2FD22692EC70> |-
/b <1C60D8A8C9B78E05EA9D9733F4614DDE4F3CCBD772458631C06B9585CEC3
067196C085285D4EBCA830523DBA980A7903E7CCB9545952E933EA287D309550
0A08B5FF1250FB2472C48AA643F9948B713834174A32233FFD00CE8E2A02CD92
CD0EB36D86747ABA3C4EE4A7096B26460185FCF827CE5E1862348B87101A5C9D
384541120A40C8C71F0748956E48EF5E095EAD17FBE5B28249366E6BEAFC298E
E015C31B731D6166501448A2851B390CD5E1032DCB65F726222BA5085B034CFC
917DC36E2C73558D1FCD108B1B305D16C97136B39697A594C46D2F068CC61EBC
8B61EEBACA2E9B9971F359DB93A6910B3669C04870AE086A03B453BCE1E9F2C9
24C2B94631466A458EB1B3FD708C18C058A8B05845E2D231DD130E2BCA4DCE6C
A2C90256ED106A2B8A867758EB2E1D464AB1AA657324F30AFED658994E772592
420FD616D7BD6885B5350E3F2A59010B037CCEDD5B3D83A476690BED59BBD82D
D2D74F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OPDWMZ+Calibri /Encoding get
dup 53 /five put
dup 97 /a put
dup 98 /b put
pop
%ADOEndSubsetFont
/OPDWMZ+Calibri*1 
[32{/.notdef}rp /space 16{/.notdef}rp /one /two /three /.notdef /five 
29{/.notdef}rp /S 13{/.notdef}rp /a /b /.notdef /d /e 
/f /g /.notdef /i 2{/.notdef}rp /l /.notdef /n 
/o 2{/.notdef}rp /r /s /t /.notdef /v 2{/.notdef}rp 
/y 134{/.notdef}rp]
OPDWMZ+Calibri nf
OPDWMZ+Calibri*1 [8.04 0 0 -8.04 0 0 ]msf
151.527 37.3196 mo
(5 bands)
[4.08032 1.80096 4.19681 3.84076 4.19681 4.19684 0 ]xsh
176.959 37.3196 mo
( )sh
187.167 27.8396 mo
236.127 27.8396 li
236.127 15.5996 li
187.167 15.5996 li
cp
.862551 .867103 .872214 rgb
ef
192.327 27.8396 mo
230.727 27.8396 li
230.727 15.5996 li
192.327 15.5996 li
cp
f
gsave
187.167 27.8396 mo
236.127 27.8396 li
236.127 15.5996 li
187.167 15.5996 li
187.167 27.8396 li
clp
.137422 .122799 .126081 rgb
%ADOBeginSubsetFont: NKWBAA+CambriaMath Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /NKWBAA+CambriaMath def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 215 /multiply put
def
/FontBBox {-1475 -2464 2868 3117} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/.notdef <1C60D8A8C9B6472030318CD4127C796377DABFD8006FC8CD7AAF10
86964F20EE651118638C13AC909581621FA1FBAC552E6A16F7B4972529EBE8A8
0E782DD8AB05FDEEBDFC49979639D0FF68DCB6E7F422169AA9A2DB1DEF4F4B41
3623F5F563C56D612D674F82D41A71448843BD967EEE7B9B5E5851CDE54BA365
2F7BDEAFCDD43D27FDE0DE42D02A7D2B502434D5DE03C37B40825A9A0E097F17
F78368B6C52A18DA8C4E8168AC56AD15BCF0B69C17FC31C7A04A95D974197259
FB36AE72A5300CDD86C2372DFF50F7695D6D8E6898504FD1B1E5E543A89FFBE6
0F42D9B97A8DA995D7DC487489AC6073B6078ACF7C0324D45E66DA26D3EFF341
1DA7FD9C5DE33005> |-
/multiply <1C60D8A8C9B63FB74F1CED7EE013354496CC7EE8472ACE2A1D5DC
419071CDD0E525630A7BEC517B060AD6A5A59D22411D73BEAEC469D0DDEEC769
79EE7CD> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/OPDWNA+CambriaMath /NKWBAA+CambriaMath findfont ct_VMDictPut
/OPDWNA+CambriaMath*1 
[215{/.notdef}rp /multiply 40{/.notdef}rp]
OPDWNA+CambriaMath nf
OPDWNA+CambriaMath*1 [9.96 0 0 -9.96 0 0 ]msf
192.327 25.1996 mo
(\327)sh
grestore
gsave
187.167 27.8396 mo
236.127 27.8396 li
236.127 15.5996 li
187.167 15.5996 li
187.167 27.8396 li
clp
.137422 .122799 .126081 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
199.527 25.1996 mo
( )sh
grestore
gsave
187.167 27.8396 mo
236.127 27.8396 li
236.127 15.5996 li
187.167 15.5996 li
187.167 27.8396 li
clp
.137422 .122799 .126081 rgb
%ADOBeginSubsetFont: XOSAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
systemdict begin
OPDWMZ+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/period <1C60D8A8C9B86ED904792469819B411F782D644953F5FB87FEF6645
79CE5AF47E01D6D9A7DF6EB24F15E9AD1EE074A41E03462D7DE0F1E92BD9640F
3458F7DADF49E5D4EB0B3> |-
/zero <1C60D8A8C9B7A0860A0ABA2698AC8E090156BBF2C9C30ADDAE7DCB3D9
7848CC5D38A5C6D85B8937F2533AAB8D6BFA0DD62B7BCE11E4F148006AA53F16
B7661785227AEDEF098A1104625EF68DF52BAE87BC71C0E793E6FAD1A965E4D3
8BA9CF4CEDAADD0504EE4CE20EF80FE3B0F494717869AEF9FD48C1A316DF08AD
A9E5D4CE0C25CB68B43C1EB2B9FE55F89B0B22C758BDED5FDD580CE702C559F6
E1F276FBE929DD9A2C3557CE4E2CABBF3EDF814307556BE2579995A57ECC922B
3376DB39CC4DC2518F12025BDC7A3EE507BE357864FDBF8F62FBD571913B8657
13255C738D4AEB39D8820C2AC5F5D7DF55CB64B7CD192349742D481F16CF8009
5A893636D91177B06233710432F07D42A84BDDC> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OPDWMZ+Calibri /Encoding get
dup 46 /period put
dup 48 /zero put
pop
%ADOEndSubsetFont
/OPDWMZ+Calibri*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /.notdef /five 29{/.notdef}rp /S 13{/.notdef}rp /a /b 
/.notdef /d /e /f /g /.notdef /i 2{/.notdef}rp 
/l /.notdef /n /o 2{/.notdef}rp /r /s /t 
/.notdef /v 2{/.notdef}rp /y 134{/.notdef}rp]
OPDWMZ+Calibri nf
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
201.807 25.1996 mo
(0.01)
[5.03979 2.51987 5.03979 0 ]xsh
grestore
gsave
187.167 27.8396 mo
236.127 27.8396 li
236.127 15.5996 li
187.167 15.5996 li
187.167 27.8396 li
clp
.137422 .122799 .126081 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
219.567 25.1996 mo
( )sh
grestore
236.127 27.8396 mo
276.327 27.8396 li
276.327 15.5996 li
236.127 15.5996 li
cp
ef
241.527 27.8396 mo
271.167 27.8396 li
271.167 15.5996 li
241.527 15.5996 li
cp
f
gsave
236.127 27.8396 mo
276.327 27.8396 li
276.327 15.5996 li
236.127 15.5996 li
236.127 27.8396 li
clp
.137422 .122799 .126081 rgb
%ADOBeginSubsetFont: XOSAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
systemdict begin
OPDWMZ+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenleft <1C60D8A8C9B83D5FF27DA8D8E6046A27BA23CC1486AB72A59E47
AACC8161CC74CDD95CC2A654D5856D60A8DC5F8C184EC1ABC4D1D2160575FE6D
70949B41A6CABCFACD73360CFC5DA53716AD56E7BCBA30E5CBADDBCE536F92B4
EFC10AF93D5AA400F7912003F9E093421F683C28EAAC53C2248A1C92A4ADDC6F
6F189A13C295B6CA124F9A4CA4E40FBBF41FDD3287A0301EBE9D805D7A4030F8
18C18B05D8592B2DBF59F7F26BA45EDE7B24A816E6CC3105B053A64C91913E22
DD3F66D2B695F53F3F722E2F8096827FF689C16601C625CCC1> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OPDWMZ+Calibri /Encoding get
dup 40 /parenleft put
pop
%ADOEndSubsetFont
/OPDWMZ+Calibri*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft 5{/.notdef}rp /period /.notdef /zero 
/one /two /three /.notdef /five 29{/.notdef}rp /S 13{/.notdef}rp 
/a /b /.notdef /d /e /f /g /.notdef 
/i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r 
/s /t /.notdef /v 2{/.notdef}rp /y 134{/.notdef}rp]
OPDWMZ+Calibri nf
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
249.687 25.1996 mo
(\(10)
[2.99789 5.03979 0 ]xsh
grestore
gsave
236.127 27.8396 mo
276.327 27.8396 li
276.327 15.5996 li
236.127 15.5996 li
236.127 27.8396 li
clp
.137422 .122799 .126081 rgb
%ADOBeginSubsetFont: XOSAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
systemdict begin
OPDWMZ+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/hyphen <1C60D8A8C9B83844CBABF75256C23589A050D2F18EC6AAEA2DCAA87
9D629F0698E85A7558DC3794B984219238EC694626573D368F005AA7EB3DEDB5
5CE7021DF056336AEE3D77182F0055C3CB6954365C7523BFC42E70B7DCDE95A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OPDWMZ+Calibri /Encoding get
dup 45 /hyphen put
pop
%ADOEndSubsetFont
/OPDWMZ+Calibri*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft 4{/.notdef}rp /hyphen /period /.notdef 
/zero /one /two /three /.notdef /five 29{/.notdef}rp /S 
13{/.notdef}rp /a /b /.notdef /d /e /f /g 
/.notdef /i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp 
/r /s /t /.notdef /v 2{/.notdef}rp /y 134{/.notdef}rp]
OPDWMZ+Calibri nf
OPDWMZ+Calibri*1 [6.48 0 0 -6.48 0 0 ]msf
262.767 21.7196 mo
(-)sh
grestore
gsave
236.127 27.8396 mo
276.327 27.8396 li
276.327 15.5996 li
236.127 15.5996 li
236.127 27.8396 li
clp
.137422 .122799 .126081 rgb
OPDWMZ+Calibri*1 [6.48 0 0 -6.48 0 0 ]msf
264.807 21.7196 mo
(2)sh
grestore
gsave
236.127 27.8396 mo
276.327 27.8396 li
276.327 15.5996 li
236.127 15.5996 li
236.127 27.8396 li
clp
.137422 .122799 .126081 rgb
%ADOBeginSubsetFont: XOSAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
systemdict begin
OPDWMZ+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenright <1C60D8A8C9B83D5FF29F44B652980D05B9EE187D926BB2CE034
E7CDFB42233F20EA0B6A7D3053EB0C035C6C189F4DA6B49B40A0EB0636B7ACA2
CF42792FC2164693E9F6F7B6636D9708884EE48CE23B1AFB94FA912772ABED4A
B22E20E0410244F282681ABF0BF3F1FF921D275AD5C6D7F8F439D5D0B2BAD1CB
D8078F961EB6B7FB4BFFE77692BCE19880B8A84987A61F63B3F03252C231FCBB
5CB61DBA6789BB581DA0ED1802F2C6AAE0EF2092080B688E21E45FC07A90B21E
AB8701889CC58EAA06C962B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OPDWMZ+Calibri /Encoding get
dup 41 /parenright put
pop
%ADOEndSubsetFont
/OPDWMZ+Calibri*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period 
/.notdef /zero /one /two /three /.notdef /five 29{/.notdef}rp 
/S 13{/.notdef}rp /a /b /.notdef /d /e /f 
/g /.notdef /i 2{/.notdef}rp /l /.notdef /n /o 
2{/.notdef}rp /r /s /t /.notdef /v 2{/.notdef}rp /y 
134{/.notdef}rp]
OPDWMZ+Calibri nf
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
268.047 25.1996 mo
(\))sh
grestore
gsave
236.127 27.8396 mo
276.327 27.8396 li
276.327 15.5996 li
236.127 15.5996 li
236.127 27.8396 li
clp
.137422 .122799 .126081 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
271.167 25.1996 mo
( )sh
grestore
276.687 27.8396 mo
343.887 27.8396 li
343.887 15.5996 li
276.687 15.5996 li
cp
ef
290.967 27.8396 mo
338.367 27.8396 li
338.367 15.5996 li
290.967 15.5996 li
cp
f
gsave
276.687 27.8396 mo
343.886 27.8396 li
343.886 15.5996 li
276.687 15.5996 li
276.687 27.8396 li
clp
.137422 .122799 .126081 rgb
%ADOBeginSubsetFont: XOSAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
systemdict begin
OPDWMZ+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/percent <1C60D8A8C9B63EE6F5D0F8E8857DEF63A4C78302049BD3378A9B47
67666DB5D76909B83C1802AB4BD05F8A439F54CD59982BB9E01B6C217E9ABF55
C50C04A661C8A57A6AF9968219CF67B5B37E19E022BB913B7CB997F113B9B6FA
3A4D8A629DF3221EAB9A9243C2824700BFB06F6767DC5F9B7110DA49243F857E
16F39518AD36E03E13B86ADF6693886ABB6FDB94A799F94E13FC1DF142192BA4
4DDB2D10AB180DB19C316A42F7CC30DE3A0FE02FA0A8BE5A8B51A0AABA03B237
6CE7E2FF50F901F69088D0E1D8B486BDF51E71C2E958ECE066641929E830FC34
11C475C8D8FEC82C6DDEA4F0FCD47AF104E9645D4CE3CC0981A3E7DD309BAFAA
D4EB9750328D64DFDE68D3F29A605203BB5B5BA464622658266C0CC2BAFE6EB5
057A1141126FBBEA83FF4EDDA8E2DCE5CC66D1831D5FF726C8B862D89DC81273
8FA040868BE1FB06A77BAB7A32BDDCAE4443F4D5482A8DCE2603DA8C69DD3DB9
E3E4CE70E62078343C686F687E928A873C5B8E3F5456B14DC2ED9CE3D52D0860
F8CE900949A7FB66A4290ED55FDB616153984214BDF59CC77D26DED32AEA5A1B
E118E850B3F6748A292D8A3D853CC77F409E772443F0BCA4A414DBD8769046F7
40F2E79BACA7B78742E4C34BF782EB8FDF83A5380F220D4165F90095954234EB
2D28020EBB08FB192BD5AF1ED69BC486E6BDA1114A651E2730A10435A538F0E7
B0710CF0C085C0032A1AEC979B6F5D8177284CEAEE9E64B8E263FB0E92C976B8
831A8ADC8F72FAE69DA88D5806F3FCE3F4F9FA61696659763D81AD06CD3CCC3E
D3CD0C7A55E742E3BF9DB24E8272495279F3C908A47542E825DB8324E7F9> |-
/plusminus <1C60D8A8C9B7A9C0DCBC55040B7DAAB1983AE5640AEE11F35A9B
46EB8A4CB86AD8231591D1038782458A6BFE6AA89CDE082BF7B054AF45AF2308
4DCB28E7094B5595E7A70B94C507B68E5DCBFF9FE921E281366E7305A6604441
52F8494C3A5BB5E51CA3CE56A2804F1653A4F418C6A3551223A77408D75E328E
A3383651D6279B5B978A52E3F497D8218E3D552D4640A114B1C0EB542122B030
568C49624A2ABCC2F20D3BFDBC32F2E4F1CDCBA6E44CD67482A62C9FC7161058
AFC7CF71A3E9300EED462C95BD288548D25D3E3EE74538568DC19C0ED1C37455
C230BD08AA41729AEFD5A2F0F922EE64CD4B99770A435EE8C926AFE5CD43BDEC
89054578E69CCDB4B2BAD02FF7572683A923E339D98BE3F6F04B2B4B98EB628F
3692AFA690C21422CADC7E64487DEE0BAE52444AFC81E0BD9DDCD2DCCAEE8F0C
1A322D5FA7B87B930BBC408820686319CDC81938D3E19952853946E39D593B07
C4E09CE7179B5C413CE6B936> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OPDWMZ+Calibri /Encoding get
dup 37 /percent put
dup 177 /plusminus put
pop
%ADOEndSubsetFont
/OPDWMZ+Calibri*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp 
/hyphen /period /.notdef /zero /one /two /three /.notdef 
/five 29{/.notdef}rp /S 13{/.notdef}rp /a /b /.notdef /d 
/e /f /g /.notdef /i 2{/.notdef}rp /l /.notdef 
/n /o 2{/.notdef}rp /r /s /t /.notdef /v 
2{/.notdef}rp /y 55{/.notdef}rp /plusminus 78{/.notdef}rp]
OPDWMZ+Calibri nf
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
290.967 25.1996 mo
(\261 10 %)
[4.92026 2.28082 5.03979 5.03979 2.28082 0 ]xsh
grestore
gsave
276.687 27.8396 mo
343.886 27.8396 li
343.886 15.5996 li
276.687 15.5996 li
276.687 27.8396 li
clp
.137422 .122799 .126081 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
317.727 25.1996 mo
( )sh
grestore
1.88667 15.5996 mo
2.36768 15.5996 li
2.36768 15.1196 li
1.88667 15.1196 li
cp
.137422 .122799 .126081 rgb
f
2.36668 15.5996 mo
64.8857 15.5996 li
64.8857 15.1196 li
2.36668 15.1196 li
cp
f
64.8867 15.5996 mo
65.3677 15.5996 li
65.3677 15.1196 li
64.8867 15.1196 li
cp
f
65.3667 15.5996 mo
105.447 15.5996 li
105.447 15.1196 li
65.3667 15.1196 li
cp
f
105.447 15.5996 mo
105.927 15.5996 li
105.927 15.1196 li
105.447 15.1196 li
cp
f
105.927 15.5996 mo
145.887 15.5996 li
145.887 15.1196 li
105.927 15.1196 li
cp
f
145.887 15.5996 mo
146.368 15.5996 li
146.368 15.1196 li
145.887 15.1196 li
cp
f
146.367 15.5996 mo
186.687 15.5996 li
186.687 15.1196 li
146.367 15.1196 li
cp
f
186.687 15.5996 mo
187.167 15.5996 li
187.167 15.1196 li
186.687 15.1196 li
cp
f
187.167 15.5996 mo
236.127 15.5996 li
236.127 15.1196 li
187.167 15.1196 li
cp
f
236.127 15.5996 mo
236.607 15.5996 li
236.607 15.1196 li
236.127 15.1196 li
cp
f
236.607 15.5996 mo
276.447 15.5996 li
276.447 15.1196 li
236.607 15.1196 li
cp
f
276.447 15.5996 mo
276.927 15.5996 li
276.927 15.1196 li
276.447 15.1196 li
cp
f
276.927 15.5996 mo
343.887 15.5996 li
343.887 15.1196 li
276.927 15.1196 li
cp
f
343.887 15.5996 mo
344.368 15.5996 li
344.368 15.1196 li
343.887 15.1196 li
cp
f
1.88667 27.8396 mo
2.36768 27.8396 li
2.36768 15.5996 li
1.88667 15.5996 li
cp
f
64.8867 27.8396 mo
65.3677 27.8396 li
65.3677 15.5996 li
64.8867 15.5996 li
cp
f
105.447 27.8396 mo
105.927 27.8396 li
105.927 15.5996 li
105.447 15.5996 li
cp
f
145.887 27.8396 mo
146.368 27.8396 li
146.368 15.5996 li
145.887 15.5996 li
cp
f
186.687 27.8396 mo
187.167 27.8396 li
187.167 15.5996 li
186.687 15.5996 li
cp
f
276.447 27.8396 mo
276.927 27.8396 li
276.927 15.5996 li
276.447 15.5996 li
cp
f
343.887 27.8396 mo
344.368 27.8396 li
344.368 15.5996 li
343.887 15.5996 li
cp
f
2.36668 40.5596 mo
64.8867 40.5596 li
64.8867 28.3196 li
2.36668 28.3196 li
cp
1 .863 0 rgb
ef
7.52667 40.5596 mo
59.7267 40.5596 li
59.7267 28.3196 li
7.52667 28.3196 li
cp
f
gsave
2.36664 40.5596 mo
64.8857 40.5596 li
64.8857 28.3195 li
2.36664 28.3195 li
2.36664 40.5596 li
clp
1 1 1 rgb
%ADOBeginSubsetFont: XOSAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
systemdict begin
OPDWMZ+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/G <1C60D8A8C9B66A6BA50E0427E25C5714ADB8C9B9CF0FC0CEF6EE73D1E99B
B48B900A90A8481CB0697FC364877CAB3F0BAC107A5985C7A4D22440DA86F4A9
72F9AFAD2B169D45864F0EB43DFECDDF9B48F748106257F4F8A2F98C4740F90E
153B966076108E686FDB751ED3AC53F21A2FAA2C75F9056AEA3EB40EDEB41C5F
72D0EF46D311E14708C0419D0AC71F5FE9C06FB58B47761CFB807462BB0A24A7
D0172F51822DC6883A662FC9DBBDBA3E8948059B6C4326073AC305C8231D1641
2AEBF639A030B98E67468E40FB37E8D82AB470D76A0B4CA1958F3AEDAB615CBB
F7723B110D3F305B8C697351253EF1C09371E19868671A0BEA47ECCFD73C997B
F454FFC2CF56E14355A442A5A8537BE7A8FA7927378E9DE7FF23A7517FA9A542
8764E2BD5DE89433E003ED402D46984E8DB49ADB11CDCBC4DD9C883C19F27BC2
FF3EC88E440D2AA6B8AEA249A1DEC56C08060C9516634A8A739E722F4CE20E07
C6ED145411FCB762CDFE27B9AA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OPDWMZ+Calibri /Encoding get
dup 71 /G put
pop
%ADOEndSubsetFont
/OPDWMZ+Calibri*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp 
/hyphen /period /.notdef /zero /one /two /three /.notdef 
/five 17{/.notdef}rp /G 11{/.notdef}rp /S 13{/.notdef}rp /a /b 
/.notdef /d /e /f /g /.notdef /i 2{/.notdef}rp 
/l /.notdef /n /o 2{/.notdef}rp /r /s /t 
/.notdef /v 2{/.notdef}rp /y 55{/.notdef}rp /plusminus 78{/.notdef}rp]
OPDWMZ+Calibri nf
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
24.0867 37.9196 mo
(Gold)
[6.23991 5.27972 2.27988 0 ]xsh
grestore
gsave
2.36664 40.5596 mo
64.8857 40.5596 li
64.8857 28.3195 li
2.36664 28.3195 li
2.36664 40.5596 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
43.1667 37.9196 mo
( )sh
grestore
187.167 40.5596 mo
236.127 40.5596 li
236.127 28.3196 li
187.167 28.3196 li
cp
ef
192.327 40.5596 mo
230.727 40.5596 li
230.727 28.3196 li
192.327 28.3196 li
cp
f
gsave
187.167 40.5596 mo
236.127 40.5596 li
236.127 28.3195 li
187.167 28.3195 li
187.167 40.5596 li
clp
1 1 1 rgb
OPDWNA+CambriaMath*1 [9.96 0 0 -9.96 0 0 ]msf
192.327 37.9196 mo
(\327)sh
grestore
gsave
187.167 40.5596 mo
236.127 40.5596 li
236.127 28.3195 li
187.167 28.3195 li
187.167 40.5596 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
199.527 37.9196 mo
( )sh
grestore
gsave
187.167 40.5596 mo
236.127 40.5596 li
236.127 28.3195 li
187.167 28.3195 li
187.167 40.5596 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
201.807 37.9196 mo
(0.1)
[5.03979 2.51987 0 ]xsh
grestore
gsave
187.167 40.5596 mo
236.127 40.5596 li
236.127 28.3195 li
187.167 28.3195 li
187.167 40.5596 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
214.407 37.9196 mo
( )sh
grestore
236.127 40.5596 mo
276.327 40.5596 li
276.327 28.3196 li
236.127 28.3196 li
cp
ef
241.527 40.5596 mo
271.167 40.5596 li
271.167 28.3196 li
241.527 28.3196 li
cp
f
gsave
236.127 40.5596 mo
276.327 40.5596 li
276.327 28.3195 li
236.127 28.3195 li
236.127 40.5596 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
249.687 37.9196 mo
(\(10)
[2.99789 5.03979 0 ]xsh
grestore
gsave
236.127 40.5596 mo
276.327 40.5596 li
276.327 28.3195 li
236.127 28.3195 li
236.127 40.5596 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [6.48 0 0 -6.48 0 0 ]msf
262.767 34.4396 mo
(-)sh
grestore
gsave
236.127 40.5596 mo
276.327 40.5596 li
276.327 28.3195 li
236.127 28.3195 li
236.127 40.5596 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [6.48 0 0 -6.48 0 0 ]msf
264.807 34.4396 mo
(1)sh
grestore
gsave
236.127 40.5596 mo
276.327 40.5596 li
276.327 28.3195 li
236.127 28.3195 li
236.127 40.5596 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
268.047 37.9196 mo
(\))sh
grestore
gsave
236.127 40.5596 mo
276.327 40.5596 li
276.327 28.3195 li
236.127 28.3195 li
236.127 40.5596 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
271.167 37.9196 mo
( )sh
grestore
276.687 40.5596 mo
343.887 40.5596 li
343.887 28.3196 li
276.687 28.3196 li
cp
ef
298.287 40.5596 mo
338.367 40.5596 li
338.367 28.3196 li
298.287 28.3196 li
cp
f
gsave
276.687 40.5596 mo
343.886 40.5596 li
343.886 28.3195 li
276.687 28.3195 li
276.687 40.5596 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
298.287 37.9196 mo
(\261 5 %)
[4.92026 2.28082 5.03979 2.28082 0 ]xsh
grestore
gsave
276.687 40.5596 mo
343.886 40.5596 li
343.886 28.3195 li
276.687 28.3195 li
276.687 40.5596 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
320.007 37.9196 mo
( )sh
grestore
1.88667 28.3196 mo
2.36768 28.3196 li
2.36768 27.8386 li
1.88667 27.8386 li
cp
.137422 .122799 .126081 rgb
f
2.36668 28.3196 mo
64.8857 28.3196 li
64.8857 27.8386 li
2.36668 27.8386 li
cp
f
64.8867 28.3196 mo
65.3677 28.3196 li
65.3677 27.8386 li
64.8867 27.8386 li
cp
f
105.447 28.3196 mo
105.927 28.3196 li
105.927 27.8386 li
105.447 27.8386 li
cp
f
145.887 28.3196 mo
146.368 28.3196 li
146.368 27.8386 li
145.887 27.8386 li
cp
f
186.687 28.3196 mo
187.167 28.3196 li
187.167 27.8386 li
186.687 27.8386 li
cp
f
187.167 28.3196 mo
236.127 28.3196 li
236.127 27.8386 li
187.167 27.8386 li
cp
f
236.127 28.3196 mo
236.607 28.3196 li
236.607 27.8386 li
236.127 27.8386 li
cp
f
236.607 28.3196 mo
276.447 28.3196 li
276.447 27.8386 li
236.607 27.8386 li
cp
f
276.447 28.3196 mo
276.927 28.3196 li
276.927 27.8386 li
276.447 27.8386 li
cp
f
276.927 28.3196 mo
343.887 28.3196 li
343.887 27.8386 li
276.927 27.8386 li
cp
f
343.887 28.3196 mo
344.368 28.3196 li
344.368 27.8386 li
343.887 27.8386 li
cp
f
1.88667 40.5596 mo
2.36768 40.5596 li
2.36768 28.3196 li
1.88667 28.3196 li
cp
f
64.8867 40.5596 mo
65.3677 40.5596 li
65.3677 28.3196 li
64.8867 28.3196 li
cp
f
105.447 40.5596 mo
105.927 40.5596 li
105.927 28.3196 li
105.447 28.3196 li
cp
f
145.887 40.5596 mo
146.368 40.5596 li
146.368 28.3196 li
145.887 28.3196 li
cp
f
186.687 40.5596 mo
187.167 40.5596 li
187.167 28.3196 li
186.687 28.3196 li
cp
f
276.447 40.5596 mo
276.927 40.5596 li
276.927 28.3196 li
276.447 28.3196 li
cp
f
343.887 40.5596 mo
344.368 40.5596 li
344.368 28.3196 li
343.887 28.3196 li
cp
f
2.36668 54.2396 mo
64.8867 54.2396 li
64.8867 41.9996 li
2.36668 41.9996 li
cp
ef
7.52667 54.2396 mo
59.7267 54.2396 li
59.7267 41.9996 li
7.52667 41.9996 li
cp
f
gsave
2.36664 54.2397 mo
64.8857 54.2397 li
64.8857 41.9996 li
2.36664 41.9996 li
2.36664 54.2397 li
clp
1 1 1 rgb
%ADOBeginSubsetFont: XOSAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
systemdict begin
OPDWMZ+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/B <1C60D8A8C9B79B8E992413FDCA75477B9D7B9A04CD6123BB6F56A9FDECC0
0D9728A7991DA2934283AC0CEE01FC1FAAD5EB3AB0B14B54FBF8D20FFC398F59
61BF67E7A7D450EE96781B748894F7B28CFF64B6593527AFD517F2D837CA2212
7DD5B8B5DB428B5B30E96423884A9CB2092018BDE5D89DBC68D24BAE5CC3C4CA
2C637AD8EB033D5467D7A9D9BAF78FE973C94976565C5D2795A0EC3A3D0ED4B2
39AE94024C38DD5873724B970E93378B9D3D02710DDE1A505B0750256D404196
0A6F260BE121BC86BDB3FAD0FD5614281E7C400CB879F57DCE47C8620F9E0415
32988A66665B85DB89629C041308B88332F00521D970DDDCE6253C763E0D7021
6AA72D02079885B99C4A6EC9DBDE6F226727E35DA85B8B692471F60F36D72376
FBB59FD143F405DF154BEFC61E6D3D4E9DA3C9684B5A0AF0E5428EF3B3A4> |-
/c <1C60D8A8C9B714A578818061920CBD3BB0F0FEC7EB28869C0269DBFC0262
5554E339FA8F23FF202BF6BBA51F73386176CF41E41162B391BD65C46864E1ED
BE38C4A175836382F89D1B282918F37F6A98A1C310371E84DC05CA4D214BBF40
D0904F28663CAA2B1AF41B75D4680E3731D792C10C395648F8CE6283B6D2EA4E
A25EB0077385CC26E37C0D4F9F091C8BC196661820383DC1CFC26D318A92B139
8AE8D24532A475AF0A93A6DC660BFF9F07C9678F9C3412071B0DAC612FC7D6B5
FAE3214E7C7AB18E3145411FCE0CA8B75D2C8C25C05252A375257E1693A2B9D1
1EE377C95BA1746CBCD896C9D8284A96EC1B8BEF12D6460B6828EC26350E91CC
593B47372BD95FFBF8C2322BFC435A5494ED398AAAE3E6E4293369CDCFAC0147
8225F7C60BA6A2722907E6FF92F4B9457F52836FAB37F27C55593B43AB457EA2
91D6DE23> |-
/k <1C60D8A8C9B7741C17C040FAF49715AF86267B27DBAE3194A95B5AD38B89
D87080BE0BB58EB11BB1E803576225E95586AD26F7B3D48F1476D58A2A86ABCA
434890634DF0C762F9C7E8BF973278771D68A2AB608CE3A494AF06CB6B758E30
92B2656DD102F8A88BFE70D0C2C45E36E8C5A354AE77BB4C9BFE5EBC116B51C4
E77B42DAC17192DF74E54FF0A0E8E65A4C44D1E8C03486D513E268A349A6666B
8D2CDEA67E5546A4296B6217CED1A53C88AEB021F8A41388EB02CAFBBF0D0089
75299F905C6726B8AA428B45A937A574480AA1CF753F93A4428CB2EBA3931191
4898272650C4BA4DDD9656B5AC379C0EC3487701AF2D0DE9556D9F04967DEABC
542665F11772DF361C1B5D5C1660B923FBE08FB5DD4C469DDCE72B7887844550
CCFC42576B209CD2E7> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OPDWMZ+Calibri /Encoding get
dup 66 /B put
dup 99 /c put
dup 107 /k put
pop
%ADOEndSubsetFont
/OPDWMZ+Calibri*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp 
/hyphen /period /.notdef /zero /one /two /three /.notdef 
/five 12{/.notdef}rp /B 4{/.notdef}rp /G 11{/.notdef}rp /S 13{/.notdef}rp 
/a /b /c /d /e /f /g /.notdef 
/i /.notdef /k /l /.notdef /n /o 2{/.notdef}rp 
/r /s /t /.notdef /v 2{/.notdef}rp /y 55{/.notdef}rp 
/plusminus 78{/.notdef}rp]
OPDWMZ+Calibri nf
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
22.8867 51.5996 mo
(Black)
[5.40038 2.27988 4.79977 4.20316 0 ]xsh
grestore
gsave
2.36664 54.2397 mo
64.8857 54.2397 li
64.8857 41.9996 li
2.36664 41.9996 li
2.36664 54.2397 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
44.2467 51.5996 mo
( )sh
grestore
65.3667 54.2396 mo
105.327 54.2396 li
105.327 41.9996 li
65.3667 41.9996 li
cp
ef
70.5267 54.2396 mo
100.167 54.2396 li
100.167 41.9996 li
70.5267 41.9996 li
cp
f
gsave
65.3667 54.2397 mo
105.327 54.2397 li
105.327 41.9996 li
65.3667 41.9996 li
65.3667 54.2397 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
82.7667 51.5996 mo
(0)sh
grestore
gsave
65.3667 54.2397 mo
105.327 54.2397 li
105.327 41.9996 li
65.3667 41.9996 li
65.3667 54.2397 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
87.8067 51.5996 mo
( )sh
grestore
105.927 54.2396 mo
145.887 54.2396 li
145.887 41.9996 li
105.927 41.9996 li
cp
ef
110.967 54.2396 mo
140.727 54.2396 li
140.727 41.9996 li
110.967 41.9996 li
cp
f
gsave
105.927 54.2397 mo
145.887 54.2397 li
145.887 41.9996 li
105.927 41.9996 li
105.927 54.2397 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
123.207 51.5996 mo
(0)sh
grestore
gsave
105.927 54.2397 mo
145.887 54.2397 li
145.887 41.9996 li
105.927 41.9996 li
105.927 54.2397 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
128.247 51.5996 mo
( )sh
grestore
146.367 54.2396 mo
186.687 54.2396 li
186.687 41.9996 li
146.367 41.9996 li
cp
ef
151.527 54.2396 mo
181.527 54.2396 li
181.527 41.9996 li
151.527 41.9996 li
cp
f
gsave
146.367 54.2397 mo
186.687 54.2397 li
186.687 41.9996 li
146.367 41.9996 li
146.367 54.2397 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
164.007 51.5996 mo
(0)sh
grestore
gsave
146.367 54.2397 mo
186.687 54.2397 li
186.687 41.9996 li
146.367 41.9996 li
146.367 54.2397 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
169.047 51.5996 mo
( )sh
grestore
187.167 54.2396 mo
236.127 54.2396 li
236.127 41.9996 li
187.167 41.9996 li
cp
ef
192.327 54.2396 mo
230.727 54.2396 li
230.727 41.9996 li
192.327 41.9996 li
cp
f
gsave
187.167 54.2397 mo
236.127 54.2397 li
236.127 41.9996 li
187.167 41.9996 li
187.167 54.2397 li
clp
1 1 1 rgb
OPDWNA+CambriaMath*1 [9.96 0 0 -9.96 0 0 ]msf
192.327 51.5996 mo
(\327)sh
grestore
gsave
187.167 54.2397 mo
236.127 54.2397 li
236.127 41.9996 li
187.167 41.9996 li
187.167 54.2397 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
199.527 51.5996 mo
( )sh
grestore
gsave
187.167 54.2397 mo
236.127 54.2397 li
236.127 41.9996 li
187.167 41.9996 li
187.167 54.2397 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
201.807 51.5996 mo
(1)sh
grestore
gsave
187.167 54.2397 mo
236.127 54.2397 li
236.127 41.9996 li
187.167 41.9996 li
187.167 54.2397 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
206.847 51.5996 mo
( )sh
grestore
236.127 54.2396 mo
276.327 54.2396 li
276.327 41.9996 li
236.127 41.9996 li
cp
ef
241.527 54.2396 mo
271.167 54.2396 li
271.167 41.9996 li
241.527 41.9996 li
cp
f
gsave
236.127 54.2397 mo
276.327 54.2397 li
276.327 41.9996 li
236.127 41.9996 li
236.127 54.2397 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
251.727 51.5996 mo
(\(10)
[2.99789 5.03979 0 ]xsh
grestore
gsave
236.127 54.2397 mo
276.327 54.2397 li
276.327 41.9996 li
236.127 41.9996 li
236.127 54.2397 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [6.48 0 0 -6.48 0 0 ]msf
264.807 48.1196 mo
(0)sh
grestore
gsave
236.127 54.2397 mo
276.327 54.2397 li
276.327 41.9996 li
236.127 41.9996 li
236.127 54.2397 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
268.047 51.5996 mo
(\))sh
grestore
gsave
236.127 54.2397 mo
276.327 54.2397 li
276.327 41.9996 li
236.127 41.9996 li
236.127 54.2397 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
271.167 51.5996 mo
( )sh
grestore
276.687 54.2396 mo
343.887 54.2396 li
343.887 41.9996 li
276.687 41.9996 li
cp
ef
298.287 54.2396 mo
338.367 54.2396 li
338.367 41.9996 li
298.287 41.9996 li
cp
f
gsave
276.687 54.2397 mo
343.886 54.2397 li
343.886 41.9996 li
276.687 41.9996 li
276.687 54.2397 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
298.287 51.5996 mo
( )sh
grestore
1.88667 42.1196 mo
2.36768 42.1196 li
2.36768 40.5596 li
1.88667 40.5596 li
cp
f
2.36668 41.0396 mo
64.8857 41.0396 li
64.8857 40.5596 li
2.36668 40.5596 li
cp
f
2.36668 41.9996 mo
64.8857 41.9996 li
64.8857 41.5186 li
2.36668 41.5186 li
cp
f
2.36668 42.1196 mo
64.8857 42.1196 li
64.8857 41.9996 li
2.36668 41.9996 li
cp
f
65.3667 42.1196 mo
66.3257 42.1196 li
66.3257 41.9996 li
65.3667 41.9996 li
cp
f
64.8867 42.1196 mo
65.3677 42.1196 li
65.3677 41.9996 li
64.8867 41.9996 li
cp
f
64.8867 41.0396 mo
66.3267 41.0396 li
66.3267 40.5596 li
64.8867 40.5596 li
cp
f
64.8867 41.9996 mo
66.3267 41.9996 li
66.3267 41.5186 li
64.8867 41.5186 li
cp
f
66.3267 41.0396 mo
105.447 41.0396 li
105.447 40.5596 li
66.3267 40.5596 li
cp
f
66.3267 41.9996 mo
105.447 41.9996 li
105.447 41.5186 li
66.3267 41.5186 li
cp
f
66.3267 42.1196 mo
105.447 42.1196 li
105.447 41.9996 li
66.3267 41.9996 li
cp
f
105.927 42.1196 mo
106.887 42.1196 li
106.887 41.9996 li
105.927 41.9996 li
cp
f
105.447 42.1196 mo
105.927 42.1196 li
105.927 41.9996 li
105.447 41.9996 li
cp
f
105.447 41.0396 mo
106.887 41.0396 li
106.887 40.5596 li
105.447 40.5596 li
cp
f
105.447 41.9996 mo
106.887 41.9996 li
106.887 41.5186 li
105.447 41.5186 li
cp
f
106.887 41.0396 mo
145.887 41.0396 li
145.887 40.5596 li
106.887 40.5596 li
cp
f
106.887 41.9996 mo
145.887 41.9996 li
145.887 41.5186 li
106.887 41.5186 li
cp
f
106.887 42.1196 mo
145.887 42.1196 li
145.887 41.9996 li
106.887 41.9996 li
cp
f
146.367 42.1196 mo
147.326 42.1196 li
147.326 41.9996 li
146.367 41.9996 li
cp
f
145.887 42.1196 mo
146.368 42.1196 li
146.368 41.9996 li
145.887 41.9996 li
cp
f
145.887 41.0396 mo
147.327 41.0396 li
147.327 40.5596 li
145.887 40.5596 li
cp
f
145.887 41.9996 mo
147.327 41.9996 li
147.327 41.5186 li
145.887 41.5186 li
cp
f
147.327 41.0396 mo
186.688 41.0396 li
186.688 40.5596 li
147.327 40.5596 li
cp
f
147.327 41.9996 mo
186.688 41.9996 li
186.688 41.5186 li
147.327 41.5186 li
cp
f
147.327 42.1196 mo
186.688 42.1196 li
186.688 41.9996 li
147.327 41.9996 li
cp
f
187.167 42.1196 mo
188.127 42.1196 li
188.127 41.9996 li
187.167 41.9996 li
cp
f
186.687 42.1196 mo
187.167 42.1196 li
187.167 41.9996 li
186.687 41.9996 li
cp
f
186.687 41.0396 mo
188.127 41.0396 li
188.127 40.5596 li
186.687 40.5596 li
cp
f
186.687 41.9996 mo
188.127 41.9996 li
188.127 41.5186 li
186.687 41.5186 li
cp
f
188.127 41.0396 mo
236.127 41.0396 li
236.127 40.5596 li
188.127 40.5596 li
cp
f
188.127 41.9996 mo
236.127 41.9996 li
236.127 41.5186 li
188.127 41.5186 li
cp
f
188.127 42.1196 mo
236.127 42.1196 li
236.127 41.9996 li
188.127 41.9996 li
cp
f
236.127 42.1196 mo
237.567 42.1196 li
237.567 41.9996 li
236.127 41.9996 li
cp
f
236.127 41.0396 mo
237.567 41.0396 li
237.567 40.5596 li
236.127 40.5596 li
cp
f
236.127 41.9996 mo
237.567 41.9996 li
237.567 41.5186 li
236.127 41.5186 li
cp
f
237.567 41.0396 mo
276.447 41.0396 li
276.447 40.5596 li
237.567 40.5596 li
cp
f
237.567 41.9996 mo
276.447 41.9996 li
276.447 41.5186 li
237.567 41.5186 li
cp
f
237.567 42.1196 mo
276.447 42.1196 li
276.447 41.9996 li
237.567 41.9996 li
cp
f
276.927 42.1196 mo
277.887 42.1196 li
277.887 41.9996 li
276.927 41.9996 li
cp
f
276.447 42.1196 mo
276.927 42.1196 li
276.927 41.9996 li
276.447 41.9996 li
cp
f
276.447 41.0396 mo
277.887 41.0396 li
277.887 40.5596 li
276.447 40.5596 li
cp
f
276.447 41.9996 mo
277.887 41.9996 li
277.887 41.5186 li
276.447 41.5186 li
cp
f
277.887 41.0396 mo
343.887 41.0396 li
343.887 40.5596 li
277.887 40.5596 li
cp
f
277.887 41.9996 mo
343.887 41.9996 li
343.887 41.5186 li
277.887 41.5186 li
cp
f
277.887 42.1196 mo
343.887 42.1196 li
343.887 41.9996 li
277.887 41.9996 li
cp
f
343.887 42.1196 mo
344.368 42.1196 li
344.368 40.5596 li
343.887 40.5596 li
cp
f
1.88667 54.2396 mo
2.36768 54.2396 li
2.36768 42.1196 li
1.88667 42.1196 li
cp
f
64.8867 54.2396 mo
65.3677 54.2396 li
65.3677 42.1196 li
64.8867 42.1196 li
cp
f
105.447 54.2396 mo
105.927 54.2396 li
105.927 42.1196 li
105.447 42.1196 li
cp
f
145.887 54.2396 mo
146.368 54.2396 li
146.368 42.1196 li
145.887 42.1196 li
cp
f
186.687 54.2396 mo
187.167 54.2396 li
187.167 42.1196 li
186.687 42.1196 li
cp
f
276.447 54.2396 mo
276.927 54.2396 li
276.927 42.1196 li
276.447 42.1196 li
cp
f
343.887 54.2396 mo
344.368 54.2396 li
344.368 42.1196 li
343.887 42.1196 li
cp
f
2.36668 66.9596 mo
64.8867 66.9596 li
64.8867 54.7196 li
2.36668 54.7196 li
cp
.596 .282 .024 rgb
ef
7.52667 66.9596 mo
59.7267 66.9596 li
59.7267 54.7196 li
7.52667 54.7196 li
cp
f
gsave
2.36664 66.9596 mo
64.8857 66.9596 li
64.8857 54.7196 li
2.36664 54.7196 li
2.36664 66.9596 li
clp
1 1 1 rgb
%ADOBeginSubsetFont: XOSAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
systemdict begin
OPDWMZ+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/w <1C60D8A8C9B63EE6FBAC6FE430D4C472A6935E9E4E2C9D9C4ACB16C71B03
2F18FE575C6256D49A59D28FA55A64B8F4250FF7EF0F6440082EA55E50C72515
DB779850B563F18307F56C5AA0381D53908E3AA5F7BCF9144924A2084F07EBED
39B22484214EF3445C58E2A31D32B14DA61C85069056233A7D69EDE7D6EAE909
5E582A487ACDCAAEC9B696D9F56177DFCBED54097D97E802545B35B3AFF09395
2061133C2164E4C99E14CC43C1C5FB57627E18AF07CB58B73BD1200A30349006
897A1314704F9560B7EE765A767050BD02ED4C3CB6891E5FA019219CAF9310B1
24D9AF8C5E5547F89705BF1E11BA18C8C6F80D46BFB4F08BBC66AE29B2E81702
937C5AB98472DEAC74C8794C288DBFA220B7F896E2B36F9ECF06883A45930B94
0AFF017D9F3C209761AB734C6F3F199505CD5974FFC0917AC4E2B317FA15146D
5F8C2D8B2A0366984D71D35A1EAF824F2AB69DDEEC3EC469FA5796A63F524D8E
C40E97981C19E148BD51BA03455ACA08443ED8962BD3AB9091> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OPDWMZ+Calibri /Encoding get
dup 119 /w put
pop
%ADOEndSubsetFont
/OPDWMZ+Calibri*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp 
/hyphen /period /.notdef /zero /one /two /three /.notdef 
/five 12{/.notdef}rp /B 4{/.notdef}rp /G 11{/.notdef}rp /S 13{/.notdef}rp 
/a /b /c /d /e /f /g /.notdef 
/i /.notdef /k /l /.notdef /n /o 2{/.notdef}rp 
/r /s /t /.notdef /v /w /.notdef /y 
55{/.notdef}rp /plusminus 78{/.notdef}rp]
OPDWMZ+Calibri nf
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
20.2467 64.3196 mo
(Brown)
[5.40038 3.48001 5.27972 7.08153 0 ]xsh
grestore
gsave
2.36664 66.9596 mo
64.8857 66.9596 li
64.8857 54.7196 li
2.36664 54.7196 li
2.36664 66.9596 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
46.8867 64.3196 mo
( )sh
grestore
65.3667 66.9596 mo
105.327 66.9596 li
105.327 54.7196 li
65.3667 54.7196 li
cp
ef
70.5267 66.9596 mo
100.167 66.9596 li
100.167 54.7196 li
70.5267 54.7196 li
cp
f
gsave
65.3667 66.9596 mo
105.327 66.9596 li
105.327 54.7196 li
65.3667 54.7196 li
65.3667 66.9596 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
82.7667 64.3196 mo
(1)sh
grestore
gsave
65.3667 66.9596 mo
105.327 66.9596 li
105.327 54.7196 li
65.3667 54.7196 li
65.3667 66.9596 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
87.8067 64.3196 mo
( )sh
grestore
105.927 66.9596 mo
145.887 66.9596 li
145.887 54.7196 li
105.927 54.7196 li
cp
ef
110.967 66.9596 mo
140.727 66.9596 li
140.727 54.7196 li
110.967 54.7196 li
cp
f
gsave
105.927 66.9596 mo
145.887 66.9596 li
145.887 54.7196 li
105.927 54.7196 li
105.927 66.9596 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
123.207 64.3196 mo
(1)sh
grestore
gsave
105.927 66.9596 mo
145.887 66.9596 li
145.887 54.7196 li
105.927 54.7196 li
105.927 66.9596 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
128.247 64.3196 mo
( )sh
grestore
146.367 66.9596 mo
186.687 66.9596 li
186.687 54.7196 li
146.367 54.7196 li
cp
ef
151.527 66.9596 mo
181.527 66.9596 li
181.527 54.7196 li
151.527 54.7196 li
cp
f
gsave
146.367 66.9596 mo
186.687 66.9596 li
186.687 54.7196 li
146.367 54.7196 li
146.367 66.9596 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
164.007 64.3196 mo
(1)sh
grestore
gsave
146.367 66.9596 mo
186.687 66.9596 li
186.687 54.7196 li
146.367 54.7196 li
146.367 66.9596 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
169.047 64.3196 mo
( )sh
grestore
187.167 66.9596 mo
236.127 66.9596 li
236.127 54.7196 li
187.167 54.7196 li
cp
ef
192.327 66.9596 mo
230.727 66.9596 li
230.727 54.7196 li
192.327 54.7196 li
cp
f
gsave
187.167 66.9596 mo
236.127 66.9596 li
236.127 54.7196 li
187.167 54.7196 li
187.167 66.9596 li
clp
1 1 1 rgb
OPDWNA+CambriaMath*1 [9.96 0 0 -9.96 0 0 ]msf
192.327 64.3196 mo
(\327)sh
grestore
gsave
187.167 66.9596 mo
236.127 66.9596 li
236.127 54.7196 li
187.167 54.7196 li
187.167 66.9596 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
199.527 64.3196 mo
( )sh
grestore
gsave
187.167 66.9596 mo
236.127 66.9596 li
236.127 54.7196 li
187.167 54.7196 li
187.167 66.9596 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
201.807 64.3196 mo
(10)
[5.03979 0 ]xsh
grestore
gsave
187.167 66.9596 mo
236.127 66.9596 li
236.127 54.7196 li
187.167 54.7196 li
187.167 66.9596 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
211.887 64.3196 mo
( )sh
grestore
236.127 66.9596 mo
276.327 66.9596 li
276.327 54.7196 li
236.127 54.7196 li
cp
ef
241.527 66.9596 mo
271.167 66.9596 li
271.167 54.7196 li
241.527 54.7196 li
cp
f
gsave
236.127 66.9596 mo
276.327 66.9596 li
276.327 54.7196 li
236.127 54.7196 li
236.127 66.9596 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
251.727 64.3196 mo
(\(10)
[2.99789 5.03979 0 ]xsh
grestore
gsave
236.127 66.9596 mo
276.327 66.9596 li
276.327 54.7196 li
236.127 54.7196 li
236.127 66.9596 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [6.48 0 0 -6.48 0 0 ]msf
264.807 60.8396 mo
(1)sh
grestore
gsave
236.127 66.9596 mo
276.327 66.9596 li
276.327 54.7196 li
236.127 54.7196 li
236.127 66.9596 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
268.047 64.3196 mo
(\))sh
grestore
gsave
236.127 66.9596 mo
276.327 66.9596 li
276.327 54.7196 li
236.127 54.7196 li
236.127 66.9596 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
271.167 64.3196 mo
( )sh
grestore
276.687 66.9596 mo
343.887 66.9596 li
343.887 54.7196 li
276.687 54.7196 li
cp
ef
298.287 66.9596 mo
338.367 66.9596 li
338.367 54.7196 li
298.287 54.7196 li
cp
f
gsave
276.687 66.9596 mo
343.886 66.9596 li
343.886 54.7196 li
276.687 54.7196 li
276.687 66.9596 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
298.287 64.3196 mo
(\261 1 %)
[4.92026 2.28082 5.03979 2.28082 0 ]xsh
grestore
gsave
276.687 66.9596 mo
343.886 66.9596 li
343.886 54.7196 li
276.687 54.7196 li
276.687 66.9596 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
320.007 64.3196 mo
( )sh
grestore
1.88667 54.7196 mo
2.36768 54.7196 li
2.36768 54.2396 li
1.88667 54.2396 li
cp
.137422 .122799 .126081 rgb
f
2.36668 54.7196 mo
64.8857 54.7196 li
64.8857 54.2396 li
2.36668 54.2396 li
cp
f
64.8867 54.7196 mo
65.3677 54.7196 li
65.3677 54.2396 li
64.8867 54.2396 li
cp
f
65.3667 54.7196 mo
105.447 54.7196 li
105.447 54.2396 li
65.3667 54.2396 li
cp
f
105.447 54.7196 mo
105.927 54.7196 li
105.927 54.2396 li
105.447 54.2396 li
cp
f
105.927 54.7196 mo
145.887 54.7196 li
145.887 54.2396 li
105.927 54.2396 li
cp
f
145.887 54.7196 mo
146.368 54.7196 li
146.368 54.2396 li
145.887 54.2396 li
cp
f
146.367 54.7196 mo
186.687 54.7196 li
186.687 54.2396 li
146.367 54.2396 li
cp
f
186.687 54.7196 mo
187.167 54.7196 li
187.167 54.2396 li
186.687 54.2396 li
cp
f
187.167 54.7196 mo
236.127 54.7196 li
236.127 54.2396 li
187.167 54.2396 li
cp
f
236.127 54.7196 mo
236.607 54.7196 li
236.607 54.2396 li
236.127 54.2396 li
cp
f
236.607 54.7196 mo
276.447 54.7196 li
276.447 54.2396 li
236.607 54.2396 li
cp
f
276.447 54.7196 mo
276.927 54.7196 li
276.927 54.2396 li
276.447 54.2396 li
cp
f
276.927 54.7196 mo
343.887 54.7196 li
343.887 54.2396 li
276.927 54.2396 li
cp
f
343.887 54.7196 mo
344.368 54.7196 li
344.368 54.2396 li
343.887 54.2396 li
cp
f
1.88667 66.9596 mo
2.36768 66.9596 li
2.36768 54.7196 li
1.88667 54.7196 li
cp
f
64.8867 66.9596 mo
65.3677 66.9596 li
65.3677 54.7196 li
64.8867 54.7196 li
cp
f
105.447 66.9596 mo
105.927 66.9596 li
105.927 54.7196 li
105.447 54.7196 li
cp
f
145.887 66.9596 mo
146.368 66.9596 li
146.368 54.7196 li
145.887 54.7196 li
cp
f
186.687 66.9596 mo
187.167 66.9596 li
187.167 54.7196 li
186.687 54.7196 li
cp
f
276.447 66.9596 mo
276.927 66.9596 li
276.927 54.7196 li
276.447 54.7196 li
cp
f
343.887 66.9596 mo
344.368 66.9596 li
344.368 54.7196 li
343.887 54.7196 li
cp
f
2.36668 79.6796 mo
64.8867 79.6796 li
64.8867 67.4396 li
2.36668 67.4396 li
cp
1 0 0 rgb
ef
7.52667 79.6796 mo
59.7267 79.6796 li
59.7267 67.4396 li
7.52667 67.4396 li
cp
f
gsave
2.36664 79.6796 mo
64.8857 79.6796 li
64.8857 67.4397 li
2.36664 67.4397 li
2.36664 79.6796 li
clp
1 1 1 rgb
%ADOBeginSubsetFont: XOSAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
systemdict begin
OPDWMZ+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/R <1C60D8A8C9B79C5FEE44F314FFC38CE4EF87FC1BC5BA498FDD47672E37A5
F29CF58ECF31C007FDE4A3817F15E647D623C8D6D1F4A73D7B6832B4D42989C1
A55BCD585ED57C222CC2F78A215F05F4E9A80BA1FCD1DB376BCE47D9921733E4
4EDE5BEAEC1D2153F2FA8A2E1C22E242D6C1A4BADF7B3C9D6692C8957849B7C7
57134864A498CBD963474EEA254A542992BCD7D23FC8C03B24B3B32CB8DE36B1
F672A455AF821729B85730506FEACB3392B97578F79A301DEE39865FDBFD8731
B3029E0DE4CAFE78BFA5CB852575D437DF1324ED582E9AF5A0234A2594A744CB
D8A820BF84E58BCFA0173DA6F4633F9CBE6F24B1E9A9AA3FBA2EC97D071CB6D5
A774FEB91C9639FD6744C0FCD372B9710A9F8B9537B94D2F3171FFE5B9719953
51C2AE63C69CA08EAE162057803FEFCA06736258DDA27C02FD926DA3B7BF59E5
B7BF6347045A4700726CA8EDCBC532E0E356415CE7BCA89E1BE403BD462A4226
BC0587B5B955AD2652D9A4B9A806727D8110> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OPDWMZ+Calibri /Encoding get
dup 82 /R put
pop
%ADOEndSubsetFont
/OPDWMZ+Calibri*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp 
/hyphen /period /.notdef /zero /one /two /three /.notdef 
/five 12{/.notdef}rp /B 4{/.notdef}rp /G 10{/.notdef}rp /R /S 
13{/.notdef}rp /a /b /c /d /e /f /g 
/.notdef /i /.notdef /k /l /.notdef /n /o 
2{/.notdef}rp /r /s /t /.notdef /v /w /.notdef 
/y 55{/.notdef}rp /plusminus 78{/.notdef}rp]
OPDWMZ+Calibri nf
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
25.7667 77.0396 mo
(Red)
[5.4003 4.92026 0 ]xsh
grestore
gsave
2.36664 79.6796 mo
64.8857 79.6796 li
64.8857 67.4397 li
2.36664 67.4397 li
2.36664 79.6796 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
41.4867 77.0396 mo
( )sh
grestore
65.3667 79.6796 mo
105.327 79.6796 li
105.327 67.4396 li
65.3667 67.4396 li
cp
ef
70.5267 79.6796 mo
100.167 79.6796 li
100.167 67.4396 li
70.5267 67.4396 li
cp
f
gsave
65.3667 79.6796 mo
105.327 79.6796 li
105.327 67.4397 li
65.3667 67.4397 li
65.3667 79.6796 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
82.7667 77.0396 mo
(2)sh
grestore
gsave
65.3667 79.6796 mo
105.327 79.6796 li
105.327 67.4397 li
65.3667 67.4397 li
65.3667 79.6796 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
87.8067 77.0396 mo
( )sh
grestore
105.927 79.6796 mo
145.887 79.6796 li
145.887 67.4396 li
105.927 67.4396 li
cp
ef
110.967 79.6796 mo
140.727 79.6796 li
140.727 67.4396 li
110.967 67.4396 li
cp
f
gsave
105.927 79.6796 mo
145.887 79.6796 li
145.887 67.4397 li
105.927 67.4397 li
105.927 79.6796 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
123.207 77.0396 mo
(2)sh
grestore
gsave
105.927 79.6796 mo
145.887 79.6796 li
145.887 67.4397 li
105.927 67.4397 li
105.927 79.6796 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
128.247 77.0396 mo
( )sh
grestore
146.367 79.6796 mo
186.687 79.6796 li
186.687 67.4396 li
146.367 67.4396 li
cp
ef
151.527 79.6796 mo
181.527 79.6796 li
181.527 67.4396 li
151.527 67.4396 li
cp
f
gsave
146.367 79.6796 mo
186.687 79.6796 li
186.687 67.4397 li
146.367 67.4397 li
146.367 79.6796 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
164.007 77.0396 mo
(2)sh
grestore
gsave
146.367 79.6796 mo
186.687 79.6796 li
186.687 67.4397 li
146.367 67.4397 li
146.367 79.6796 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
169.047 77.0396 mo
( )sh
grestore
187.167 79.6796 mo
236.127 79.6796 li
236.127 67.4396 li
187.167 67.4396 li
cp
ef
192.327 79.6796 mo
230.727 79.6796 li
230.727 67.4396 li
192.327 67.4396 li
cp
f
gsave
187.167 79.6796 mo
236.127 79.6796 li
236.127 67.4397 li
187.167 67.4397 li
187.167 79.6796 li
clp
1 1 1 rgb
OPDWNA+CambriaMath*1 [9.96 0 0 -9.96 0 0 ]msf
192.327 77.0396 mo
(\327)sh
grestore
gsave
187.167 79.6796 mo
236.127 79.6796 li
236.127 67.4397 li
187.167 67.4397 li
187.167 79.6796 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
199.527 77.0396 mo
( )sh
grestore
gsave
187.167 79.6796 mo
236.127 79.6796 li
236.127 67.4397 li
187.167 67.4397 li
187.167 79.6796 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
201.807 77.0396 mo
(100)
[5.03979 5.03979 0 ]xsh
grestore
gsave
187.167 79.6796 mo
236.127 79.6796 li
236.127 67.4397 li
187.167 67.4397 li
187.167 79.6796 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
217.047 77.0396 mo
( )sh
grestore
236.127 79.6796 mo
276.327 79.6796 li
276.327 67.4396 li
236.127 67.4396 li
cp
ef
241.527 79.6796 mo
271.167 79.6796 li
271.167 67.4396 li
241.527 67.4396 li
cp
f
gsave
236.127 79.6796 mo
276.327 79.6796 li
276.327 67.4397 li
236.127 67.4397 li
236.127 79.6796 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
251.727 77.0396 mo
(\(10)
[2.99789 5.03979 0 ]xsh
grestore
gsave
236.127 79.6796 mo
276.327 79.6796 li
276.327 67.4397 li
236.127 67.4397 li
236.127 79.6796 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [6.48 0 0 -6.48 0 0 ]msf
264.807 73.5596 mo
(2)sh
grestore
gsave
236.127 79.6796 mo
276.327 79.6796 li
276.327 67.4397 li
236.127 67.4397 li
236.127 79.6796 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
268.047 77.0396 mo
(\))sh
grestore
gsave
236.127 79.6796 mo
276.327 79.6796 li
276.327 67.4397 li
236.127 67.4397 li
236.127 79.6796 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
271.167 77.0396 mo
( )sh
grestore
276.687 79.6796 mo
343.887 79.6796 li
343.887 67.4396 li
276.687 67.4396 li
cp
ef
298.287 79.6796 mo
338.367 79.6796 li
338.367 67.4396 li
298.287 67.4396 li
cp
f
gsave
276.687 79.6796 mo
343.886 79.6796 li
343.886 67.4397 li
276.687 67.4397 li
276.687 79.6796 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
298.287 77.0396 mo
(\261 2 %)
[4.92026 2.28082 5.03979 2.28082 0 ]xsh
grestore
gsave
276.687 79.6796 mo
343.886 79.6796 li
343.886 67.4397 li
276.687 67.4397 li
276.687 79.6796 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
320.007 77.0396 mo
( )sh
grestore
1.88667 67.4396 mo
2.36768 67.4396 li
2.36768 66.9596 li
1.88667 66.9596 li
cp
.137422 .122799 .126081 rgb
f
2.36668 67.4396 mo
64.8857 67.4396 li
64.8857 66.9596 li
2.36668 66.9596 li
cp
f
64.8867 67.4396 mo
65.3677 67.4396 li
65.3677 66.9596 li
64.8867 66.9596 li
cp
f
65.3667 67.4396 mo
105.447 67.4396 li
105.447 66.9596 li
65.3667 66.9596 li
cp
f
105.447 67.4396 mo
105.927 67.4396 li
105.927 66.9596 li
105.447 66.9596 li
cp
f
105.927 67.4396 mo
145.887 67.4396 li
145.887 66.9596 li
105.927 66.9596 li
cp
f
145.887 67.4396 mo
146.368 67.4396 li
146.368 66.9596 li
145.887 66.9596 li
cp
f
146.367 67.4396 mo
186.687 67.4396 li
186.687 66.9596 li
146.367 66.9596 li
cp
f
186.687 67.4396 mo
187.167 67.4396 li
187.167 66.9596 li
186.687 66.9596 li
cp
f
187.167 67.4396 mo
236.127 67.4396 li
236.127 66.9596 li
187.167 66.9596 li
cp
f
236.127 67.4396 mo
236.607 67.4396 li
236.607 66.9596 li
236.127 66.9596 li
cp
f
236.607 67.4396 mo
276.447 67.4396 li
276.447 66.9596 li
236.607 66.9596 li
cp
f
276.447 67.4396 mo
276.927 67.4396 li
276.927 66.9596 li
276.447 66.9596 li
cp
f
276.927 67.4396 mo
343.887 67.4396 li
343.887 66.9596 li
276.927 66.9596 li
cp
f
343.887 67.4396 mo
344.368 67.4396 li
344.368 66.9596 li
343.887 66.9596 li
cp
f
1.88667 79.6796 mo
2.36768 79.6796 li
2.36768 67.4396 li
1.88667 67.4396 li
cp
f
64.8867 79.6796 mo
65.3677 79.6796 li
65.3677 67.4396 li
64.8867 67.4396 li
cp
f
105.447 79.6796 mo
105.927 79.6796 li
105.927 67.4396 li
105.447 67.4396 li
cp
f
145.887 79.6796 mo
146.368 79.6796 li
146.368 67.4396 li
145.887 67.4396 li
cp
f
186.687 79.6796 mo
187.167 79.6796 li
187.167 67.4396 li
186.687 67.4396 li
cp
f
276.447 79.6796 mo
276.927 79.6796 li
276.927 67.4396 li
276.447 67.4396 li
cp
f
343.887 79.6796 mo
344.368 79.6796 li
344.368 67.4396 li
343.887 67.4396 li
cp
f
2.36668 92.3996 mo
64.8867 92.3996 li
64.8867 80.1596 li
2.36668 80.1596 li
cp
1 .655 .239 rgb
ef
7.52667 92.3996 mo
59.7267 92.3996 li
59.7267 80.1596 li
7.52667 80.1596 li
cp
f
gsave
2.36664 92.3996 mo
64.8857 92.3996 li
64.8857 80.1597 li
2.36664 80.1597 li
2.36664 92.3996 li
clp
1 1 1 rgb
%ADOBeginSubsetFont: XOSAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
systemdict begin
OPDWMZ+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/O <1C60D8A8C9B64B6A243C5D499416E7BC4B22E8B629E09B8028C056D587EE
9CF3EDF2973119D5417CAB133A39C67B614E010AE0DD832BCFA4821BD97E225D
43A74776F0BFD87B432DD8C21445FC4ADD550E21897D7C9E8DE35386D83093D3
FF407F51B83131A4C29A9A19F0D66509D8A0DC226CCF6F69FBA7442E368FC0BB
3313B0C314C003045967AC913CA278D0CD495B5C5D3B104FD8FE9306C40B1E68
4F8B702E1CF50ACD13BCB247F919B2F23E586EB73CDBD82C4696F7C27EE8FF40
F1B366DF4538A9B1C7C873783BED33A9CC79EC8072551DCD083245F853F09D7B
A82936C03B9ABC832E704C4042C4CFF1A8C1165F42A0> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OPDWMZ+Calibri /Encoding get
dup 79 /O put
pop
%ADOEndSubsetFont
/OPDWMZ+Calibri*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp 
/hyphen /period /.notdef /zero /one /two /three /.notdef 
/five 12{/.notdef}rp /B 4{/.notdef}rp /G 7{/.notdef}rp /O 2{/.notdef}rp 
/R /S 13{/.notdef}rp /a /b /c /d /e 
/f /g /.notdef /i /.notdef /k /l /.notdef 
/n /o 2{/.notdef}rp /r /s /t /.notdef /v 
/w /.notdef /y 55{/.notdef}rp /plusminus 78{/.notdef}rp]
OPDWMZ+Calibri nf
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
18.6867 89.7596 mo
(Orange)
[6.6035 3.48003 4.80075 5.27974 4.67914 0 ]xsh
grestore
gsave
2.36664 92.3996 mo
64.8857 92.3996 li
64.8857 80.1597 li
2.36664 80.1597 li
2.36664 92.3996 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
48.5667 89.7596 mo
( )sh
grestore
65.3667 92.3996 mo
105.327 92.3996 li
105.327 80.1596 li
65.3667 80.1596 li
cp
ef
70.5267 92.3996 mo
100.167 92.3996 li
100.167 80.1596 li
70.5267 80.1596 li
cp
f
gsave
65.3667 92.3996 mo
105.327 92.3996 li
105.327 80.1597 li
65.3667 80.1597 li
65.3667 92.3996 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
82.7667 89.7596 mo
(3)sh
grestore
gsave
65.3667 92.3996 mo
105.327 92.3996 li
105.327 80.1597 li
65.3667 80.1597 li
65.3667 92.3996 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
87.8067 89.7596 mo
( )sh
grestore
105.927 92.3996 mo
145.887 92.3996 li
145.887 80.1596 li
105.927 80.1596 li
cp
ef
110.967 92.3996 mo
140.727 92.3996 li
140.727 80.1596 li
110.967 80.1596 li
cp
f
gsave
105.927 92.3996 mo
145.887 92.3996 li
145.887 80.1597 li
105.927 80.1597 li
105.927 92.3996 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
123.207 89.7596 mo
(3)sh
grestore
gsave
105.927 92.3996 mo
145.887 92.3996 li
145.887 80.1597 li
105.927 80.1597 li
105.927 92.3996 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
128.247 89.7596 mo
( )sh
grestore
146.367 92.3996 mo
186.687 92.3996 li
186.687 80.1596 li
146.367 80.1596 li
cp
ef
151.527 92.3996 mo
181.527 92.3996 li
181.527 80.1596 li
151.527 80.1596 li
cp
f
gsave
146.367 92.3996 mo
186.687 92.3996 li
186.687 80.1597 li
146.367 80.1597 li
146.367 92.3996 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
164.007 89.7596 mo
(3)sh
grestore
gsave
146.367 92.3996 mo
186.687 92.3996 li
186.687 80.1597 li
146.367 80.1597 li
146.367 92.3996 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
169.047 89.7596 mo
( )sh
grestore
187.167 92.3996 mo
236.127 92.3996 li
236.127 80.1596 li
187.167 80.1596 li
cp
ef
192.327 92.3996 mo
230.727 92.3996 li
230.727 80.1596 li
192.327 80.1596 li
cp
f
gsave
187.167 92.3996 mo
236.127 92.3996 li
236.127 80.1597 li
187.167 80.1597 li
187.167 92.3996 li
clp
1 1 1 rgb
OPDWNA+CambriaMath*1 [9.96 0 0 -9.96 0 0 ]msf
192.327 89.7596 mo
(\327)sh
grestore
gsave
187.167 92.3996 mo
236.127 92.3996 li
236.127 80.1597 li
187.167 80.1597 li
187.167 92.3996 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
199.527 89.7596 mo
( )sh
grestore
gsave
187.167 92.3996 mo
236.127 92.3996 li
236.127 80.1597 li
187.167 80.1597 li
187.167 92.3996 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
201.807 89.7596 mo
(1k)
[5.03979 0 ]xsh
grestore
gsave
187.167 92.3996 mo
236.127 92.3996 li
236.127 80.1597 li
187.167 80.1597 li
187.167 92.3996 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
211.407 89.7596 mo
( )sh
grestore
236.127 92.3996 mo
276.327 92.3996 li
276.327 80.1596 li
236.127 80.1596 li
cp
ef
241.527 92.3996 mo
271.167 92.3996 li
271.167 80.1596 li
241.527 80.1596 li
cp
f
gsave
236.127 92.3996 mo
276.327 92.3996 li
276.327 80.1597 li
236.127 80.1597 li
236.127 92.3996 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
251.727 89.7596 mo
(\(10)
[2.99789 5.03979 0 ]xsh
grestore
gsave
236.127 92.3996 mo
276.327 92.3996 li
276.327 80.1597 li
236.127 80.1597 li
236.127 92.3996 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [6.48 0 0 -6.48 0 0 ]msf
264.807 86.2796 mo
(3)sh
grestore
gsave
236.127 92.3996 mo
276.327 92.3996 li
276.327 80.1597 li
236.127 80.1597 li
236.127 92.3996 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
268.047 89.7596 mo
(\))sh
grestore
gsave
236.127 92.3996 mo
276.327 92.3996 li
276.327 80.1597 li
236.127 80.1597 li
236.127 92.3996 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
271.167 89.7596 mo
( )sh
grestore
276.687 92.3996 mo
343.887 92.3996 li
343.887 80.1596 li
276.687 80.1596 li
cp
ef
298.287 92.3996 mo
338.367 92.3996 li
338.367 80.1596 li
298.287 80.1596 li
cp
f
gsave
276.687 92.3996 mo
343.886 92.3996 li
343.886 80.1597 li
276.687 80.1597 li
276.687 92.3996 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
298.287 89.7596 mo
( )sh
grestore
1.88667 80.1596 mo
2.36768 80.1596 li
2.36768 79.6786 li
1.88667 79.6786 li
cp
.137422 .122799 .126081 rgb
f
2.36668 80.1596 mo
64.8857 80.1596 li
64.8857 79.6786 li
2.36668 79.6786 li
cp
f
64.8867 80.1596 mo
65.3677 80.1596 li
65.3677 79.6786 li
64.8867 79.6786 li
cp
f
65.3667 80.1596 mo
105.447 80.1596 li
105.447 79.6786 li
65.3667 79.6786 li
cp
f
105.447 80.1596 mo
105.927 80.1596 li
105.927 79.6786 li
105.447 79.6786 li
cp
f
105.927 80.1596 mo
145.887 80.1596 li
145.887 79.6786 li
105.927 79.6786 li
cp
f
145.887 80.1596 mo
146.368 80.1596 li
146.368 79.6786 li
145.887 79.6786 li
cp
f
146.367 80.1596 mo
186.687 80.1596 li
186.687 79.6786 li
146.367 79.6786 li
cp
f
186.687 80.1596 mo
187.167 80.1596 li
187.167 79.6786 li
186.687 79.6786 li
cp
f
187.167 80.1596 mo
236.127 80.1596 li
236.127 79.6786 li
187.167 79.6786 li
cp
f
236.127 80.1596 mo
236.607 80.1596 li
236.607 79.6786 li
236.127 79.6786 li
cp
f
236.607 80.1596 mo
276.447 80.1596 li
276.447 79.6786 li
236.607 79.6786 li
cp
f
276.447 80.1596 mo
276.927 80.1596 li
276.927 79.6786 li
276.447 79.6786 li
cp
f
276.927 80.1596 mo
343.887 80.1596 li
343.887 79.6786 li
276.927 79.6786 li
cp
f
343.887 80.1596 mo
344.368 80.1596 li
344.368 79.6786 li
343.887 79.6786 li
cp
f
1.88667 92.3996 mo
2.36768 92.3996 li
2.36768 80.1596 li
1.88667 80.1596 li
cp
f
64.8867 92.3996 mo
65.3677 92.3996 li
65.3677 80.1596 li
64.8867 80.1596 li
cp
f
105.447 92.3996 mo
105.927 92.3996 li
105.927 80.1596 li
105.447 80.1596 li
cp
f
145.887 92.3996 mo
146.368 92.3996 li
146.368 80.1596 li
145.887 80.1596 li
cp
f
186.687 92.3996 mo
187.167 92.3996 li
187.167 80.1596 li
186.687 80.1596 li
cp
f
276.447 92.3996 mo
276.927 92.3996 li
276.927 80.1596 li
276.447 80.1596 li
cp
f
343.887 92.3996 mo
344.368 92.3996 li
344.368 80.1596 li
343.887 80.1596 li
cp
f
2.36668 105 mo
64.8867 105 li
64.8867 92.8796 li
2.36668 92.8796 li
cp
.961 .961 0 rgb
ef
7.52667 105 mo
59.7267 105 li
59.7267 92.8796 li
7.52667 92.8796 li
cp
f
gsave
2.36664 105 mo
64.8857 105 li
64.8857 92.8796 li
2.36664 92.8796 li
2.36664 105 li
clp
1 1 1 rgb
%ADOBeginSubsetFont: XOSAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
systemdict begin
OPDWMZ+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/Y <1C60D8A8C9B7544E0B0EEDED580362FBFA5F9C928B31561908068AC6EA81
0D41BF328FB52C8F8185A919735D4141C6312C08B74BCDFC43BB5C0AF474F9A1
C5EA0C0C155EE7B36D37A794E1533C655E77250E51F49FD898489ED0CE7D7541
FA14F0CD4E039C8FE17A99395014273B90AA8829999F538319CB056E53403067
E343000ED68D07D37737DB7C330DC79FDCE20B458BA4CE302561537AC812BF79
7748DDAAEA29E690448A1F4962E5FA03B4B53614BB7195D65DF457057513A87D
0E053625E8F7FD5E9842A40F2B7859BA77F4C18C6354870E95170ACFE3284838
2C4D9FC9946D7932D570> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OPDWMZ+Calibri /Encoding get
dup 89 /Y put
pop
%ADOEndSubsetFont
/OPDWMZ+Calibri*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp 
/hyphen /period /.notdef /zero /one /two /three /.notdef 
/five 12{/.notdef}rp /B 4{/.notdef}rp /G 7{/.notdef}rp /O 2{/.notdef}rp 
/R /S 5{/.notdef}rp /Y 7{/.notdef}rp /a /b /c 
/d /e /f /g /.notdef /i /.notdef /k 
/l /.notdef /n /o 2{/.notdef}rp /r /s /t 
/.notdef /v /w /.notdef /y 55{/.notdef}rp /plusminus 78{/.notdef}rp]
OPDWMZ+Calibri nf
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
20.1267 102.36 mo
(Yellow)
[4.79971 4.92026 2.27988 2.28088 5.39925 0 ]xsh
grestore
gsave
2.36664 105 mo
64.8857 105 li
64.8857 92.8796 li
2.36664 92.8796 li
2.36664 105 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
47.0067 102.36 mo
( )sh
grestore
65.3667 105 mo
105.327 105 li
105.327 92.8796 li
65.3667 92.8796 li
cp
ef
70.5267 105 mo
100.167 105 li
100.167 92.8796 li
70.5267 92.8796 li
cp
f
gsave
65.3667 105 mo
105.327 105 li
105.327 92.8796 li
65.3667 92.8796 li
65.3667 105 li
clp
1 1 1 rgb
%ADOBeginSubsetFont: XOSAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
systemdict begin
OPDWMZ+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/four <1C60D8A8C9B7A0860A05CDAB07FCC8C6F1456010984E043BC1080A8E4
004C7A6F96FF4AD7F2A4B870B666CC1C7EA11B61E750FAAE008DD2598CE85BEE
4C2722299D9BDE6BD901B361B9FFD1A74A6881105044BA6119A67BABA2C5AA34
4BC5F5DC3AF8B4A3D3F44101FD3AF23A3469D02149FFD63F48CC3EA80D9EB13A
8494F7709B008152FFA0D84385AFFDE11B5FA65E8FC9AAD2BCC7E5E382783235
F954A8738DCC9A5760FEB582741B59F3C495CA1895A9F6120A54415FC0BB4494
CFF5A03D1CB88055E001BDA6B35B19BB5CD64D26C1A126C3877F4B0A8ECE9817
BE4A2EC5FA3C6FC9FCDEF6FA038892760F02C70AC24D1AFF24D0C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OPDWMZ+Calibri /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
/OPDWMZ+Calibri*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp 
/hyphen /period /.notdef /zero /one /two /three /four 
/five 12{/.notdef}rp /B 4{/.notdef}rp /G 7{/.notdef}rp /O 2{/.notdef}rp 
/R /S 5{/.notdef}rp /Y 7{/.notdef}rp /a /b /c 
/d /e /f /g /.notdef /i /.notdef /k 
/l /.notdef /n /o 2{/.notdef}rp /r /s /t 
/.notdef /v /w /.notdef /y 55{/.notdef}rp /plusminus 78{/.notdef}rp]
OPDWMZ+Calibri nf
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
82.7667 102.36 mo
(4)sh
grestore
gsave
65.3667 105 mo
105.327 105 li
105.327 92.8796 li
65.3667 92.8796 li
65.3667 105 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
87.8067 102.36 mo
( )sh
grestore
105.927 105 mo
145.887 105 li
145.887 92.8796 li
105.927 92.8796 li
cp
ef
110.967 105 mo
140.727 105 li
140.727 92.8796 li
110.967 92.8796 li
cp
f
gsave
105.927 105 mo
145.887 105 li
145.887 92.8796 li
105.927 92.8796 li
105.927 105 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
123.207 102.36 mo
(4)sh
grestore
gsave
105.927 105 mo
145.887 105 li
145.887 92.8796 li
105.927 92.8796 li
105.927 105 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
128.247 102.36 mo
( )sh
grestore
146.367 105 mo
186.687 105 li
186.687 92.8796 li
146.367 92.8796 li
cp
ef
151.527 105 mo
181.527 105 li
181.527 92.8796 li
151.527 92.8796 li
cp
f
gsave
146.367 105 mo
186.687 105 li
186.687 92.8796 li
146.367 92.8796 li
146.367 105 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
164.007 102.36 mo
(4)sh
grestore
gsave
146.367 105 mo
186.687 105 li
186.687 92.8796 li
146.367 92.8796 li
146.367 105 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
169.047 102.36 mo
( )sh
grestore
187.167 105 mo
236.127 105 li
236.127 92.8796 li
187.167 92.8796 li
cp
ef
192.327 105 mo
230.727 105 li
230.727 92.8796 li
192.327 92.8796 li
cp
f
gsave
187.167 105 mo
236.127 105 li
236.127 92.8796 li
187.167 92.8796 li
187.167 105 li
clp
1 1 1 rgb
OPDWNA+CambriaMath*1 [9.96 0 0 -9.96 0 0 ]msf
192.327 102.36 mo
(\327)sh
grestore
gsave
187.167 105 mo
236.127 105 li
236.127 92.8796 li
187.167 92.8796 li
187.167 105 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
199.527 102.36 mo
( )sh
grestore
gsave
187.167 105 mo
236.127 105 li
236.127 92.8796 li
187.167 92.8796 li
187.167 105 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
201.807 102.36 mo
(10k)
[5.03979 5.03979 0 ]xsh
grestore
gsave
187.167 105 mo
236.127 105 li
236.127 92.8796 li
187.167 92.8796 li
187.167 105 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
216.447 102.36 mo
( )sh
grestore
236.127 105 mo
276.327 105 li
276.327 92.8796 li
236.127 92.8796 li
cp
ef
241.527 105 mo
271.167 105 li
271.167 92.8796 li
241.527 92.8796 li
cp
f
gsave
236.127 105 mo
276.327 105 li
276.327 92.8796 li
236.127 92.8796 li
236.127 105 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
251.727 102.36 mo
(\(10)
[2.99789 5.03979 0 ]xsh
grestore
gsave
236.127 105 mo
276.327 105 li
276.327 92.8796 li
236.127 92.8796 li
236.127 105 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [6.48 0 0 -6.48 0 0 ]msf
264.807 98.8796 mo
(4)sh
grestore
gsave
236.127 105 mo
276.327 105 li
276.327 92.8796 li
236.127 92.8796 li
236.127 105 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
268.047 102.36 mo
(\))sh
grestore
gsave
236.127 105 mo
276.327 105 li
276.327 92.8796 li
236.127 92.8796 li
236.127 105 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
271.167 102.36 mo
( )sh
grestore
276.687 105 mo
343.887 105 li
343.887 92.8796 li
276.687 92.8796 li
cp
ef
298.287 105 mo
338.367 105 li
338.367 92.8796 li
298.287 92.8796 li
cp
f
gsave
276.687 105 mo
343.886 105 li
343.886 92.8796 li
276.687 92.8796 li
276.687 105 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
298.287 102.36 mo
( )sh
grestore
1.88667 92.8796 mo
2.36768 92.8796 li
2.36768 92.3996 li
1.88667 92.3996 li
cp
.137422 .122799 .126081 rgb
f
2.36668 92.8796 mo
64.8857 92.8796 li
64.8857 92.3996 li
2.36668 92.3996 li
cp
f
64.8867 92.8796 mo
65.3677 92.8796 li
65.3677 92.3996 li
64.8867 92.3996 li
cp
f
65.3667 92.8796 mo
105.447 92.8796 li
105.447 92.3996 li
65.3667 92.3996 li
cp
f
105.447 92.8796 mo
105.927 92.8796 li
105.927 92.3996 li
105.447 92.3996 li
cp
f
105.927 92.8796 mo
145.887 92.8796 li
145.887 92.3996 li
105.927 92.3996 li
cp
f
145.887 92.8796 mo
146.368 92.8796 li
146.368 92.3996 li
145.887 92.3996 li
cp
f
146.367 92.8796 mo
186.687 92.8796 li
186.687 92.3996 li
146.367 92.3996 li
cp
f
186.687 92.8796 mo
187.167 92.8796 li
187.167 92.3996 li
186.687 92.3996 li
cp
f
187.167 92.8796 mo
236.127 92.8796 li
236.127 92.3996 li
187.167 92.3996 li
cp
f
236.127 92.8796 mo
236.607 92.8796 li
236.607 92.3996 li
236.127 92.3996 li
cp
f
236.607 92.8796 mo
276.447 92.8796 li
276.447 92.3996 li
236.607 92.3996 li
cp
f
276.447 92.8796 mo
276.927 92.8796 li
276.927 92.3996 li
276.447 92.3996 li
cp
f
276.927 92.8796 mo
343.887 92.8796 li
343.887 92.3996 li
276.927 92.3996 li
cp
f
343.887 92.8796 mo
344.368 92.8796 li
344.368 92.3996 li
343.887 92.3996 li
cp
f
1.88667 105 mo
2.36768 105 li
2.36768 92.8796 li
1.88667 92.8796 li
cp
f
64.8867 105 mo
65.3677 105 li
65.3677 92.8796 li
64.8867 92.8796 li
cp
f
105.447 105 mo
105.927 105 li
105.927 92.8796 li
105.447 92.8796 li
cp
f
145.887 105 mo
146.368 105 li
146.368 92.8796 li
145.887 92.8796 li
cp
f
186.687 105 mo
187.167 105 li
187.167 92.8796 li
186.687 92.8796 li
cp
f
276.447 105 mo
276.927 105 li
276.927 92.8796 li
276.447 92.8796 li
cp
f
343.887 105 mo
344.368 105 li
344.368 92.8796 li
343.887 92.8796 li
cp
f
2.36668 117.72 mo
64.8867 117.72 li
64.8867 105.6 li
2.36668 105.6 li
cp
0 .69 .314 rgb
ef
7.52667 117.72 mo
59.7267 117.72 li
59.7267 105.6 li
7.52667 105.6 li
cp
f
gsave
2.36664 117.72 mo
64.8857 117.72 li
64.8857 105.6 li
2.36664 105.6 li
2.36664 117.72 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
21.0867 115.08 mo
(Green)
[6.23991 3.48001 5.03976 4.92026 0 ]xsh
grestore
gsave
2.36664 117.72 mo
64.8857 117.72 li
64.8857 105.6 li
2.36664 105.6 li
2.36664 117.72 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
46.0467 115.08 mo
( )sh
grestore
65.3667 117.72 mo
105.327 117.72 li
105.327 105.6 li
65.3667 105.6 li
cp
ef
70.5267 117.72 mo
100.167 117.72 li
100.167 105.6 li
70.5267 105.6 li
cp
f
gsave
65.3667 117.72 mo
105.327 117.72 li
105.327 105.6 li
65.3667 105.6 li
65.3667 117.72 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
82.7667 115.08 mo
(5)sh
grestore
gsave
65.3667 117.72 mo
105.327 117.72 li
105.327 105.6 li
65.3667 105.6 li
65.3667 117.72 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
87.8067 115.08 mo
( )sh
grestore
105.927 117.72 mo
145.887 117.72 li
145.887 105.6 li
105.927 105.6 li
cp
ef
110.967 117.72 mo
140.727 117.72 li
140.727 105.6 li
110.967 105.6 li
cp
f
gsave
105.927 117.72 mo
145.887 117.72 li
145.887 105.6 li
105.927 105.6 li
105.927 117.72 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
123.207 115.08 mo
(5)sh
grestore
gsave
105.927 117.72 mo
145.887 117.72 li
145.887 105.6 li
105.927 105.6 li
105.927 117.72 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
128.247 115.08 mo
( )sh
grestore
146.367 117.72 mo
186.687 117.72 li
186.687 105.6 li
146.367 105.6 li
cp
ef
151.527 117.72 mo
181.527 117.72 li
181.527 105.6 li
151.527 105.6 li
cp
f
gsave
146.367 117.72 mo
186.687 117.72 li
186.687 105.6 li
146.367 105.6 li
146.367 117.72 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
164.007 115.08 mo
(5)sh
grestore
gsave
146.367 117.72 mo
186.687 117.72 li
186.687 105.6 li
146.367 105.6 li
146.367 117.72 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
169.047 115.08 mo
( )sh
grestore
187.167 117.72 mo
236.127 117.72 li
236.127 105.6 li
187.167 105.6 li
cp
ef
192.327 117.72 mo
230.727 117.72 li
230.727 105.6 li
192.327 105.6 li
cp
f
gsave
187.167 117.72 mo
236.127 117.72 li
236.127 105.6 li
187.167 105.6 li
187.167 117.72 li
clp
1 1 1 rgb
OPDWNA+CambriaMath*1 [9.96 0 0 -9.96 0 0 ]msf
192.327 115.08 mo
(\327)sh
grestore
gsave
187.167 117.72 mo
236.127 117.72 li
236.127 105.6 li
187.167 105.6 li
187.167 117.72 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
199.527 115.08 mo
( )sh
grestore
gsave
187.167 117.72 mo
236.127 117.72 li
236.127 105.6 li
187.167 105.6 li
187.167 117.72 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
201.807 115.08 mo
(100k)
[5.03979 5.03979 5.03979 0 ]xsh
grestore
gsave
187.167 117.72 mo
236.127 117.72 li
236.127 105.6 li
187.167 105.6 li
187.167 117.72 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
221.487 115.08 mo
( )sh
grestore
236.127 117.72 mo
276.327 117.72 li
276.327 105.6 li
236.127 105.6 li
cp
ef
241.527 117.72 mo
271.167 117.72 li
271.167 105.6 li
241.527 105.6 li
cp
f
gsave
236.127 117.72 mo
276.327 117.72 li
276.327 105.6 li
236.127 105.6 li
236.127 117.72 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
251.727 115.08 mo
(\(10)
[2.99789 5.03979 0 ]xsh
grestore
gsave
236.127 117.72 mo
276.327 117.72 li
276.327 105.6 li
236.127 105.6 li
236.127 117.72 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [6.48 0 0 -6.48 0 0 ]msf
264.807 111.6 mo
(5)sh
grestore
gsave
236.127 117.72 mo
276.327 117.72 li
276.327 105.6 li
236.127 105.6 li
236.127 117.72 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
268.047 115.08 mo
(\))sh
grestore
gsave
236.127 117.72 mo
276.327 117.72 li
276.327 105.6 li
236.127 105.6 li
236.127 117.72 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
271.167 115.08 mo
( )sh
grestore
276.687 117.72 mo
343.887 117.72 li
343.887 105.6 li
276.687 105.6 li
cp
ef
298.287 117.72 mo
338.367 117.72 li
338.367 105.6 li
298.287 105.6 li
cp
f
gsave
276.687 117.72 mo
343.886 117.72 li
343.886 105.6 li
276.687 105.6 li
276.687 117.72 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
298.287 115.08 mo
(\261 0.5 %)
[4.92026 2.28082 5.03979 2.52084 5.03983 2.28082 0 ]xsh
grestore
gsave
276.687 117.72 mo
343.886 117.72 li
343.886 105.6 li
276.687 105.6 li
276.687 117.72 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
327.567 115.08 mo
( )sh
grestore
1.88667 105.48 mo
2.36768 105.48 li
2.36768 105 li
1.88667 105 li
cp
.137422 .122799 .126081 rgb
f
2.36668 105.48 mo
64.8857 105.48 li
64.8857 105 li
2.36668 105 li
cp
f
64.8867 105.48 mo
65.3677 105.48 li
65.3677 105 li
64.8867 105 li
cp
f
65.3667 105.48 mo
105.447 105.48 li
105.447 105 li
65.3667 105 li
cp
f
105.447 105.48 mo
105.927 105.48 li
105.927 105 li
105.447 105 li
cp
f
105.927 105.48 mo
145.887 105.48 li
145.887 105 li
105.927 105 li
cp
f
145.887 105.48 mo
146.368 105.48 li
146.368 105 li
145.887 105 li
cp
f
146.367 105.48 mo
186.687 105.48 li
186.687 105 li
146.367 105 li
cp
f
186.687 105.48 mo
187.167 105.48 li
187.167 105 li
186.687 105 li
cp
f
187.167 105.48 mo
236.127 105.48 li
236.127 105 li
187.167 105 li
cp
f
236.127 105.48 mo
236.607 105.48 li
236.607 105 li
236.127 105 li
cp
f
236.607 105.48 mo
276.447 105.48 li
276.447 105 li
236.607 105 li
cp
f
276.447 105.48 mo
276.927 105.48 li
276.927 105 li
276.447 105 li
cp
f
276.927 105.48 mo
343.887 105.48 li
343.887 105 li
276.927 105 li
cp
f
343.887 105.48 mo
344.368 105.48 li
344.368 105 li
343.887 105 li
cp
f
1.88667 117.72 mo
2.36768 117.72 li
2.36768 105.48 li
1.88667 105.48 li
cp
f
64.8867 117.72 mo
65.3677 117.72 li
65.3677 105.48 li
64.8867 105.48 li
cp
f
105.447 117.72 mo
105.927 117.72 li
105.927 105.48 li
105.447 105.48 li
cp
f
145.887 117.72 mo
146.368 117.72 li
146.368 105.48 li
145.887 105.48 li
cp
f
186.687 117.72 mo
187.167 117.72 li
187.167 105.48 li
186.687 105.48 li
cp
f
276.447 117.72 mo
276.927 117.72 li
276.927 105.48 li
276.447 105.48 li
cp
f
343.887 117.72 mo
344.368 117.72 li
344.368 105.48 li
343.887 105.48 li
cp
f
2.36668 130.44 mo
64.8867 130.44 li
64.8867 118.32 li
2.36668 118.32 li
cp
0 0 1 rgb
ef
7.52667 130.44 mo
59.7267 130.44 li
59.7267 118.321 li
7.52667 118.321 li
cp
f
gsave
2.36664 130.44 mo
64.8857 130.44 li
64.8857 118.321 li
2.36664 118.321 li
2.36664 130.44 li
clp
1 1 1 rgb
%ADOBeginSubsetFont: XOSAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
systemdict begin
OPDWMZ+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u <1C60D8A8C9B78E05EAA3CFED1A062DA00ACB6556B6D2C444D52FE211DC36
88D13631F07F87D2F0851361DDE2CB13BAE303424A55D9BD107D56D22322818F
C76F125ECA1DADD7E1E8164E2DF3A65B67CFAE338C319FC7D07BDCC1CF896B70
8E125021996E87E6805D1416B537CED172F9478027FB9FD1A978C49E725968E2
F5FFC6B56799F9B1D16FFE2085471316923AC7BFBC4E3BBEBA71950AD60EAA4B
EA84B8EB89079B6BEAD01C4E2BC5BF11F5FD2CB41D465D8AD649D765F2A952E2
2AC4EF1DF8297E4E5405180477A9E4F70BB10D787681535F61379438A6888E4F
660E2B1CD68547F69ECDD808A3CD50B9FBBDA239A40EE62332FADD878CD5F875
BAC27E0BDDA94455E030928A249A166F13D134EF255F5783> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OPDWMZ+Calibri /Encoding get
dup 117 /u put
pop
%ADOEndSubsetFont
/OPDWMZ+Calibri*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp 
/hyphen /period /.notdef /zero /one /two /three /four 
/five 12{/.notdef}rp /B 4{/.notdef}rp /G 7{/.notdef}rp /O 2{/.notdef}rp 
/R /S 5{/.notdef}rp /Y 7{/.notdef}rp /a /b /c 
/d /e /f /g /.notdef /i /.notdef /k 
/l /.notdef /n /o 2{/.notdef}rp /r /s /t 
/u /v /w /.notdef /y 55{/.notdef}rp /plusminus 78{/.notdef}rp]
OPDWMZ+Calibri nf
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
24.5667 127.8 mo
(Blue)
[5.39838 2.27989 5.27974 0 ]xsh
grestore
gsave
2.36664 130.44 mo
64.8857 130.44 li
64.8857 118.321 li
2.36664 118.321 li
2.36664 130.44 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
42.5667 127.8 mo
( )sh
grestore
65.3667 130.44 mo
105.327 130.44 li
105.327 118.32 li
65.3667 118.32 li
cp
ef
70.5267 130.44 mo
100.167 130.44 li
100.167 118.321 li
70.5267 118.321 li
cp
f
gsave
65.3667 130.44 mo
105.327 130.44 li
105.327 118.321 li
65.3667 118.321 li
65.3667 130.44 li
clp
1 1 1 rgb
%ADOBeginSubsetFont: XOSAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
systemdict begin
OPDWMZ+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/six <1C60D8A8C9B7A0860A364A1C4BD4224B64164DA02FBCB4B7345339E2A8
52FD73E42DE7B33A3E7CFB23D9B5B8828A7C7D03CC2719F783D654783B633B73
A159EC40ED3395FD8B11AAD632B5F29C41331F1B36125BA7D1997B676C8B10E4
336915C40AB6B715EB23A1290DE9BC0FC782B3F347C05ADDB685745560E028E6
D97D9B35BCB3F2E559B2DC5C5BA08FC08878230072154C5ED21DC85222CEE603
D2207BBABB8920C302B640B67339B888C31AFFCD44289945C30BE18E4BB99D4A
64979385EA488C3253806E2D6260691D0C13654DD70C80A76BBEC3A015B5ED35
3B26EFCFEEB6FE090864A2CDC657CC530BBBC6E4432DD73860472AE853F0A442
CE33C314B6FB1A984BFFA8B424295E2E940122AF725F7E4DA2F35898F6EE04DB
FD7E3B4D0DE9D4BE8784F49E3C23BC8B8AF125653EE8B0C9AAC11F53D23578DB
44B0D0AE9BFCADB8B50F9B84D1369F9276D7D311EED812EA2436CC31922AF348
437A5A953DC50D5D5FA6A0F3539C2875F47124A85A390502719CA13B79152707
92BEC2AFCFF9F604488CC0865FE1B7A6F72DFBD2EEA384F569C8F80EFA751CBA
37C08B0FB2064FF9BEB6D7BCAD5976B48494092CB6C87915EF1610> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OPDWMZ+Calibri /Encoding get
dup 54 /six put
pop
%ADOEndSubsetFont
/OPDWMZ+Calibri*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp 
/hyphen /period /.notdef /zero /one /two /three /four 
/five /six 11{/.notdef}rp /B 4{/.notdef}rp /G 7{/.notdef}rp /O 
2{/.notdef}rp /R /S 5{/.notdef}rp /Y 7{/.notdef}rp /a /b 
/c /d /e /f /g /.notdef /i /.notdef 
/k /l /.notdef /n /o 2{/.notdef}rp /r /s 
/t /u /v /w /.notdef /y 55{/.notdef}rp /plusminus 
78{/.notdef}rp]
OPDWMZ+Calibri nf
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
82.7667 127.8 mo
(6)sh
grestore
gsave
65.3667 130.44 mo
105.327 130.44 li
105.327 118.321 li
65.3667 118.321 li
65.3667 130.44 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
87.8067 127.8 mo
( )sh
grestore
105.927 130.44 mo
145.887 130.44 li
145.887 118.32 li
105.927 118.32 li
cp
ef
110.967 130.44 mo
140.727 130.44 li
140.727 118.321 li
110.967 118.321 li
cp
f
gsave
105.927 130.44 mo
145.887 130.44 li
145.887 118.321 li
105.927 118.321 li
105.927 130.44 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
123.207 127.8 mo
(6)sh
grestore
gsave
105.927 130.44 mo
145.887 130.44 li
145.887 118.321 li
105.927 118.321 li
105.927 130.44 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
128.247 127.8 mo
( )sh
grestore
146.367 130.44 mo
186.687 130.44 li
186.687 118.32 li
146.367 118.32 li
cp
ef
151.527 130.44 mo
181.527 130.44 li
181.527 118.321 li
151.527 118.321 li
cp
f
gsave
146.367 130.44 mo
186.687 130.44 li
186.687 118.321 li
146.367 118.321 li
146.367 130.44 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
164.007 127.8 mo
(6)sh
grestore
gsave
146.367 130.44 mo
186.687 130.44 li
186.687 118.321 li
146.367 118.321 li
146.367 130.44 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
169.047 127.8 mo
( )sh
grestore
187.167 130.44 mo
236.127 130.44 li
236.127 118.32 li
187.167 118.32 li
cp
ef
192.327 130.44 mo
230.727 130.44 li
230.727 118.321 li
192.327 118.321 li
cp
f
gsave
187.167 130.44 mo
236.127 130.44 li
236.127 118.321 li
187.167 118.321 li
187.167 130.44 li
clp
1 1 1 rgb
OPDWNA+CambriaMath*1 [9.96 0 0 -9.96 0 0 ]msf
192.327 127.8 mo
(\327)sh
grestore
gsave
187.167 130.44 mo
236.127 130.44 li
236.127 118.321 li
187.167 118.321 li
187.167 130.44 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
199.527 127.8 mo
( )sh
grestore
gsave
187.167 130.44 mo
236.127 130.44 li
236.127 118.321 li
187.167 118.321 li
187.167 130.44 li
clp
1 1 1 rgb
%ADOBeginSubsetFont: XOSAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
systemdict begin
OPDWMZ+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/M <1C60D8A8C9B68A39A0A3DD2F1EDB806B8EBA2991979DEC8D258B1A02A190
6FD2B1CA205517F0A68C4C6A5BF2AC6E6CDCF7977F45552A42319D772D059495
9118289EBC1461685C8CF4E5DD263C4C1910B7D8FD4E5500044A8F06771B257F
C21C3072148523EDBD4AE8CCE0BCF86532F61410F6C0201E2ADF6D872A8FDBBE
97EA7C8789A51927AEAFFA42E03A39CC922DAB964B6BCFFA4430A330843D8297
EBD008ACDDBEFAE9E40226AF265DABF6CE80E6C4FB13353BC50063552BC66736
0325D0B42F7528AA00A89119A771AE5A7A3F69D8025BCAB7EBC18E2CEFCB7A52
A1D8652FE7D376D9B1F2CA62FEF82187CF27562517F2AA24976B64146E2D4DD2
87500E273B12ACFFC0C2B592A5CFA9E9511593BE31B739BECC693D9698B175F6
8FEC3CF86BC604ABD82815EBA74C3E98930057A86AF494D184AB704B672B8745> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OPDWMZ+Calibri /Encoding get
dup 77 /M put
pop
%ADOEndSubsetFont
/OPDWMZ+Calibri*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp 
/hyphen /period /.notdef /zero /one /two /three /four 
/five /six 11{/.notdef}rp /B 4{/.notdef}rp /G 5{/.notdef}rp /M 
/.notdef /O 2{/.notdef}rp /R /S 5{/.notdef}rp /Y 7{/.notdef}rp 
/a /b /c /d /e /f /g /.notdef 
/i /.notdef /k /l /.notdef /n /o 2{/.notdef}rp 
/r /s /t /u /v /w /.notdef /y 
55{/.notdef}rp /plusminus 78{/.notdef}rp]
OPDWMZ+Calibri nf
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
201.807 127.8 mo
(1M)
[5.03979 0 ]xsh
grestore
gsave
187.167 130.44 mo
236.127 130.44 li
236.127 118.321 li
187.167 118.321 li
187.167 130.44 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
215.367 127.8 mo
( )sh
grestore
236.127 130.44 mo
276.327 130.44 li
276.327 118.32 li
236.127 118.32 li
cp
ef
241.527 130.44 mo
271.167 130.44 li
271.167 118.321 li
241.527 118.321 li
cp
f
gsave
236.127 130.44 mo
276.327 130.44 li
276.327 118.321 li
236.127 118.321 li
236.127 130.44 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
251.727 127.8 mo
(\(10)
[2.99789 5.03979 0 ]xsh
grestore
gsave
236.127 130.44 mo
276.327 130.44 li
276.327 118.321 li
236.127 118.321 li
236.127 130.44 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [6.48 0 0 -6.48 0 0 ]msf
264.807 124.32 mo
(6)sh
grestore
gsave
236.127 130.44 mo
276.327 130.44 li
276.327 118.321 li
236.127 118.321 li
236.127 130.44 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
268.047 127.8 mo
(\))sh
grestore
gsave
236.127 130.44 mo
276.327 130.44 li
276.327 118.321 li
236.127 118.321 li
236.127 130.44 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
271.167 127.8 mo
( )sh
grestore
276.687 130.44 mo
343.887 130.44 li
343.887 118.32 li
276.687 118.32 li
cp
ef
298.287 130.44 mo
338.367 130.44 li
338.367 118.321 li
298.287 118.321 li
cp
f
gsave
276.687 130.44 mo
343.886 130.44 li
343.886 118.321 li
276.687 118.321 li
276.687 130.44 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
298.287 127.8 mo
(\261 0.25 %)
[4.92026 2.28082 5.03979 2.52084 5.03983 5.03979 2.40033 0 ]xsh
grestore
gsave
276.687 130.44 mo
343.886 130.44 li
343.886 118.321 li
276.687 118.321 li
276.687 130.44 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
332.727 127.8 mo
( )sh
grestore
1.88667 118.2 mo
2.36768 118.2 li
2.36768 117.72 li
1.88667 117.72 li
cp
.137422 .122799 .126081 rgb
f
2.36668 118.2 mo
64.8857 118.2 li
64.8857 117.72 li
2.36668 117.72 li
cp
f
64.8867 118.2 mo
65.3677 118.2 li
65.3677 117.72 li
64.8867 117.72 li
cp
f
65.3667 118.2 mo
105.447 118.2 li
105.447 117.72 li
65.3667 117.72 li
cp
f
105.447 118.2 mo
105.927 118.2 li
105.927 117.72 li
105.447 117.72 li
cp
f
105.927 118.2 mo
145.887 118.2 li
145.887 117.72 li
105.927 117.72 li
cp
f
145.887 118.2 mo
146.368 118.2 li
146.368 117.72 li
145.887 117.72 li
cp
f
146.367 118.2 mo
186.687 118.2 li
186.687 117.72 li
146.367 117.72 li
cp
f
186.687 118.2 mo
187.167 118.2 li
187.167 117.72 li
186.687 117.72 li
cp
f
187.167 118.2 mo
236.127 118.2 li
236.127 117.72 li
187.167 117.72 li
cp
f
236.127 118.2 mo
236.607 118.2 li
236.607 117.72 li
236.127 117.72 li
cp
f
236.607 118.2 mo
276.447 118.2 li
276.447 117.72 li
236.607 117.72 li
cp
f
276.447 118.2 mo
276.927 118.2 li
276.927 117.72 li
276.447 117.72 li
cp
f
276.927 118.2 mo
343.887 118.2 li
343.887 117.72 li
276.927 117.72 li
cp
f
343.887 118.2 mo
344.368 118.2 li
344.368 117.72 li
343.887 117.72 li
cp
f
1.88667 130.44 mo
2.36768 130.44 li
2.36768 118.2 li
1.88667 118.2 li
cp
f
64.8867 130.44 mo
65.3677 130.44 li
65.3677 118.2 li
64.8867 118.2 li
cp
f
105.447 130.44 mo
105.927 130.44 li
105.927 118.2 li
105.447 118.2 li
cp
f
145.887 130.44 mo
146.368 130.44 li
146.368 118.2 li
145.887 118.2 li
cp
f
186.687 130.44 mo
187.167 130.44 li
187.167 118.2 li
186.687 118.2 li
cp
f
276.447 130.44 mo
276.927 130.44 li
276.927 118.2 li
276.447 118.2 li
cp
f
343.887 130.44 mo
344.368 130.44 li
344.368 118.2 li
343.887 118.2 li
cp
f
2.36668 143.16 mo
64.8867 143.16 li
64.8867 130.92 li
2.36668 130.92 li
cp
.439 .188 .627 rgb
ef
7.52667 143.16 mo
59.7267 143.16 li
59.7267 130.92 li
7.52667 130.92 li
cp
f
gsave
2.36664 143.16 mo
64.8857 143.16 li
64.8857 130.92 li
2.36664 130.92 li
2.36664 143.16 li
clp
1 1 1 rgb
%ADOBeginSubsetFont: XOSAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
systemdict begin
OPDWMZ+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/V <1C60D8A8C9B7E46D3595E262380DCCCAA6E0E0BA4C996D5098A92E632ED5
356A9916B4B99AB06AD951B62795F2944115780C872E7F123891EAF1856E4A40
2315D956ED20BB59B6DFC7B0C8DDFBBB6489AC9F05116C49F6645589E6E5C621
9DCD98FFCCF74F280D5CA828656CA0DEA4A3590C0CE2656E288F10B56FF6A653
4FAD666710C7E6204526D48A9BE83CD7E4DC0B2E8DF7D568501DDB0E18670BEB
F5CFC81A0AAE8E22C1553C764F7775B8986DD68E6C24BFBFC4A9922D2C513EA3
61E017749016E6C565BD94109B7E1999BA44DDA7D1D05F2F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OPDWMZ+Calibri /Encoding get
dup 86 /V put
pop
%ADOEndSubsetFont
/OPDWMZ+Calibri*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp 
/hyphen /period /.notdef /zero /one /two /three /four 
/five /six 11{/.notdef}rp /B 4{/.notdef}rp /G 5{/.notdef}rp /M 
/.notdef /O 2{/.notdef}rp /R /S 2{/.notdef}rp /V 2{/.notdef}rp 
/Y 7{/.notdef}rp /a /b /c /d /e /f 
/g /.notdef /i /.notdef /k /l /.notdef /n 
/o 2{/.notdef}rp /r /s /t /u /v /w 
/.notdef /y 55{/.notdef}rp /plusminus 78{/.notdef}rp]
OPDWMZ+Calibri nf
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
21.6867 140.52 mo
(Violet)
[5.63737 2.27988 5.27972 2.28088 4.91925 0 ]xsh
grestore
gsave
2.36664 143.16 mo
64.8857 143.16 li
64.8857 130.92 li
2.36664 130.92 li
2.36664 143.16 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
45.5667 140.52 mo
( )sh
grestore
65.3667 143.16 mo
105.327 143.16 li
105.327 130.92 li
65.3667 130.92 li
cp
ef
70.5267 143.16 mo
100.167 143.16 li
100.167 130.92 li
70.5267 130.92 li
cp
f
gsave
65.3667 143.16 mo
105.327 143.16 li
105.327 130.92 li
65.3667 130.92 li
65.3667 143.16 li
clp
1 1 1 rgb
%ADOBeginSubsetFont: XOSAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
systemdict begin
OPDWMZ+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/seven <1C60D8A8C9B7A0860A3773A6894E24BBD7C8409D70D6EEDFD1E185AB
2F5EAA34B5004FAACF1D4CD9D2662AE8A84D363330D89BC7196BC0C13D91FC97
B3F1A320A319DF229062939D9A58734EE3F2D83BE48394F1B17C39A091EEB33E
CA231FB170089E03F7D9085F6048F52276A83CFD1E704022DF2EF076BB3F92DE
0F60722DA0CC34FB217788508ABFD755D374D9369EBFD940248FCE0E1138DEF7
1CCA039BA480BB562E100E019CAFAAADCEFBF929BB1986C849289162A4> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OPDWMZ+Calibri /Encoding get
dup 55 /seven put
pop
%ADOEndSubsetFont
/OPDWMZ+Calibri*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp 
/hyphen /period /.notdef /zero /one /two /three /four 
/five /six /seven 10{/.notdef}rp /B 4{/.notdef}rp /G 5{/.notdef}rp 
/M /.notdef /O 2{/.notdef}rp /R /S 2{/.notdef}rp /V 
2{/.notdef}rp /Y 7{/.notdef}rp /a /b /c /d /e 
/f /g /.notdef /i /.notdef /k /l /.notdef 
/n /o 2{/.notdef}rp /r /s /t /u /v 
/w /.notdef /y 55{/.notdef}rp /plusminus 78{/.notdef}rp]
OPDWMZ+Calibri nf
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
82.7667 140.52 mo
(7)sh
grestore
gsave
65.3667 143.16 mo
105.327 143.16 li
105.327 130.92 li
65.3667 130.92 li
65.3667 143.16 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
87.8067 140.52 mo
( )sh
grestore
105.927 143.16 mo
145.887 143.16 li
145.887 130.92 li
105.927 130.92 li
cp
ef
110.967 143.16 mo
140.727 143.16 li
140.727 130.92 li
110.967 130.92 li
cp
f
gsave
105.927 143.16 mo
145.887 143.16 li
145.887 130.92 li
105.927 130.92 li
105.927 143.16 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
123.207 140.52 mo
(7)sh
grestore
gsave
105.927 143.16 mo
145.887 143.16 li
145.887 130.92 li
105.927 130.92 li
105.927 143.16 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
128.247 140.52 mo
( )sh
grestore
146.367 143.16 mo
186.687 143.16 li
186.687 130.92 li
146.367 130.92 li
cp
ef
151.527 143.16 mo
181.527 143.16 li
181.527 130.92 li
151.527 130.92 li
cp
f
gsave
146.367 143.16 mo
186.687 143.16 li
186.687 130.92 li
146.367 130.92 li
146.367 143.16 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
164.007 140.52 mo
(7)sh
grestore
gsave
146.367 143.16 mo
186.687 143.16 li
186.687 130.92 li
146.367 130.92 li
146.367 143.16 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
169.047 140.52 mo
( )sh
grestore
187.167 143.16 mo
236.127 143.16 li
236.127 130.92 li
187.167 130.92 li
cp
ef
192.327 143.16 mo
230.727 143.16 li
230.727 130.92 li
192.327 130.92 li
cp
f
gsave
187.167 143.16 mo
236.127 143.16 li
236.127 130.92 li
187.167 130.92 li
187.167 143.16 li
clp
1 1 1 rgb
OPDWNA+CambriaMath*1 [9.96 0 0 -9.96 0 0 ]msf
192.327 140.52 mo
(\327)sh
grestore
gsave
187.167 143.16 mo
236.127 143.16 li
236.127 130.92 li
187.167 130.92 li
187.167 143.16 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
199.527 140.52 mo
( )sh
grestore
gsave
187.167 143.16 mo
236.127 143.16 li
236.127 130.92 li
187.167 130.92 li
187.167 143.16 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
201.807 140.52 mo
(10M)
[5.03979 5.03979 0 ]xsh
grestore
gsave
187.167 143.16 mo
236.127 143.16 li
236.127 130.92 li
187.167 130.92 li
187.167 143.16 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
220.527 140.52 mo
( )sh
grestore
236.127 143.16 mo
276.327 143.16 li
276.327 130.92 li
236.127 130.92 li
cp
ef
241.527 143.16 mo
271.167 143.16 li
271.167 130.92 li
241.527 130.92 li
cp
f
gsave
236.127 143.16 mo
276.327 143.16 li
276.327 130.92 li
236.127 130.92 li
236.127 143.16 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
251.727 140.52 mo
(\(10)
[2.99789 5.03979 0 ]xsh
grestore
gsave
236.127 143.16 mo
276.327 143.16 li
276.327 130.92 li
236.127 130.92 li
236.127 143.16 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [6.48 0 0 -6.48 0 0 ]msf
264.807 137.04 mo
(7)sh
grestore
gsave
236.127 143.16 mo
276.327 143.16 li
276.327 130.92 li
236.127 130.92 li
236.127 143.16 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
268.047 140.52 mo
(\))sh
grestore
gsave
236.127 143.16 mo
276.327 143.16 li
276.327 130.92 li
236.127 130.92 li
236.127 143.16 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
271.167 140.52 mo
( )sh
grestore
276.687 143.16 mo
343.887 143.16 li
343.887 130.92 li
276.687 130.92 li
cp
ef
298.287 143.16 mo
338.367 143.16 li
338.367 130.92 li
298.287 130.92 li
cp
f
gsave
276.687 143.16 mo
343.886 143.16 li
343.886 130.92 li
276.687 130.92 li
276.687 143.16 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
298.287 140.52 mo
(\261 0.1 %)
[4.92026 2.28082 5.03979 2.52084 5.03983 2.28082 0 ]xsh
grestore
gsave
276.687 143.16 mo
343.886 143.16 li
343.886 130.92 li
276.687 130.92 li
276.687 143.16 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
327.567 140.52 mo
( )sh
grestore
1.88667 130.92 mo
2.36768 130.92 li
2.36768 130.439 li
1.88667 130.439 li
cp
.137422 .122799 .126081 rgb
f
2.36668 130.92 mo
64.8857 130.92 li
64.8857 130.439 li
2.36668 130.439 li
cp
f
64.8867 130.92 mo
65.3677 130.92 li
65.3677 130.439 li
64.8867 130.439 li
cp
f
65.3667 130.92 mo
105.447 130.92 li
105.447 130.439 li
65.3667 130.439 li
cp
f
105.447 130.92 mo
105.927 130.92 li
105.927 130.439 li
105.447 130.439 li
cp
f
105.927 130.92 mo
145.887 130.92 li
145.887 130.439 li
105.927 130.439 li
cp
f
145.887 130.92 mo
146.368 130.92 li
146.368 130.439 li
145.887 130.439 li
cp
f
146.367 130.92 mo
186.687 130.92 li
186.687 130.439 li
146.367 130.439 li
cp
f
186.687 130.92 mo
187.167 130.92 li
187.167 130.439 li
186.687 130.439 li
cp
f
187.167 130.92 mo
236.127 130.92 li
236.127 130.439 li
187.167 130.439 li
cp
f
236.127 130.92 mo
236.607 130.92 li
236.607 130.439 li
236.127 130.439 li
cp
f
236.607 130.92 mo
276.447 130.92 li
276.447 130.439 li
236.607 130.439 li
cp
f
276.447 130.92 mo
276.927 130.92 li
276.927 130.439 li
276.447 130.439 li
cp
f
276.927 130.92 mo
343.887 130.92 li
343.887 130.439 li
276.927 130.439 li
cp
f
343.887 130.92 mo
344.368 130.92 li
344.368 130.439 li
343.887 130.439 li
cp
f
1.88667 143.16 mo
2.36768 143.16 li
2.36768 130.92 li
1.88667 130.92 li
cp
f
64.8867 143.16 mo
65.3677 143.16 li
65.3677 130.92 li
64.8867 130.92 li
cp
f
105.447 143.16 mo
105.927 143.16 li
105.927 130.92 li
105.447 130.92 li
cp
f
145.887 143.16 mo
146.368 143.16 li
146.368 130.92 li
145.887 130.92 li
cp
f
186.687 143.16 mo
187.167 143.16 li
187.167 130.92 li
186.687 130.92 li
cp
f
276.447 143.16 mo
276.927 143.16 li
276.927 130.92 li
276.447 130.92 li
cp
f
343.887 143.16 mo
344.368 143.16 li
344.368 130.92 li
343.887 130.92 li
cp
f
2.36668 155.88 mo
64.8867 155.88 li
64.8867 143.64 li
2.36668 143.64 li
cp
.575925 .584052 .594456 rgb
ef
7.52667 155.88 mo
59.7267 155.88 li
59.7267 143.64 li
7.52667 143.64 li
cp
f
gsave
2.36664 155.88 mo
64.8857 155.88 li
64.8857 143.64 li
2.36664 143.64 li
2.36664 155.88 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
24.0867 153.24 mo
(Gray)
[6.23991 3.48001 4.79976 0 ]xsh
grestore
gsave
2.36664 155.88 mo
64.8857 155.88 li
64.8857 143.64 li
2.36664 143.64 li
2.36664 155.88 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
43.1667 153.24 mo
( )sh
grestore
65.3667 155.88 mo
105.327 155.88 li
105.327 143.64 li
65.3667 143.64 li
cp
ef
70.5267 155.88 mo
100.167 155.88 li
100.167 143.64 li
70.5267 143.64 li
cp
f
gsave
65.3667 155.88 mo
105.327 155.88 li
105.327 143.64 li
65.3667 143.64 li
65.3667 155.88 li
clp
1 1 1 rgb
%ADOBeginSubsetFont: XOSAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
systemdict begin
OPDWMZ+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/eight <1C60D8A8C9B7A0860A34D75BA8453DBFB814014C0C4728DA471D5EF3
791FA4240EB1CC5BF59A5FA3487E2F0E763DAE46F0DA05A89110163D83524D7E
A404AA647CFB8B0BF18B885098268812056B970352E34734EFB8EA99DA80F13C
7EFBAAE9ADBB45CD604BFF3A39C9CC7A0A83927D7D5A4B2E75D06E370927DFBA
451037A06D79A6A428CAC7E4423B70CA5D5D84E759135799161CA6E3C2209FA7
2A04B7CEE79D2AC2B53CAC28C9C6BE5E7D7175AE6E2CDBF62577563D698630AB
A357964D6FFA816FE517BCC518B9BCEDB14F7DE18A518BCAEFF1096D5DA42B50
3A93BE53FF4096FBA3F5C24B50D0262930A71DE4A30874070C74699A09A6A247
94006AC9B7A896C548D6B8A51F3AEA75D328845EEB09204FA41C0B74E70ABFB1
182501534524562F70E09292D6FA1A2C8E6C1FD060E3FBD2AF40CE1DF48002A1
4BE258ED46D903FA50D027660F585DE036DCF220923D5C07205E776E7E63A964
5C94249B49895A3F8BA08BA0FB2447F849C17ADA529360F3F87B59DDD9C8CE3F
87CCDE20932F0C0C3CA7CC03F3A3737BDDA3DE2F37B11A6A44911E362A1E35F4
3EA93B84A7F7> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OPDWMZ+Calibri /Encoding get
dup 56 /eight put
pop
%ADOEndSubsetFont
/OPDWMZ+Calibri*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp 
/hyphen /period /.notdef /zero /one /two /three /four 
/five /six /seven /eight 9{/.notdef}rp /B 4{/.notdef}rp /G 
5{/.notdef}rp /M /.notdef /O 2{/.notdef}rp /R /S 2{/.notdef}rp 
/V 2{/.notdef}rp /Y 7{/.notdef}rp /a /b /c /d 
/e /f /g /.notdef /i /.notdef /k /l 
/.notdef /n /o 2{/.notdef}rp /r /s /t /u 
/v /w /.notdef /y 55{/.notdef}rp /plusminus 78{/.notdef}rp]
OPDWMZ+Calibri nf
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
82.7667 153.24 mo
(8)sh
grestore
gsave
65.3667 155.88 mo
105.327 155.88 li
105.327 143.64 li
65.3667 143.64 li
65.3667 155.88 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
87.8067 153.24 mo
( )sh
grestore
105.927 155.88 mo
145.887 155.88 li
145.887 143.64 li
105.927 143.64 li
cp
ef
110.967 155.88 mo
140.727 155.88 li
140.727 143.64 li
110.967 143.64 li
cp
f
gsave
105.927 155.88 mo
145.887 155.88 li
145.887 143.64 li
105.927 143.64 li
105.927 155.88 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
123.207 153.24 mo
(8)sh
grestore
gsave
105.927 155.88 mo
145.887 155.88 li
145.887 143.64 li
105.927 143.64 li
105.927 155.88 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
128.247 153.24 mo
( )sh
grestore
146.367 155.88 mo
186.687 155.88 li
186.687 143.64 li
146.367 143.64 li
cp
ef
151.527 155.88 mo
181.527 155.88 li
181.527 143.64 li
151.527 143.64 li
cp
f
gsave
146.367 155.88 mo
186.687 155.88 li
186.687 143.64 li
146.367 143.64 li
146.367 155.88 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
164.007 153.24 mo
(8)sh
grestore
gsave
146.367 155.88 mo
186.687 155.88 li
186.687 143.64 li
146.367 143.64 li
146.367 155.88 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
169.047 153.24 mo
( )sh
grestore
187.167 155.88 mo
236.127 155.88 li
236.127 143.64 li
187.167 143.64 li
cp
ef
192.327 155.88 mo
230.727 155.88 li
230.727 143.64 li
192.327 143.64 li
cp
f
gsave
187.167 155.88 mo
236.127 155.88 li
236.127 143.64 li
187.167 143.64 li
187.167 155.88 li
clp
1 1 1 rgb
OPDWNA+CambriaMath*1 [9.96 0 0 -9.96 0 0 ]msf
192.327 153.24 mo
(\327)sh
grestore
gsave
187.167 155.88 mo
236.127 155.88 li
236.127 143.64 li
187.167 143.64 li
187.167 155.88 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
199.527 153.24 mo
( )sh
grestore
gsave
187.167 155.88 mo
236.127 155.88 li
236.127 143.64 li
187.167 143.64 li
187.167 155.88 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
201.807 153.24 mo
(100M)
[5.03979 5.03979 5.03979 0 ]xsh
grestore
gsave
187.167 155.88 mo
236.127 155.88 li
236.127 143.64 li
187.167 143.64 li
187.167 155.88 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
225.567 153.24 mo
( )sh
grestore
236.127 155.88 mo
276.327 155.88 li
276.327 143.64 li
236.127 143.64 li
cp
ef
241.527 155.88 mo
271.167 155.88 li
271.167 143.64 li
241.527 143.64 li
cp
f
gsave
236.127 155.88 mo
276.327 155.88 li
276.327 143.64 li
236.127 143.64 li
236.127 155.88 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
251.727 153.24 mo
(\(10)
[2.99789 5.03979 0 ]xsh
grestore
gsave
236.127 155.88 mo
276.327 155.88 li
276.327 143.64 li
236.127 143.64 li
236.127 155.88 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [6.48 0 0 -6.48 0 0 ]msf
264.807 149.76 mo
(8)sh
grestore
gsave
236.127 155.88 mo
276.327 155.88 li
276.327 143.64 li
236.127 143.64 li
236.127 155.88 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
268.047 153.24 mo
(\))sh
grestore
gsave
236.127 155.88 mo
276.327 155.88 li
276.327 143.64 li
236.127 143.64 li
236.127 155.88 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
271.167 153.24 mo
( )sh
grestore
276.687 155.88 mo
343.887 155.88 li
343.887 143.64 li
276.687 143.64 li
cp
ef
298.287 155.88 mo
338.367 155.88 li
338.367 143.64 li
298.287 143.64 li
cp
f
gsave
276.687 155.88 mo
343.886 155.88 li
343.886 143.64 li
276.687 143.64 li
276.687 155.88 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
298.287 153.24 mo
( )sh
grestore
1.88667 143.64 mo
2.36768 143.64 li
2.36768 143.16 li
1.88667 143.16 li
cp
.137422 .122799 .126081 rgb
f
2.36668 143.64 mo
64.8857 143.64 li
64.8857 143.16 li
2.36668 143.16 li
cp
f
64.8867 143.64 mo
65.3677 143.64 li
65.3677 143.16 li
64.8867 143.16 li
cp
f
65.3667 143.64 mo
105.447 143.64 li
105.447 143.16 li
65.3667 143.16 li
cp
f
105.447 143.64 mo
105.927 143.64 li
105.927 143.16 li
105.447 143.16 li
cp
f
105.927 143.64 mo
145.887 143.64 li
145.887 143.16 li
105.927 143.16 li
cp
f
145.887 143.64 mo
146.368 143.64 li
146.368 143.16 li
145.887 143.16 li
cp
f
146.367 143.64 mo
186.687 143.64 li
186.687 143.16 li
146.367 143.16 li
cp
f
186.687 143.64 mo
187.167 143.64 li
187.167 143.16 li
186.687 143.16 li
cp
f
187.167 143.64 mo
236.127 143.64 li
236.127 143.16 li
187.167 143.16 li
cp
f
236.127 143.64 mo
236.607 143.64 li
236.607 143.16 li
236.127 143.16 li
cp
f
236.607 143.64 mo
276.447 143.64 li
276.447 143.16 li
236.607 143.16 li
cp
f
276.447 143.64 mo
276.927 143.64 li
276.927 143.16 li
276.447 143.16 li
cp
f
276.927 143.64 mo
343.887 143.64 li
343.887 143.16 li
276.927 143.16 li
cp
f
343.887 143.64 mo
344.368 143.64 li
344.368 143.16 li
343.887 143.16 li
cp
f
1.88667 155.88 mo
2.36768 155.88 li
2.36768 143.64 li
1.88667 143.64 li
cp
f
64.8867 155.88 mo
65.3677 155.88 li
65.3677 143.64 li
64.8867 143.64 li
cp
f
105.447 155.88 mo
105.927 155.88 li
105.927 143.64 li
105.447 143.64 li
cp
f
145.887 155.88 mo
146.368 155.88 li
146.368 143.64 li
145.887 143.64 li
cp
f
186.687 155.88 mo
187.167 155.88 li
187.167 143.64 li
186.687 143.64 li
cp
f
276.447 155.88 mo
276.927 155.88 li
276.927 143.64 li
276.447 143.64 li
cp
f
343.887 155.88 mo
344.368 155.88 li
344.368 143.64 li
343.887 143.64 li
cp
f
gsave
2.36664 168.6 mo
64.8857 168.6 li
64.8857 156.36 li
2.36664 156.36 li
2.36664 168.6 li
clp
%ADOBeginSubsetFont: XOSAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
systemdict begin
OPDWMZ+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/W <1C60D8A8C9B59C1010CD6DE510D8E88403DDDCE882F1AC7D165B8C14E05C
D3E52F9320567E3515D0AEBAF4F8B245451AF9B039B3C0D154BF663C02801384
FB41D3B0A978B89351A95F33C6B07F4E867FF418B4DA8644FB59D063C4722238
43674822014F7AFDDB012DC03C8B95191E00381FA3AEAE43A10A87EE59876999
DCD54ADF7C28072901B72989402F130B22ACFF69FAA4EC941A59DEAE071310E6
E07660CFB4C9D8C0A6C6CFB36AE30EE4A8215D9C95C1B1C50E4A19F5E49920B8
469BBDC4C918E728AB0C706159DF9B41E918B58FDF609A022499AEF6D11660C9
F78D19FF461D056CEDC8E040EA7A6AEC4E74E921FEF28CD7572CD683133F7595
FBE79122E9ABACC3B6A2B81236A36A2781652DA4A3F0A36E7672763E65392339
C7D4D8BA4D82CC4447ADD1F7AA7FB01EFF306694F7657082271F405466DE99F9
C9065E9946587234E7DCDE6A1DC19FE9> |-
/h <1C60D8A8C9B78E05EAADB0123115B3BD5BA83FAABE276A1BF5A23DB55CF4
C30D8A20FB7C70B167834EB7C5767A7762DBDEADBE99BB9DD1507EDF7CB5B44C
FB5AE7F50CE798A09AFFC2F8A1E21C8BA96A3248C2464366A8BF234A7465BA6B
08C9AB7474ED94583744D778660448C601BC1D9C2E8788B65F173F45C272BBE3
CD6AC55E870CEE94D478E3D51C8A2E608A02982A9D048914B7569407A83B9D3C
DA9FE7ECB2AF4F7816F117CC85330A774976280DEB1A8C317A8A170186F61B3F
5FC1D130A0DA1A6A5AE24C0FB08191CD76F47EDEDB0EAC8DE369D515B3B14661
497F94A2412A37D63D31ABC4AE50DD37B3DDB58CFDBCD2A17246A6058BA85E12
DAD2711083774A128264C809F70CFC31D164703798D4642E5D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OPDWMZ+Calibri /Encoding get
dup 87 /W put
dup 104 /h put
pop
%ADOEndSubsetFont
/OPDWMZ+Calibri*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp 
/hyphen /period /.notdef /zero /one /two /three /four 
/five /six /seven /eight 9{/.notdef}rp /B 4{/.notdef}rp /G 
5{/.notdef}rp /M /.notdef /O 2{/.notdef}rp /R /S 2{/.notdef}rp 
/V /W /.notdef /Y 7{/.notdef}rp /a /b /c 
/d /e /f /g /h /i /.notdef /k 
/l /.notdef /n /o 2{/.notdef}rp /r /s /t 
/u /v /w /.notdef /y 55{/.notdef}rp /plusminus 78{/.notdef}rp]
OPDWMZ+Calibri nf
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
21.2067 165.96 mo
(White)
[8.88431 5.27974 2.27988 3.3566 0 ]xsh
grestore
gsave
2.36664 168.6 mo
64.8857 168.6 li
64.8857 156.36 li
2.36664 156.36 li
2.36664 168.6 li
clp
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
45.9267 165.96 mo
( )sh
grestore
gsave
65.3667 168.6 mo
105.327 168.6 li
105.327 156.36 li
65.3667 156.36 li
65.3667 168.6 li
clp
%ADOBeginSubsetFont: XOSAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
systemdict begin
OPDWMZ+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/nine <1C60D8A8C9B7A0860A301EA0CDD1E6614C5B4820FB68F7520C96ACBDA
5F5BAFFB43C2A40F5694CD0DF6C758BC4B27D6CA50AE28575E858E493E8EE957
51B2967F5BE904EB042AA54C454E869DDE0E5ECB98D962A79A94218E6CC99EC9
4CA8492476CEFACC72947B34D71483EF4A3F9FBD6098F9E6D0F9802BC600368B
96C45A928854D685E5F703C8552927ADDA55A7F6845FF94EAA937AABC9BBC958
B4C081275431EC73E38483911A0885AD9592E2DC6E2A46F9C6114077BB266957
E6E28F6602B8DDCA0BEF1FC2E85630EED478837B476664D493FE7C9C39460D3A
452FBB2694BD1646270493EF025BCD287C17FAB57AADFEC6BBBB276DCBDEDD84
29C79E3F0B7AE72D2AF69E31859788B91D84A6A02C4F5ACED217B45DF2B39CE3
6418F76E74AA7A90E0A131831180D8D1C02A132AF63FCFF40837B44B674B76E4
8FD0C7367BC67F41C69D179A9D8F36F3A84B3AE05F25F56032B04AB8A96049A1
F3B6B46B1ACDC441EDFD8013BADDD572E9DB08526455C6B9FAA1650BE8922CF3
F0574F6C4F7DFD3E1A3A0FBB1E99FF4319B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OPDWMZ+Calibri /Encoding get
dup 57 /nine put
pop
%ADOEndSubsetFont
/OPDWMZ+Calibri*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp 
/hyphen /period /.notdef /zero /one /two /three /four 
/five /six /seven /eight /nine 8{/.notdef}rp /B 4{/.notdef}rp 
/G 5{/.notdef}rp /M /.notdef /O 2{/.notdef}rp /R /S 
2{/.notdef}rp /V /W /.notdef /Y 7{/.notdef}rp /a /b 
/c /d /e /f /g /h /i /.notdef 
/k /l /.notdef /n /o 2{/.notdef}rp /r /s 
/t /u /v /w /.notdef /y 55{/.notdef}rp /plusminus 
78{/.notdef}rp]
OPDWMZ+Calibri nf
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
82.7667 165.96 mo
(9)sh
grestore
gsave
65.3667 168.6 mo
105.327 168.6 li
105.327 156.36 li
65.3667 156.36 li
65.3667 168.6 li
clp
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
87.8067 165.96 mo
( )sh
grestore
gsave
105.927 168.6 mo
145.887 168.6 li
145.887 156.36 li
105.927 156.36 li
105.927 168.6 li
clp
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
123.207 165.96 mo
(9)sh
grestore
gsave
105.927 168.6 mo
145.887 168.6 li
145.887 156.36 li
105.927 156.36 li
105.927 168.6 li
clp
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
128.247 165.96 mo
( )sh
grestore
gsave
146.367 168.6 mo
186.687 168.6 li
186.687 156.36 li
146.367 156.36 li
146.367 168.6 li
clp
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
164.007 165.96 mo
(9)sh
grestore
gsave
146.367 168.6 mo
186.687 168.6 li
186.687 156.36 li
146.367 156.36 li
146.367 168.6 li
clp
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
169.047 165.96 mo
( )sh
grestore
gsave
187.167 168.6 mo
236.127 168.6 li
236.127 156.36 li
187.167 156.36 li
187.167 168.6 li
clp
OPDWNA+CambriaMath*1 [9.96 0 0 -9.96 0 0 ]msf
192.327 165.96 mo
(\327)sh
grestore
gsave
187.167 168.6 mo
236.127 168.6 li
236.127 156.36 li
187.167 156.36 li
187.167 168.6 li
clp
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
199.527 165.96 mo
( )sh
grestore
gsave
187.167 168.6 mo
236.127 168.6 li
236.127 156.36 li
187.167 156.36 li
187.167 168.6 li
clp
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
201.807 165.96 mo
(1G)
[5.03979 0 ]xsh
grestore
gsave
187.167 168.6 mo
236.127 168.6 li
236.127 156.36 li
187.167 156.36 li
187.167 168.6 li
clp
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
213.207 165.96 mo
( )sh
grestore
gsave
236.127 168.6 mo
276.327 168.6 li
276.327 156.36 li
236.127 156.36 li
236.127 168.6 li
clp
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
251.727 165.96 mo
(\(10)
[2.99789 5.03979 0 ]xsh
grestore
gsave
236.127 168.6 mo
276.327 168.6 li
276.327 156.36 li
236.127 156.36 li
236.127 168.6 li
clp
OPDWMZ+Calibri*1 [6.48 0 0 -6.48 0 0 ]msf
264.807 162.48 mo
(9)sh
grestore
gsave
236.127 168.6 mo
276.327 168.6 li
276.327 156.36 li
236.127 156.36 li
236.127 168.6 li
clp
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
268.047 165.96 mo
(\))sh
grestore
gsave
236.127 168.6 mo
276.327 168.6 li
276.327 156.36 li
236.127 156.36 li
236.127 168.6 li
clp
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
271.167 165.96 mo
( )sh
grestore
gsave
276.687 168.6 mo
343.886 168.6 li
343.886 156.36 li
276.687 156.36 li
276.687 168.6 li
clp
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
338.607 165.96 mo
( )sh
grestore
1.88667 156.36 mo
2.36768 156.36 li
2.36768 155.88 li
1.88667 155.88 li
cp
f
2.36668 156.36 mo
64.8857 156.36 li
64.8857 155.88 li
2.36668 155.88 li
cp
f
64.8867 156.36 mo
65.3677 156.36 li
65.3677 155.88 li
64.8867 155.88 li
cp
f
65.3667 156.36 mo
105.447 156.36 li
105.447 155.88 li
65.3667 155.88 li
cp
f
105.447 156.36 mo
105.927 156.36 li
105.927 155.88 li
105.447 155.88 li
cp
f
105.927 156.36 mo
145.887 156.36 li
145.887 155.88 li
105.927 155.88 li
cp
f
145.887 156.36 mo
146.368 156.36 li
146.368 155.88 li
145.887 155.88 li
cp
f
146.367 156.36 mo
186.687 156.36 li
186.687 155.88 li
146.367 155.88 li
cp
f
186.687 156.36 mo
187.167 156.36 li
187.167 155.88 li
186.687 155.88 li
cp
f
187.167 156.36 mo
236.127 156.36 li
236.127 155.88 li
187.167 155.88 li
cp
f
236.127 156.36 mo
236.607 156.36 li
236.607 155.88 li
236.127 155.88 li
cp
f
236.607 156.36 mo
276.447 156.36 li
276.447 155.88 li
236.607 155.88 li
cp
f
276.447 156.36 mo
276.927 156.36 li
276.927 155.88 li
276.447 155.88 li
cp
f
276.927 156.36 mo
343.887 156.36 li
343.887 155.88 li
276.927 155.88 li
cp
f
343.887 156.36 mo
344.368 156.36 li
344.368 155.88 li
343.887 155.88 li
cp
f
1.88667 168.6 mo
2.36768 168.6 li
2.36768 156.36 li
1.88667 156.36 li
cp
f
1.88667 169.08 mo
2.36768 169.08 li
2.36768 168.599 li
1.88667 168.599 li
cp
f
1.88667 169.08 mo
2.36768 169.08 li
2.36768 168.599 li
1.88667 168.599 li
cp
f
2.36668 169.08 mo
64.8857 169.08 li
64.8857 168.599 li
2.36668 168.599 li
cp
f
64.8867 168.6 mo
65.3677 168.6 li
65.3677 156.36 li
64.8867 156.36 li
cp
f
64.8867 169.08 mo
65.3677 169.08 li
65.3677 168.599 li
64.8867 168.599 li
cp
f
65.3667 169.08 mo
105.447 169.08 li
105.447 168.599 li
65.3667 168.599 li
cp
f
105.447 168.6 mo
105.927 168.6 li
105.927 156.36 li
105.447 156.36 li
cp
f
105.447 169.08 mo
105.927 169.08 li
105.927 168.599 li
105.447 168.599 li
cp
f
105.927 169.08 mo
145.887 169.08 li
145.887 168.599 li
105.927 168.599 li
cp
f
145.887 168.6 mo
146.368 168.6 li
146.368 156.36 li
145.887 156.36 li
cp
f
145.887 169.08 mo
146.368 169.08 li
146.368 168.599 li
145.887 168.599 li
cp
f
146.367 169.08 mo
186.687 169.08 li
186.687 168.599 li
146.367 168.599 li
cp
f
186.687 168.6 mo
187.167 168.6 li
187.167 156.36 li
186.687 156.36 li
cp
f
186.687 169.08 mo
187.167 169.08 li
187.167 168.599 li
186.687 168.599 li
cp
f
187.167 169.08 mo
236.127 169.08 li
236.127 168.599 li
187.167 168.599 li
cp
f
235.407 169.08 mo
235.887 169.08 li
235.887 168.599 li
235.407 168.599 li
cp
f
235.887 169.08 mo
276.447 169.08 li
276.447 168.599 li
235.887 168.599 li
cp
f
276.447 168.6 mo
276.927 168.6 li
276.927 156.36 li
276.447 156.36 li
cp
f
276.447 169.08 mo
276.927 169.08 li
276.927 168.599 li
276.447 168.599 li
cp
f
276.927 169.08 mo
343.887 169.08 li
343.887 168.599 li
276.927 168.599 li
cp
f
343.887 168.6 mo
344.368 168.6 li
344.368 156.36 li
343.887 156.36 li
cp
f
343.887 169.08 mo
344.368 169.08 li
344.368 168.599 li
343.887 168.599 li
cp
f
343.887 169.08 mo
344.368 169.08 li
344.368 168.599 li
343.887 168.599 li
cp
f
gsave
20.7267 231.24 mo
127.166 231.24 li
127.166 217.321 li
20.7267 217.321 li
20.7267 231.24 li
clp
%ADOBeginSubsetFont: XOSAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
systemdict begin
OPDWMZ+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/F <1C60D8A8C9B770DA42EB776051437272AB3109214F2F5AF299B91EDE1F76
8C5024668BC49B69066FA908CF8FE87EDFDF17A758EE488BEC994A194C62BD1C
9426343C7C81CA3B3F963FDAD914A0EC9F4FE665084402A52314B863A06B82A1
2C3F91EE9C0F2B145AA7D2782C4C7297D5A7A4C8227440D2EB6A6858EEAF3E8D
5172513D85C8059F336BE8B10563AA3DFEF476A6E0B2054B979D1F9B46798507
76A59C7497BC538F93679A65B973B2A534700FFE8CC98CDC2940E7759A9043FA
0F4AD602EBE420E53281F2FA075E541FDAF915055861D63FE68E0F45> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OPDWMZ+Calibri /Encoding get
dup 70 /F put
pop
%ADOEndSubsetFont
/OPDWMZ+Calibri*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp 
/hyphen /period /.notdef /zero /one /two /three /four 
/five /six /seven /eight /nine 8{/.notdef}rp /B 3{/.notdef}rp 
/F /G 5{/.notdef}rp /M /.notdef /O 2{/.notdef}rp /R 
/S 2{/.notdef}rp /V /W /.notdef /Y 7{/.notdef}rp /a 
/b /c /d /e /f /g /h /i 
/.notdef /k /l /.notdef /n /o 2{/.notdef}rp /r 
/s /t /u /v /w /.notdef /y 55{/.notdef}rp 
/plusminus 78{/.notdef}rp]
OPDWMZ+Calibri nf
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
36.8067 226.92 mo
(Five bands)
[4.55968 2.27989 4.56064 4.91925 2.28082 5.27875 4.79976 5.27873 5.27875 0 ]xsh
grestore
gsave
20.7267 231.24 mo
127.166 231.24 li
127.166 217.321 li
20.7267 217.321 li
20.7267 231.24 li
clp
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
79.8867 226.92 mo
( )sh
grestore
gsave
20.7267 231.24 mo
127.166 231.24 li
127.166 217.321 li
20.7267 217.321 li
20.7267 231.24 li
clp
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
82.1667 226.92 mo
(\(3 digits\))
[2.99989 5.03979 2.28082 5.27972 2.27989 4.68114 2.27988 3.36057 3.83965 0 ]xsh
grestore
gsave
20.7267 231.24 mo
127.166 231.24 li
127.166 217.321 li
20.7267 217.321 li
20.7267 231.24 li
clp
%ADOBeginSubsetFont: XOSAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
systemdict begin
OPDWMZ+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/colon <1C60D8A8C9B85EE3AA09F13AFE1EA1D5487D04185C635E2F65BD02BB
7DF22BBFE5051B7512FEE106F66F66184353AFCBEED1CB5314B7B80F3E52B269
54A6CFEC4A802D718865FBD1339BE6AD949F7F886C41CCF2B4B54575279543A1
80F06A1CDE595E8DAED7162EF75EED02C4368BFD960D814A5603A0093EE2ABF2
B8EFC6D527E7309A7D085984A9616E0355BBE99B23383E635D8345EE503BB7E7
F606D03708C2AC02168B9980286B030538C369A5588A9CD5E4A8087241AB991E
45CC89FF12CB4C89B42B01621767D0EDD116D84098233D0CC562EF89698FB414
CFA2163D7ED0B4F71F70D57FA8F1C7830EE5D4CDF38F5B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OPDWMZ+Calibri /Encoding get
dup 58 /colon put
pop
%ADOEndSubsetFont
/OPDWMZ+Calibri*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp 
/hyphen /period /.notdef /zero /one /two /three /four 
/five /six /seven /eight /nine /colon 7{/.notdef}rp /B 
3{/.notdef}rp /F /G 5{/.notdef}rp /M /.notdef /O 2{/.notdef}rp 
/R /S 2{/.notdef}rp /V /W /.notdef /Y 7{/.notdef}rp 
/a /b /c /d /e /f /g /h 
/i /.notdef /k /l /.notdef /n /o 2{/.notdef}rp 
/r /s /t /u /v /w /.notdef /y 
55{/.notdef}rp /plusminus 78{/.notdef}rp]
OPDWMZ+Calibri nf
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
117.327 226.92 mo
(:)sh
grestore
gsave
20.7267 231.24 mo
127.166 231.24 li
127.166 217.321 li
20.7267 217.321 li
20.7267 231.24 li
clp
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
120.087 226.92 mo
( )sh
grestore
gsave
20.7267 231.24 mo
127.166 231.24 li
127.166 217.321 li
20.7267 217.321 li
20.7267 231.24 li
clp
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
120.087 239.159 mo
( )sh
grestore
gsave
214.167 232.2 mo
298.647 232.2 li
298.647 218.28 li
214.167 218.28 li
214.167 232.2 li
clp
%ADOBeginSubsetFont: XOSAAA+Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
systemdict begin
OPDWMZ+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/equal <1C60D8A8C9B7A9C0DC8F9B7338FF6B63AA1670AFC8147E0CD433F08C
5474CAE852CF95D8BEF2933A0AC67D02F006C5EE66ED6AF10D191D0CA5E14F7D
1D5BF31125E3485CE5F272A5E1CBE632142ED17DE055EB41A08C9D91E3BBDE89
6311D75334C8FC29AB5D5A3A403F0A166D38532BF977EAA4D198B3FD9D3BC53D
D726926D4DD601386B9687A455DCF59F7A3F7C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OPDWMZ+Calibri /Encoding get
dup 61 /equal put
pop
%ADOEndSubsetFont
/OPDWMZ+Calibri*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 3{/.notdef}rp 
/hyphen /period /.notdef /zero /one /two /three /four 
/five /six /seven /eight /nine /colon 2{/.notdef}rp /equal 
4{/.notdef}rp /B 3{/.notdef}rp /F /G 5{/.notdef}rp /M /.notdef 
/O 2{/.notdef}rp /R /S 2{/.notdef}rp /V /W /.notdef 
/Y 7{/.notdef}rp /a /b /c /d /e /f 
/g /h /i /.notdef /k /l /.notdef /n 
/o 2{/.notdef}rp /r /s /t /u /v /w 
/.notdef /y 55{/.notdef}rp /plusminus 78{/.notdef}rp]
OPDWMZ+Calibri nf
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
221.367 227.879 mo
(= )
[4.92026 0 ]xsh
grestore
gsave
214.167 232.2 mo
298.647 232.2 li
298.647 218.28 li
214.167 218.28 li
214.167 232.2 li
clp
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
228.567 227.879 mo
(275)
[5.03979 5.03979 0 ]xsh
grestore
gsave
214.167 232.2 mo
298.647 232.2 li
298.647 218.28 li
214.167 218.28 li
214.167 232.2 li
clp
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
243.687 227.879 mo
( )sh
grestore
gsave
214.167 232.2 mo
298.647 232.2 li
298.647 218.28 li
214.167 218.28 li
214.167 232.2 li
clp
%ADOBeginSubsetFont: HJCBAA+Calibri-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (HJCBAA+Calibri)
%%Title: (HJCBAA+Calibri Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /HJCBAA+Calibri def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-503 -312 1240 1026} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 6444 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 4 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B7A086528E2CBE7FD4F03CC1C545DFC3C53F52C6923342525
31335C4AFD91E9493A7B9787114ADBF50CAD0D8D8F4E0FD112CA0EDC244BC77A
FB35E52902467E4B7D65BC23E8AB084EE08EDC3C9FE17948A4E93ECA5D5D8A99
AF099DAB98A96A7EEC3487AD5909F63F36A9F52E364FE794F0586CEACB0693AE
A3E3B131EDB924E9018AC085D5D058B3A8419D5096479413ADE107D9F5302816
818EECEB683CD82FAAA79E358EAA71283CC02664EE09C62BDF6E0D9BC98D9F30
8DF8AEA61A9B7C090BD7FD96A3223C7AE0D3D1A8F2E623FA6B7C467CA6FECDBA
0B792188DFEEBD3D01BCE6CC077D778842DE1B5E36F7F8EB4C68A439269E0981
B28AD1790AA058065E4B6AD27A659E12C7322A5BE1E7DF9729C0030192F3688A
380035351BB0945D5DC7515959F458727E2B8854977E466D6DDC900E997B52F6
BAB4C73A178A3B47EBB3C3FC842F51CC6E114336F3E4E5E72B20D8F94A7BA3BA
965E83BF37BAA664C34B8502BB9E9B9BEDD7EBC5DCBC4FFF5EBCA9C032449885
D42A9DCCBA2A816B59D7978373DF4208E5608F69A2EAF492AC156CC637D5A11A
F573B17CF9F38> |
591 <001C60D8A8C9B64D0922D7A09E818C42A0EA59AA02B8E3527C2037267D2
56A7D734CD8A1D437F2161E9F46926664C5B74FF721EFCC36E7B16811E1891CE
D694718EA6B08F7EA6D7E8286E60A616A6C30131839157C657B4B52DC6E1F9F7
EE0E7E3F9379043ADE51008E16E678F262381683FDAF82480187308F3884F3F7
4A3E8439CFF74506427106FEEB91626686298ABA4D032B0A1FB3953AE51FF916
3D1CBFB1424F0A4F9EC9D098ACBCEC6DE232002FB1178749B638B6C94226C803
D894409A18A0F793D5F76275D429CAF22491BF1DEC28ED30CEC6BBC5329CAFD7
A1612FBCB527E0F8D25049E3537E049B425592095A26B02004485708BF894ED6
16A56E8D6E80CC680C66404FFD015F0DBD3E2AA7E5CA67E205EBA40810D0FAF3
73E29F444DF6E7D98E22CF221DD56AC15AD05AE1A8BDBED2538584120504FA70
37087D58FB437511941A60BE8FB0DEDFE51A5E3F0052F1C3AAD344AFBC3A8C7C
AA165FEAA2FFE54C4A92B4A4738B76296CC067E5261029572A4D3557645CC78E
7EA509E90881ABC92EA5C3916417D5DE2F4EDDDD42A23F394C9A0A1566C4CF7C
07DA50B79E2598FB386D624A706DF08A238FE1B135580B25A2DA868C5E65B09C
19ED51B6980> |
3 <001C60D8A8C9B888C146> |
1094 <001C60D8A8C9B7A9C0DCBC55040B7DAAB1983AE5640AEE11F35A9B46EB
8A4CB86AD8231591D1038782458A6BFE6AA89CDE082BF7B054AF45AF23084DCB
28E7094B5595E7A70B94C507B68E5DCBFF9FE921E281366E7305A660444152F8
494C3A5BB5E51CA3CE56A2804F1653A4F418C6A3551223A77408D75E328EA338
3651D6279B5B978A52E3F497D8218E3D552D4640A114B1C0EB542122B030568C
49624A2ABCC2F20D3BFDBC32F2E4F1CDCBA6E44CD67482A62C9FC7161058AFC7
CF71A3E9300EED462C95BD288548D25D3E3EE74538568DC19C0ED1C37455C230
BD08AA41729AEFD5A2F0F922EE64CD4B99770A435EE8C926AFE5CD43BDEC8905
4578E69CCDB4B2BAD02FF7572683A923E339D98BE3F6F04B2B4B98EB628F3692
AFA690C21422CADC7E64487DEE0BAE52444AFC81E0BD9DDCD2DCCAEE8F0C1A32
2D5FA7B87B930BBC408820686319CDC81938D3E19952853946E39D593B07C4E0
9CE7179B5C413CE6B936> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /HJCBAA+Calibri-Identity-H /Identity-H 0 [/HJCBAA+Calibri] ct_ComposeFont pop end end
%ADOEndSubsetFont
/OPDWNB+Calibri /HJCBAA+Calibri-Identity-H findfont ct_VMDictPut
OPDWNB+Calibri [9.96 0 0 -9.96 0 0 ]msf
245.967 227.879 mo
(\002O\000\003\004F\000\003)
[6.59949 2.40033 4.92026 0 ]xsh
grestore
gsave
214.167 232.2 mo
298.647 232.2 li
298.647 218.28 li
214.167 218.28 li
214.167 232.2 li
clp
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
262.167 227.879 mo
(1)sh
grestore
gsave
214.167 232.2 mo
298.647 232.2 li
298.647 218.28 li
214.167 218.28 li
214.167 232.2 li
clp
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
267.207 227.879 mo
(%)sh
grestore
gsave
214.167 232.2 mo
298.647 232.2 li
298.647 218.28 li
214.167 218.28 li
214.167 232.2 li
clp
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
274.407 227.879 mo
( )sh
grestore
gsave
18.3267 284.52 mo
127.047 284.52 li
127.047 270.601 li
18.3267 270.601 li
18.3267 284.52 li
clp
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
34.5267 280.08 mo
(Four bands)
[4.55968 5.27972 5.27875 3.47902 2.28082 5.27873 4.79976 5.27875 5.27875 0 ]xsh
grestore
gsave
18.3267 284.52 mo
127.047 284.52 li
127.047 270.601 li
18.3267 270.601 li
18.3267 284.52 li
clp
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
79.8867 280.08 mo
( )sh
grestore
gsave
18.3267 284.52 mo
127.047 284.52 li
127.047 270.601 li
18.3267 270.601 li
18.3267 284.52 li
clp
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
82.1667 280.08 mo
(\(2 digits\))
[2.99989 5.03979 2.28082 5.27972 2.27989 4.68114 2.27988 3.36057 3.83965 0 ]xsh
grestore
gsave
18.3267 284.52 mo
127.047 284.52 li
127.047 270.601 li
18.3267 270.601 li
18.3267 284.52 li
clp
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
117.207 280.08 mo
(:)sh
grestore
gsave
18.3267 284.52 mo
127.047 284.52 li
127.047 270.601 li
18.3267 270.601 li
18.3267 284.52 li
clp
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
119.967 280.08 mo
( )sh
grestore
gsave
213.927 284.64 mo
304.887 284.64 li
304.887 270.72 li
213.927 270.72 li
213.927 284.64 li
clp
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
221.127 280.32 mo
(=)sh
grestore
gsave
213.927 284.64 mo
304.887 284.64 li
304.887 270.72 li
213.927 270.72 li
213.927 284.64 li
clp
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
226.047 280.32 mo
( )sh
grestore
gsave
213.927 284.64 mo
304.887 284.64 li
304.887 270.72 li
213.927 270.72 li
213.927 284.64 li
clp
%ADOBeginSubsetFont: HJCBAA+Calibri-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HJCBAA+Calibri 2 GetGlyphDirectory
1005 <001C60D8A8C9B7A0860A305D7D1540DECC7BE2F83965065BA1F58088FE
751F51768999AF3CB0CBD98712B4A20A30CFDD23F3D718AE6664545AA64C90E8
7A977C061638AE7B9844BD53D39E1CD919540EC0AFC0ADDD639213BAA3C2156E
CF4D5FEFDF4B77C92C9A62F21FEF596A47F254F30F662D97990A276CD1E50761
DD9D07D78B626617E74128BC5D647B42ED807FE6DD0588AD25D211834DAC9410
A0AEBD06E6565C1DCBD86013B11A7BE0A2010B12635869FAC3323D92D6BCCC10
D02550F431D6753E5E6C65DB63D883AF6BCE4C75C5A66BF9AE47A5570BA4B61C
5763C152A7FDEC11C0C748631E999D604A7F2938BB57220CBE02AE758E601833
1661C475AA9DED7C59> |
1004 <001C60D8A8C9B7A0860A0ABA2698AC8E090156BBF2C9C30ADDAE7DCB3D
97848CC5D38A5C6D85B8937F2533AAB8D6BFA0DD62B7BCE11E4F148006AA53F1
6B7661785227AEDEF098A1104625EF68DF52BAE87BC71C0E793E6FAD1A965E4D
38BA9CF4CEDAADD0504EE4CE20EF80FE3B0F494717869AEF9FD48C1A316DF08A
DA9E5D4CE0C25CB68B43C1EB2B9FE55F89B0B22C758BDED5FDD580CE702C559F
6E1F276FBE929DD9A2C3557CE4E2CABBF3EDF814307556BE2579995A57ECC922
B3376DB39CC4DC2518F12025BDC7A3EE507BE357864FDBF8F62FBD571913B865
713255C738D4AEB39D8820C2AC5F5D7DF55CB64B7CD192349742D481F16CF800
95A893636D91177B06233710432F07D42A84BDDC> |
!
end
end end
%ADOEndSubsetFont
OPDWNB+Calibri [9.96 0 0 -9.96 0 0 ]msf
228.327 280.32 mo
(\003\355\003\354\003\354\003\354\000\003\002O\000\003\004F)
[5.03973 5.03973 5.0397 5.03973 2.28088 6.60342 2.40033 0 ]xsh
grestore
gsave
213.927 284.64 mo
304.887 284.64 li
304.887 270.72 li
213.927 270.72 li
213.927 284.64 li
clp
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
264.687 280.32 mo
( )sh
grestore
gsave
213.927 284.64 mo
304.887 284.64 li
304.887 270.72 li
213.927 270.72 li
213.927 284.64 li
clp
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
266.967 280.32 mo
(5% )
[5.03979 7.08151 0 ]xsh
grestore
gsave
213.927 284.64 mo
304.887 284.64 li
304.887 270.72 li
213.927 270.72 li
213.927 284.64 li
clp
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
281.487 280.32 mo
( )sh
grestore
127.627 216.232 mo
127.627 213.01 130.239 210.397 133.462 210.397 cv
143.392 210.397 li
146.615 210.397 149.227 213.01 149.227 216.232 cv
149.227 233.363 li
149.227 236.585 146.615 239.197 143.392 239.197 cv
133.462 239.197 li
130.239 239.197 127.627 236.585 127.627 233.363 cv
127.627 216.232 li
.898 .714 .443 rgb
ef
191.827 216.852 mo
191.827 213.287 194.717 210.397 198.282 210.397 cv
206.972 210.397 li
210.537 210.397 213.427 213.287 213.427 216.852 cv
213.427 232.742 li
213.427 236.307 210.537 239.197 206.972 239.197 cv
198.282 239.197 li
194.717 239.197 191.827 236.307 191.827 232.742 cv
191.827 216.852 li
ef
144.427 212.198 mo
196.772 212.198 li
196.772 237.398 li
144.427 237.398 li
144.427 212.198 li
ef
134.77 210.398 mo
141.97 210.398 li
141.97 239.198 li
134.77 239.198 li
134.77 210.398 li
1 0 0 rgb
ef
176.77 212.158 mo
183.97 212.158 li
183.97 237.358 li
176.77 237.358 li
176.77 212.158 li
.137422 .122799 .126081 rgb
ef
148.77 212.158 mo
155.97 212.158 li
155.97 237.358 li
148.77 237.358 li
148.77 212.158 li
.439 .188 .627 rgb
ef
162.77 212.158 mo
169.97 212.158 li
169.97 237.358 li
162.77 237.358 li
162.77 212.158 li
0 .69 .314 rgb
ef
197.913 210.398 mo
205.113 210.398 li
205.113 239.198 li
197.913 239.198 li
197.913 210.398 li
.596 .282 .024 rgb
ef
142.407 234.36 mo
141.97 234.36 li
141.97 227.64 li
142.407 227.64 li
142.407 234.36 li
142.407 221.255 mo
141.97 221.255 li
141.97 218.04 li
144.427 218.04 li
142.407 218.04 li
142.407 221.255 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 132.873 294.547 ]ct
[2.76 0 0 16.56 8.93335 60.0672 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 23 
/H 138 
/M[23 0 0 -138 0 138 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
lK.<>l>c+NlF-A*p2TBZlF,ttlK.<>!-.=ElK.<>l>c+NoX=M&l>c+NlF,ttlK/&Sm'c2!lK.<>l>cFW
puUeLl>c+NlF,ttroNP/lF,ttlK.<>no=JFlK.<>l>c+NlF-Y2mW%ORlF,ttlK.QEqR5[/lK.<>l>c+N
r3l(&l>c+NlF,ttnE'Q/lF,ttlK.<>l>c^_nE&rDl>c+NlF-/$r,M#`lF,ttlK.<>qJl%FlK.<>l>c+N
m^E)&l>c+NlF,ttlK.iMo![h'lK.<>l>c4QroNFRl>c+NlF,ttpuV,/lF,ttlK.<>luE&FlK.<>l>c+N
lF-G,oPs0XlF,ttlK.??!4M04lK.<>l>c+Np9sY&l>c+NlF,ttlK.<>l>c+NlF,ttp#Yo/lF,ttlK.<>
l>ZgclfIE?l>c+NlF->)pMoK[lF,ttlK.<>s)ICFlK.<>l>c+No="G&l>c+NlF,ttlK/#RmC);"lK.<>
l>cCVq;pnMl>c+NlF,ttrT3J/lF,ttlK.<>nT"DFlK.<>l>c+NlF,ttp#Yo/lF,ttlK.<>l>ZgclfIE?
l>c+NlF->)pMoK[lF,ttlK.<>s)ICFlK.<>l>c+No="G&l>c+NlF,ttlK/#RmC);"lK.<>l>cCVq;pnM
l>c+NlF,ttrT3J/lF,ttlK.<>nT"DFlK.<>l>c+NlF-V1mr@XSlF,ttlK.NDqmPd0lK.<>l>c+NqmQ"&
l>c+NlF,ttn)aK/lF,ttlK.<>l>c[^n`B&El>c+NlF-,#rGh,alF,ttlK.<>q/PtFlK.<>l>c+NmC*#&
l>c+NlF,ttlK.fLo=!q(lK.<>l>c1Ps5iOSl>c+NlF,ttpZ;&/lF,ttlK.<>lYuoElK.<>l>c+NlF-D+
ol99YlF,ttlK.<>l>c+NlF,ttlK.]Ip9s7+lK.<>l>c+N!4M4%l>c+NlF,tto]>i/lF,ttlK.<>l>cjc
m,dN@l>c+NlF-;(pi5T\lF,ttlK.<>rc.=FlK.<>l>c+No!\A&l>c+NlF,ttlK.uQm^DD#lK.<>l>c@U
qW7"Nl>c+NlF,ttlK.]Ip9s7+lK.<>l>c+N!4M4%l>c+NlF,tto]>i/lF,ttlK.<>l>cjcm,dN@l>c+N
lF-;(pi5T\lF,ttlK.<>rc.=FlK.<>l>c+No!\A&l>c+NlF,ttlK.uQm^DD#lK.<>l>c@UqW7"Nl>c+N
lF,ttr8mD/lF,ttJ,~>

%%EndBinary
grestore
np
134.77 234.36 mo
128.367 234.36 li
128.367 218.04 li
134.77 218.04 li
134.77 234.36 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 132.873 294.547 ]ct
[6.6 0 0 16.56 -4.62665 60.0672 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 55 
/H 138 
/M[55 0 0 -138 0 138 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 55 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 55 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 55 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
b2pdSn8[3&b2qNhm'b&VcK5#db-oH4o]=]db-p>Mk]+c,d^Jt[b&PScppSY[b&QV+jQ4OmeoCA&b2pdS
r,L&&b2qrti3pdJg?%kdb-oH4!9MDcb-pbYgi:KuhR;g[b&P\froM;2b&R%7f]C8aic44&b2q$ZqR4Od
b2rB+e@*M>k2k^db-oi?p2S7:b-q1ecuI4ilF,Z[b&Q+ro&\$&b&RICbiR!UmW%'&b2qHfm^C8XbiSld
b-oH4o&\Qdb-p8Kl>au.d'ih[b&PScn@%)[b&Q>#m,cBuc>if&b2pdSoPrK&b2qZlkdJWRdcL;db-oH4
puTudb-pJQjDi?(f!b7[b&PScr3jq[b&Qb/i8r+ig2ZY&b2pdS!--2%b2r*#gpY@FhW=.db-oQ7rc-*B
b-pn]fQ#'qijS*[b&PhjqW5l.b&R1;eE+i]k&KL&b2q0^p9r+`b2rN/d'h):lK.!db-ouCno;h6b-q=i
b]1eem^Cr[b&Q8!mcDU"b]3Z&b2pdSno<?&b2qTjlF+iTd,k/db-oH4nE&Edb-p2IluC20cF3\[b&PSc
oX<A[b&QJ'kiKsqdW,)&b2pdSpi4c&b2qfpjL33Nf&cSdb-oH4r8l8db-pVUi,Qp$g:$O[b&PSc!4L(Z
b&Qn3guZ\ehJqq&b2pmVrjKshb2r6'fXAqBioTFdb-o];qJj[>b-q%ae8`Xmk-jB[b&Ptnp>sH*b&R=?
d,iEYl>bd&b2q<bo!Z\\b2rZ3bdPZ6mcE9db-p,GmW$D2bdRP[b&PSco![5[b&QD%lK-0scuJr&b2pdS
n8[3&b2qNhm'b&VcK5#db-oH4o]=]db-p>Mk]+c,d^Jt[b&PScppSY[b&QV+jQ4OmeoCA&b2pdSr,L&&
b2qrti3pdJg?%kdb-oH4!9MDcb-pbYgi:KuhR;g[b&P\froM;2b&R%7f]C8aic44&b2q$ZqR4Odb2rB+
e@*M>k2k^db-oi?p2S7:b-q1ecuI4ilF,Z[b&Q+ro&\$&b&RICbiR!UmW%'&b2qHfm^C8XbiSldb-oH4
o&\Qdb-p8Kl>au.d'ih[b&PScn@%)[b&Q>#m,cBuc>if&b2pdSoPrK&b2qZlkdJWRdcL;db-oH4puTud
b-pJQjDi?(f!b7[b&PScr3jq[b&Qb/i8r+ig2ZY&b2pdS!--2%b2r*#gpY@FhW=.db-oQ7rc-*Bb-pn]
fQ#'qijS*[b&PhjqW5l.b&R1;eE+i]k&KL&b2q0^p9r+`b2rN/d'h):lK.!db-ouCno;h6b-q=ib]1ee
m^Cr[b&Q8!mcDU"b]3Z&b2pdSno<?&b2qTjlF+iTd,k/db-oH4nE&Edb-p2IluC20cF3\[b&PScoX<A[
b&QJ'kiKsqdW,)&b2pdSpi4c&b2qfpjL33Nf&cSdb-oH4r8l8db-pVUi,Qp$g:$O[b&PSc!4L(Zb&Qn3
guZ\ehJqq&b2pmVrjKshb2r6'fXAqBioTFdb-o];qJh#~>

%%EndBinary
grestore
np
141.97 234.36 mo
134.77 234.36 li
134.77 218.04 li
141.97 218.04 li
141.97 221.255 li
136.124 221.255 li
136.124 227.64 li
141.97 227.64 li
141.97 234.36 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 132.873 294.547 ]ct
[7.44 0 0 16.56 1.73335 60.0672 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 62 
/H 138 
/M[62 0 0 -138 0 138 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 62 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 62 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 62 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
_uILP`W3pVqZ)NSq#AS<[fF_S_uK9-PQ:1Pec2cPfDrhhkl@7Sk5X<<V#]HS_uJWpV?#HPkPq%Pl2\a%
f)VuSeGo%<P5t1S_uJ!^\,a_Pq>Z<PquFY7`;m^S_uB]:L&h2Pa8`dPaoK?ZpAg6So`*;<ZN/GS_uK-)
QiQIPg&J&Pg]57ljT(tSirA$<T`F0S_uILP`W3pVqZ)NSq#AS<[fF_S_uK9-PQ:1Pec2cPfDrhhkl@7S
k5X<<V#]HS_uJWpV?#HPkPq%Pl2\a%f)VuSeGo%<P5t1S_uJ!^\,a_Pq>Z<PquFY7`;m^S_uB]:L&h2P
a8`dPaoK?ZpAg6So`*;<ZN/GS_uK-)QiQIPg&J&Pg]57ljT(tSirA$<T`F0S_uILP`W3pVqZ)NSq#AS<
[fF_S_uK9-PQ:1Pec2cPfDrhhkl@7Sk5X<<V#]HS_uJWpV?#HPkPq%Pl2\a%f)VuSeGo%<P5t1S_uJ!^
\,a_Pq>Z<PquFY7`;m^S_uB]:L&h2Pa8`dPaoK?ZpAg6So`*;<ZN/GS_uK-)QiQIPg&J&Pg]57ljT(tS
irA$<T`F0S_uILP`W3pVqZ)NSq#AS<[fF_S_uK9-PQ:1Pec2cPfDrhhkl@7Sk5X<<V#]HS_uJWpV?#HP
kPq%Pl2\a%f)VuSeGo%<P5t1S_uJ!^\,a_Pq>Z<PquFY7`;m^S_uB]:L&h2Pa8`dPaoK?ZpAg6So`*;<
ZN/GS_uK-)QiQIPg&J&Pg]57ljT(tSirA$<T`F0S_uILP`W3pVqZ)NSq#AS<[fF_S_uK9-PQ:1Pec2cP
fDrhhkl@7Sk5X<<V#]HS_uJWpV?#HPkPq%Pl2\a%f)VuSeGo%<P5t1S_uJ!^\,a_Pq>Z<PquFY7`;m^S
_uB]:L&h2Pa8`dPaoK?ZpAg6So`*;<ZN/GS_uK-)QiQIPg&J&Pg]57ljT(tSirA$<T`F0S_uILP`W3pV
qZ)NSq#AS<[fF_S_uK9-PQ:1Pec2cPfDrhhkl@7Sk5X<<V#]HS_uJWpV?#HPkPq%Pl2\a%f)VuSeGo%<
P5t1S_uJ!^\,a_Pq>Z<PquFY7`;m^S_uB]:L&h2Pa8`dPaoK?ZpAg6So`*;<ZN/GS_uK-)QiQIPg&J&P
g]57ljT(tSirA$<T`F0S_uILP`W3pVqZ)NSq#AS<[fF_S_uK9-PQ:1Pec2cPfDrhhkl@7SJ,~>

%%EndBinary
grestore
np
142.407 227.64 mo
141.97 227.64 li
141.97 221.255 li
142.407 221.255 li
142.407 227.64 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 132.873 294.547 ]ct
[.72 0 0 6.6 8.93335 66.7872 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 55 
/M[6 0 0 -55 0 55 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~jlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUc
jlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUc
jlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUc
jlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUc
jlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUc
jlPUcjlPUcjlH~>
<~[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ
[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ
[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ
[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ
[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ
[^NWQ[^NWQ[^H~>
<~EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<
EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<
EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<
EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<
EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<
EH,u<EH,u<EH(~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
141.97 227.64 mo
136.124 227.64 li
136.124 221.255 li
141.97 221.255 li
141.97 227.64 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 132.873 294.547 ]ct
[6 0 0 6.6 3.17335 66.7872 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 50 
/H 55 
/M[50 0 0 -55 0 55 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 50 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 50 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 50 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
ci:?Pl2]01b5fukci;u)]E$:Xq#I5khZ*0HSH/?_g]+2Pp&NG=^B!-kci;Pra8jQdm/XBkdf9=HSH.pS
kPq(Q!<:FGZN0:kci;,fe,[hpi;gOkci<b?V?#HPoDb?]o`*_HVZ?Gkci:]ZhuM+'eH!\kci<>3Z2i;P
s8SVikl9lHSH/]idJpKPli>B3aT0ikci;o'^&ZLZpAh)kh#I$HSH."9ZiK@kci;/gdf@_oiW-Ukci<e@
V#]BPo)G6\p&EeHVuZMkci:`[hZ2"&ec<bkci<A4YlN5Prr8Mhl2TrHSH&Zid/UEPlN#92aoKokci;r(
]`?CYp]./kh>d*HSH/<^h#F8PpAiP>^&['kci;MqaT0Zeli=<kdJs7HSH.mRkl71Rs8ULHZ2j4kci;)e
eH!qqhuLIkci<_>VZ>NPo`(H^ci:?Pl2Z>~>

%%EndBinary
grestore
np
gsave
128.367 234.36 mo
146.727 234.36 li
146.727 218.04 li
128.367 218.04 li
128.367 234.36 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
135.567 227.64 mo
(2   )
[5.03979 2.28082 2.28082 0 ]xsh
grestore
gsave
128.367 234.36 mo
146.727 234.36 li
146.727 218.04 li
128.367 218.04 li
128.367 234.36 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
147.447 227.64 mo
( )sh
grestore
156.687 234.36 mo
155.97 234.36 li
155.97 218.04 li
162.327 218.04 li
156.687 218.04 li
156.687 234.36 li
148.77 234.36 mo
144.427 234.36 li
146.607 234.36 li
146.607 218.04 li
148.77 218.04 li
148.77 234.36 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 132.873 294.547 ]ct
[18.12 0 0 16.56 11.4534 60.0672 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 151 
/H 138 
/M[151 0 0 -138 0 138 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 151 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 151 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 151 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
K&u7YR^UVPZ>mEpb2o>YijO]PqJh+,n8XZRf]B0B^p_.#W,^SROQH)BK!tE^N,d`pUufYY]XG#Pe8^gp
m,`i\roJjBk-gh#c>g8R[cPcBT!ma#L2m1RK&uC]QF>>PY&V-p`oX&YhR8EPp2P\(oPoKEl/eABdC-?#
\T,dRU#k:BM738#JoU:"PNCHYX1#gP_f;VpgZ=OYo<s7ZpU6$#hf5IRa5stBYI;r#QZ;BRK'!!nKsp-P
ST2qp[H4jYc*j4Pj`-#prT/XmmH'YBe[DW#]lD'RV<-RBNOJP#JoUF&K&u7YR^UVPZ>mEpb2o>YijO]P
qJh+,n8XZRf]B0B^p_.#W,^SROQH)BK!tE^N,d`pUufYY]XG#Pe8^gpm,`i\roJjBk-gh#c>g8R[cPcB
T!ma#L2m1RK&uC]QF>>PY&V-p`oX&YhR8EPp2P\(oPoKEl/eABdC-?#\T,dRU#k:BM738#JoU:"PNCHY
X1#gP_f;VpgZ=OYo<s7ZpU6$#hf5IRa5stBYI;r#QZ;BRK'!!nKsp-PST2qp[H4jYc*j4Pj`-#prT/Xm
mH'YBe[DW#]lD'RV<-RBNOJP#JoUF&K&u7YR^UVPZ>mEpb2o>YijO]PqJh+,n8XZRf]B0B^p_.#W,^SR
OQH)BK!tE^N,d`pUufYY]XG#Pe8^gpm,`i\roJjBk-gh#c>g8R[cPcBT!ma#L2m1RK&uC]QF>>PY&V-p
`oX&YhR8EPp2P\(oPoKEl/eABdC-?#\T,dRU#k:BM738#JoU:"PNCHYX1#gP_f;VpgZ=OYo<s7ZpU6$#
hf5IRa5stBYI;r#QZ;BRK'!!nKsp-PST2qp[H4jYc*j4Pj`-#prT/XmmH'YBe[DW#]lD'RV<-RBNOJP#
JoUF&K&u7YR^UVPZ>mEpb2o>YijO]PqJh+,n8XZRf]B0B^p_.#W,^SROQH)BK!tE^N,d`pUufYY]XG#P
e8^gpm,`i\roJjBk-gh#c>g8R[cPcBT!ma#L2m1RK&uC]QF>>PY&V-p`oX&YhR8EPp2P\(oPoKEl/eAB
dC-?#\T,dRU#k:BM738#JoU:"PNCHYX1#gP_f;VpgZ=OYo<s7ZpU6$#hf5IRa5stBYI;r#QZ;BRK'!!n
Ksp-PST2qp[H4jYc*j4Pj`-#prT/XmmH'YBe[DW#]lD'RV<-RBNOJP#JoUF&K&u7YR^UVPZ>mEpb2o>Y
ijO]PqJh+,n8XZRf]B0B^p_.#W,^SROQH)BK!tE^N,d`pUufYY]XG#Pe8^gpm,`i\roJjBk-gh#c>g8R
[cPcBT!ma#L2m1RK&uC]QF>>PY&V-p`oX&YhR8EPp2P\(oPoKEl/eABdC-?#\T,dRU#k:BM738#JoU:"
PNCHYX1#gP_f;VpgZ=OYo<s7ZpU6$#hf5IRa5stBYI;r#QZ;BRK'!!nKsp-PST2qp[H4jYc*j4Pj`-#p
rT/XmmH'YBe[DW#]lD'RV<-RBNOJP#JoUF&K&u7YR^UVPZ>mEpb2o>YijO]PqJh+,n8XZRf]B0B^p_.#
W,^SROQH)BK!tE^N,d`pUufYY]XG#Pe8^gpm,`i\roJjBk-gh#c>g8R[cPcBT!ma#L2m1RK&uC]QF>>P
Y&V-p`oX&YhR8EPp2P\(oPoKEl/eABdC-?#\T,dRU#k:BM738#JoU:"PNCHYX1#gP_f;VpgZ=OYo<s7Z
pU6$#hf5IRa5stBYI;r#QZ;BRK'!!nKsp-PST2qp[H4jYc*j4Pj`-#prT/XmmH'YBe[DW#]lD'RV<-RB
NOJP#JoUF&K&u7YR^UVPZ>mEpb2o>YijO]PqJh+,n8XZRf]B0B^p_.#W,^SROQH)BK!tE^N,d`pUufYY
]XG#Pe8^gpm,`i\roJjBk-gh#c>g8R[cPcBT!ma#L2m1RK&uC]QF>>PY&V-p`oX&YhR8EPp2P\(oPoKE
l/eABdC-?#\T,dRU#k:BM738#JoU:"PNCHYX1#gP_f;VpgZ=OYo<s7ZpU6$#hf5IRa5stBYI;r#QZ;BR
K'!!nKsp-PST2qp[H4jYc*j4Pj`-#prT/XmmH'YBe[DW#]lD'RV<-RBNOJP#JoUF&K&u7YR^UVPZ>mEp
b2o>YijO]PqJh+,n8XZRf]B0B^p_.#W,^SROQH)BK!tE^N,d`pUufYY]XG#Pe8^gpm,`i\roJjBk-gh#
c>g8R[cPcBT!ma#L2m1RK&uC]QF>>PY&V-p`oX&YhR8EPp2P\(oPoKEl/eABdC-?#\T,dRU#k:BM738#
JoU:"PNCHYX1#gP_f;VpJ,~>

%%EndBinary
grestore
np
155.97 234.36 mo
148.77 234.36 li
148.77 218.04 li
155.97 218.04 li
155.97 234.36 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 132.873 294.547 ]ct
[7.44 0 0 16.56 15.7734 60.0672 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 62 
/H 138 
/M[62 0 0 -138 0 138 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 62 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 62 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 62 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
_f3LIrh.9(_f5K,aY:W*pi+Gr__CbVc_/0pnhAKG_k?I;eSrD[m%E"(_f4iogG$O<k&B0r__C,DiLn)-
i%X4G_k>h)kA\<mg7[`(_f43]m4cGNe8Xnr__BK2o:X!?c7nrG_k>1lq/F5*aIrI(_f3RKs"M?`_f,T0
`%]*%rG]er__Cq[b+QXkpFsiG_k?X@cu?lVnY"@(_f5#tehG"7lYtNr__C;Ign;Q(jY5RG_k?".ic)dh
hk9)(_f3LIrh.9(_f5K,aY:W*pi+Gr__CbVc_/0pnhAKG_k?I;eSrD[m%E"(_f4iogG$O<k&B0r__C,D
iLn)-i%X4G_k>h)kA\<mg7[`(_f43]m4cGNe8Xnr__BK2o:X!?c7nrG_k>1lq/F5*aIrI(_f3RKs"M?`
_f,T0`%]*%rG]er__Cq[b+QXkpFsiG_k?X@cu?lVnY"@(_f5#tehG"7lYtNr__C;Ign;Q(jY5RG_k?".
ic)dhhk9)(_f3LIrh.9(_f5K,aY:W*pi+Gr__CbVc_/0pnhAKG_k?I;eSrD[m%E"(_f4iogG$O<k&B0r
__C,DiLn)-i%X4G_k>h)kA\<mg7[`(_f43]m4cGNe8Xnr__BK2o:X!?c7nrG_k>1lq/F5*aIrI(_f3RK
s"M?`_f,T0`%]*%rG]er__Cq[b+QXkpFsiG_k?X@cu?lVnY"@(_f5#tehG"7lYtNr__C;Ign;Q(jY5RG
_k?".ic)dhhk9)(_f3LIrh.9(_f5K,aY:W*pi+Gr__CbVc_/0pnhAKG_k?I;eSrD[m%E"(_f4iogG$O<
k&B0r__C,DiLn)-i%X4G_k>h)kA\<mg7[`(_f43]m4cGNe8Xnr__BK2o:X!?c7nrG_k>1lq/F5*aIrI(
_f3RKs"M?`_f,T0`%]*%rG]er__Cq[b+QXkpFsiG_k?X@cu?lVnY"@(_f5#tehG"7lYtNr__C;Ign;Q(
jY5RG_k?".ic)dhhk9)(_f3LIrh.9(_f5K,aY:W*pi+Gr__CbVc_/0pnhAKG_k?I;eSrD[m%E"(_f4io
gG$O<k&B0r__C,DiLn)-i%X4G_k>h)kA\<mg7[`(_f43]m4cGNe8Xnr__BK2o:X!?c7nrG_k>1lq/F5*
aIrI(_f3RKs"M?`_f,T0`%]*%rG]er__Cq[b+QXkpFsiG_k?X@cu?lVnY"@(_f5#tehG"7lYtNr__C;I
gn;Q(jY5RG_k?".ic)dhhk9)(_f3LIrh.9(_f5K,aY:W*pi+Gr__CbVc_/0pnhAKG_k?I;eSrD[m%E"(
_f4iogG$O<k&B0r__C,DiLn)-i%X4G_k>h)kA\<mg7[`(_f43]m4cGNe8Xnr__BK2o:X!?c7nrG_k>1l
q/F5*aIrI(_f3RKs"M?`_f,T0`%]*%rG]er__Cq[b+QXkpFsiG_k?X@cu?lVnY"@(_f5#tehG"7lYtNr
__C;Ign;Q(jY5RG_k?".ic)dhhk9)(_f3LIrh.9(_f5K,aY:W*pi+Gr__CbVc_/0pnhAKG_k?I;eSrD[
m%E"(_f4iogG$O<J,~>

%%EndBinary
grestore
np
144.427 234.36 mo
142.407 234.36 li
142.407 227.64 li
144.427 227.64 li
144.427 234.36 li
144.427 221.255 mo
142.407 221.255 li
142.407 218.04 li
144.427 218.04 li
144.427 221.255 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 132.873 294.547 ]ct
[2.28 0 0 16.56 9.41335 60.0672 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 19 
/H 138 
/M[19 0 0 -138 0 138 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
mcElFmW%[Vm^DP'o]>u3m^DP'mcElFmW%[VqR6(*mW%[Vm^DP'mcElF!-.IImcElFmW%[Vm^D_,r,M/d
m^DP'mcElFmW&'ap>t_NmW%[Vm^DP'mcFJWn@%b)mcElFmW%[Vo!\M*mW%[Vm^DP'mcElFpi6%JmcElF
mW%[Vm^DP'roN\3m^DP'mcElFmW%dYroNRVmW%[Vm^DP'mcF2OppTU1mcElFmW%[Vm^E(6no=*Zm^DP'
mcElFn8\JJmcElFmW%[Vm^DP'p>u,3m^DP'mcElFmW%[Vr3l4*mW%[Vm^DP'mcEoG!4M<8mcElFmW%[V
m^De.qJkrbm^DP'mcElFmW&-co]>MLmW%[Vm^DP'mcElFmW%[Vm^DP'mcF)LqmPp4mcElFmW%[Vm^Dt3
ol9E]m^DP'mcElFmVr6gn)`uGmW%[Vm^DP'oB#o3m^DP'mcElFmW%[Vq6p"*mW%[Vm^DP'mcElFs)IOJ
mcElFmW%[Vm^D\+rGh8em^DP'mcElFmW&$`pZ:hOmW%[Vm^DP'mcFGVn[@k*mcElFmW%[Vn[AG*mW%[V
m^DP'mcElFpMotJmcElFmW%[Vm^DP'rT3V3m^DP'mcElFmW%aXs5i[WmW%[Vm^DP'mcElFoPsbJmcElF
mW%[Vm^DP'qW7D3m^DP'mcElFmW%[V!4M@)mW%[Vm^DP'mcF&Kr3l$5mcElFmW%[Vm^Dq2p2TN^m^DP'
mcElFmW&9gnE')HmW%[Vm^DP'o&]i3m^DP'mcElFmW%[VppTq*mW%[Vm^DP'mcElFrc.IJmcElFmW%[V
m^DY*rc.Afm^DP'mcElFmW&!_puUqPmW%[Vm^DP'mcFDUo![t+mcElFmW%[Vn@&A*mW%[Vm^DP'mcElF
p2TnJmcElFmW%[Vm^DP'r8mP3m^DP'mcElFmW%^W!9NXWmW%[Vm^DP'mcF,MqR5g3mcElFmW%[Vm^E"4
oPs<\m^DP'mcElFmW%[Vm^DP'mcElFmW%m\qrR7SmW%[Vm^DP'mcF;RosX:.mcElFmW%[Vm^<+8mr@dW
m^DP'mcElFo5X\JmcElFmW%[Vm^DP'q;q>3m^DP'mcElFmW%[Vs0hF*mW%[Vm^DP'mcF#JrO2-6mcElF
mW%[Vm^Dn1pMoW_m^DP'mcElFmW&6fn`B2ImW%[Vm^DP'n`Bc3m^DP'mcElFmW!a~>

%%EndBinary
grestore
np
146.607 234.36 mo
144.427 234.36 li
144.427 227.64 li
145.168 227.64 li
145.168 221.255 li
144.427 221.255 li
144.427 218.04 li
146.607 218.04 li
146.607 234.36 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 132.873 294.547 ]ct
[2.4 0 0 16.56 11.4534 60.0672 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 20 
/H 138 
/M[20 0 0 -138 0 138 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 20 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
mH*`Dm;_OTmC)D%qW7A2mC)D%mH*`Dm;_aZqrR4Rm;_OTmC)D%mH">Vm^DM&mH*`Dm;_OTq6ot)m;_OT
mC)D%mH*oIr3l!4mH*`Dm;_OTmC*%7mr@aVmC)D%mH*`Dpi6"ImH*`Dm;_OTmC)P)rGh5dmC)D%mH*`D
m;`-enE'&Gm;_OTmC)D%pZ;/2mC)D%mH*`Dm;_XWroNOUm;_OTmC)D%mH+;Tn[@h)mH*`Dm;_OTp9sb)
m;_OTmC)D%mH*fFs0h<7mH*`Dm;_OTmC)q4no='YmC)D%mH*`Dol9eImH*`Dm;_OTmC)G&!-.DfmC)D%
mH*`Dm;`$boB#AJm;_OTmC)D%o]>r2mC)D%mH*`Dm;_OTmC)D%mH*`Dm;_OTqR6%)m;_OTmC)D%mH*rJ
qmPm3mH*`Dm;_OTmC!"7mW%XUmC)D%mH*`Dq/Q(ImH*`Dm;_OTmC)S*r,M,cmC)D%mH*`Dm;`0fn)`rF
m;_OTmC)D%puV52mC)D%mH*`Dm;_[XrT3FTm;_OTmC)D%mH+>Un@%_(mH*`Dm;_OTpU9h)m;_OTmC)D%
mH*iGrjM36mH*`Dm;_OTmC)t5nT!sXmC)D%mH*`Dm;`!ao]>JKm;_OTmC)D%oB#l2mC)D%mH*`Dm;_OT
!4M=(m;_OTmC)D%mH+/PosX7-mH*`Dm;_OTo!\J)m;_OTmC)D%mH*`Ds)ILImH*`Dm;_OTmC)e0p2TK]
mC)D%mH*`DnT"MImH*`Dm;_OTmC)D%roNY2mC)D%mH*`Dm;_m^pZ:eNm;_OTmC)D%nE'Z2mC)D%mH*`D
m;_OTrO27)m;_OTmC)D%mH+&MppTR0mH*`Dm;_OTn$`8)m;_OTmC)D%mH*`Dr,M:ImH*`Dm;_OTmC)\-
q/Pf`mC)D%mH*`DmVr5HmH*`Dm;_OTmC)D%qrRG2mC)D%mH*`Dm;_d[qW7+Qm;_OTmC)D%mH*`Dm;_OT
mC)D%mH+2QoX=.,mH*`Dm;_OTo="P)m;_OTmC)D%mH*`D!-.FHmH*`Dm;_OTmC)h1ol9B\mC)D%mH*`D
no=SImH*`Dm;_OTmC)D%s5i_2mC)D%mH*`Dm;_p_p>t\Mm;_OTmC)D%n`B`2mC)D%mH*`Dm;_OTrjM=)
m;_OTmC)D%mH+)NpU9I/mH*`Dm;_OTn@&>)m;_OTmC)D%mH*`DrGh@ImH*`Dm;_OTmC)D%J,~>

%%EndBinary
grestore
np
gsave
144.427 227.64 mo
142.407 227.64 li
142.407 221.255 li
144.427 221.255 li
144.427 227.64 li
clp
142.407 221.255 mo
144.427 221.255 li
144.427 227.64 li
142.407 227.64 li
cp
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 132.873 294.547 ]ct
[2.28 0 0 6.6 9.41335 66.7872 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 19 
/H 55 
/M[19 0 0 -55 0 55 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 19 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
mcElFmW%[Vm^DP'o]>u3m^DP'mcElFmW%[VqR6(*mW%[Vm^DP'mcElF!-.IImcElFmW%[Vm^D_,r,M/d
m^DP'mcElFmW&'ap>t_NmW%[Vm^DP'mcFJWn@%b)mcElFmW%[Vo!\M*mW%[Vm^DP'mcElFpi6%JmcElF
mW%[Vm^DP'roN\3m^DP'mcElFmW%dYroNRVmW%[Vm^DP'mcF2OppTU1mcElFmW%[Vm^E(6no=*Zm^DP'
mcElFn8\JJmcElFmW%[Vm^DP'p>u,3m^DP'mcElFmW%[Vr3l4*mW%[Vm^DP'mcEoG!4M<8mcElFmW%[V
m^De.qJkrbm^DP'mcElFmW&-co]>MLmW%[Vm^DP'mcElFmW%[Vm^DP'mcF)LqmPp4mcElFmW%[Vm^Dt3
ol9E]m^DP'mcElFmVr6gn)`uGmW%[Vm^DP'oB#o3m^DP'mcElFmW%[Vq6p"*mW%[Vm^DP'J,~>

%%EndBinary
grestore
np
1 dict begin
/T1_Text{eclp rgb
OPDWMZ+Calibri*1 [9.96001 0 0 -9.96001 0 0 ]msf
142.887 227.64 mo
(  )
[2.28082 0 ]xsh
T1_grestore}def
T1_gsave
T1_path 142.287 227 .634567 .713348 -.634567 -.713348 ()
1 1 1 T1_Text
end
grestore
gsave
145.168 227.64 mo
144.427 227.64 li
144.427 221.255 li
145.168 221.255 li
145.168 227.64 li
clp
144.427 221.255 mo
145.168 221.255 li
145.168 227.64 li
144.427 227.64 li
cp
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 132.873 294.547 ]ct
[.96 0 0 6.6 11.4534 66.7872 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 55 
/M[8 0 0 -55 0 55 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~jlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUc
jlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUc
jlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUc
jlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUc
jlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUc
jlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUc
jlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUc~>
<~[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ
[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ
[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ
[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ
[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ
[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ
[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ~>
<~EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<
EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<
EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<
EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<
EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<
EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<
EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1 dict begin
end
grestore
gsave
142.287 234.36 mo
162.327 234.36 li
162.327 218.04 li
142.287 218.04 li
142.287 234.36 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
149.607 227.64 mo
(7)sh
grestore
gsave
142.287 234.36 mo
162.327 234.36 li
162.327 218.04 li
142.287 218.04 li
142.287 234.36 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
154.647 227.64 mo
( )sh
grestore
197.913 234.36 mo
196.772 234.36 li
196.772 218.04 li
197.913 218.04 li
197.913 234.36 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 132.873 294.547 ]ct
[1.44 0 0 16.56 63.7734 60.0672 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 12 
/H 138 
/M[12 0 0 -138 0 138 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 12 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 12 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 12 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
p#YkTol9ZdosXO5p#YkTol9ZdqR6=1ol9ZdosXO5p#YkTol9ZdosXO5s5j":osXO5p#YkTol9ZdosXO5
p#YtWrjMK>p#YkTol9ZdosXO5p#YkTol9rlq;q:Xol9ZdosXO5p#YkTol9Zdp9jt0ol9ZdosXO5p#YkT
ol9ZdosXO5qrR_:osXO5p#YkTol9ZdosXO5p#YkT!-.^Pp#YkTol9ZdosXO5p#YkTol9fhrT3^\ol9Zd
osXO5p#YkTol9ZdosXj>pi5ugosXO5p#YkTol9ZdosXO5pZ;G:osXO5p#YkTol9ZdosXO5p#YkTr,MRQ
p#YkTol9ZdosXO5p#YkTol9ZdosXO5p#YkTol9ZdosXO5p#YkTqJlFQp#YkTol9ZdosXO5p#YkTol9Zd
s0h[1ol9ZdosXO5p#YkTol9ZdosXX8rc.VmosXO5p#YkTol9ZdosXO5p#Z.\q6os9p#YkTol9ZdosXO5
p#YkTp2L(Pp#YkTol9ZdosXO5p#YkTol9ZdqmQC1ol9ZdosXO5p#YkTol9ZdosXO5!9Nq9osXO5p#YkT
ol9ZdosXO5p#Z"XrO2B=p#YkTol9ZdosXO5p#YkTol9umpuV1Wol9ZdosXO5p#YkTol9ZdpU:+1ol9Zd
osXO5p#YkTol9ZdosXO5r8me:osXO5p#YkTol9ZdosXO5p#YkTol9ZdosXO5p#YkTol9ZdosXO5qW7Y:
osXO5p#YkTol9ZdosXO5p#YkTs)IdQp#YkTol9ZdosXO5p#YkTol9cgroNg]ol9ZdosXO5p#YkTol9Zd
osXg=q/Q)hosXO5p#YkTol9ZdosXO5p>l;9osXO5p#YkTol9ZdosXO5p#YkTqf2LQp#YkTol9ZdosXO5
p#YkTol9Zd!4MU0ol9ZdosXO5p#YkTol9ZdosX[9rGhMlosXO5p#YkTol9ZdosXO5p#YkTol9iir8mU[
ol9ZdosXO5p#YkTol9ZdosXm?pMolfosXO5p#YkTol9ZdosXO5puVM:osXO5p#YkTol9ZdosXO5p#YkT
rGhXQp#YkTol9ZdosXO5p#YkTol9]e!9Nm^ol9ZdosXO5p#YkTol9ZdosXa;qf2;josXO5p#YkTol9Zd
osXO5J,~>

%%EndBinary
grestore
np
196.772 234.36 mo
183.97 234.36 li
183.97 218.04 li
196.772 218.04 li
196.772 234.36 li
176.77 234.36 mo
171.207 234.36 li
171.207 218.04 li
169.97 218.04 li
176.77 218.04 li
176.77 234.36 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 132.873 294.547 ]ct
[27 0 0 16.56 37.0134 60.0672 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 225 
/H 138 
/M[225 0 0 -138 0 138 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 225 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 225 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 225 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
K&rWdjL0ZK]XGk#JoTI`Wo\iop>q:BPd^%#JoS&8dcH)BcK2IBK!t!RQuRt&qW3=jVWHXBK!rS*^i=sG
i,PORK&usmL:3S[k])2o\8f^RK&tPEY-rqjo!X[#OE#m6TB5.BK!r>#a)Q]Nfl=%RK&u^fNOG([mr<r!
Z#S4RK&t;>[C1[qlaE1#M/iCRK&rlkh6qpD_m[@#JoT^gUZI*hrT/dBS$qO#JoS;?bN4?;e`EsBK!t6Y
O`?J&K&rWdjL0ZK]XGk#JoTI`Wo\iop>q:BPd^%#JoS&8dcH)BcK2IBK!t!RQuRt&qW3=jVWHXBK!rS*
^i=sGi,PORK&usmL:3S[k])2o\8f^RK&tPEY-rqjo!X[#OE#m6TB5.BK!r>#a)Q]Nfl=%RK&u^fNOG([
mr<r!Z#S4RK&t;>[C1[qlaE1#M/iCRK&rlkh6qpD_m[@#JoT^gUZI*hrT/dBS$qO#JoS;?bN4?;e`EsB
K!t6YO`?J&K&rWdjL0ZK]XGk#JoTI`Wo\iop>q:BPd^%#JoS&8dcH)BcK2IBK!t!RQuRt&qW3=jVWHXB
K!rS*^i=sGi,PORK&usmL:3S[k])2o\8f^RK&tPEY-rqjo!X[#OE#m6TB5.BK!r>#a)Q]Nfl=%RK&u^f
NOG([mr<r!Z#S4RK&t;>[C1[qlaE1#M/iCRK&rlkh6qpD_m[@#JoT^gUZI*hrT/dBS$qO#JoS;?bN4?;
e`EsBK!t6YO`?J&K&rWdjL0ZK]XGk#JoTI`Wo\iop>q:BPd^%#JoS&8dcH)BcK2IBK!t!RQuRt&qW3=j
VWHXBK!rS*^i=sGi,PORK&usmL:3S[k])2o\8f^RK&tPEY-rqjo!X[#OE#m6TB5.BK!r>#a)Q]Nfl=%R
K&u^fNOG([mr<r!Z#S4RK&t;>[C1[qlaE1#M/iCRK&rlkh6qpD_m[@#JoT^gUZI*hrT/dBS$qO#JoS;?
bN4?;e`EsBK!t6YO`?J&K&rWdjL0ZK]XGk#JoTI`Wo\iop>q:BPd^%#JoS&8dcH)BcK2IBK!t!RQuRt&
qW3=jVWHXBK!rS*^i=sGi,PORK&usmL:3S[k])2o\8f^RK&tPEY-rqjo!X[#OE#m6TB5.BK!r>#a)Q]N
fl=%RK&u^fNOG([mr<r!Z#S4RK&t;>[C1[qlaE1#M/iCRK&rlkh6qpD_m[@#JoT^gUZI*hrT/dBS$qO#
JoS;?bN4?;e`EsBK!t6YO`?J&K&rWdjL0ZK]XGk#JoTI`Wo\iop>q:BPd^%#JoS&8dcH)BcK2IBK!t!R
QuRt&qW3=jVWHXBK!rS*^i=sGi,PORK&usmL:3S[k])2o\8f^RK&tPEY-rqjo!X[#OE#m6TB5.BK!r>#
a)Q]Nfl=%RK&u^fNOG([mr<r!Z#S4RK&t;>[C1[qlaE1#M/iCRK&rlkh6qpD_m[@#JoT^gUZI*hrT/dB
S$qO#JoS;?bN4?;e`EsBK!t6YO`?J&K&rWdjL0ZK]XGk#JoTI`Wo\iop>q:BPd^%#JoS&8dcH)BcK2IB
K!t!RQuRt&qW3=jVWHXBK!rS*^i=sGi,PORK&usmL:3S[k])2o\8f^RK&tPEY-rqjo!X[#OE#m6TB5.B
K!r>#a)Q]Nfl=%RK&u^fNOG([mr<r!Z#S4RK&t;>[C1[qlaE1#M/iCRK&rlkh6qpD_m[@#JoT^gUZI*h
rT/dBS$qO#JoS;?bN4?;e`EsBK!t6YO`?J&K&rWdjL0ZK]XGk#JoTI`Wo\iop>q:BPd^%#JoS&8dcH)B
cK2IBK!t!RQuRt&qW3=jVWHXBK!rS*^i=sGi,PORK&usmL:3S[k])2o\8f^RK&tPEY-rqjo!X[#OE#m6
TB5.BK!r>#a)Q]Nfl=%RK&u^fNOG([mr<r!Z#S4RK&t;>[C1[qlaE1#M/iCRK&rlkh6qpD_m[@#JoT^g
UZI*hrT/dBS$qO#JoS;?bN4?;e`EsBK!t6YO`?J&K&rWdjL0ZK]XGk#JoTI`Wo\iop>q:BPd^%#JoS&8
dcH)BcK2IBK!t!RQuRt&qW3=jVWHXBK!rS*^i=sGi,PORK&usmL:3S[k])2o\8f^RK&tPEY-rqjo!X[#
OE#m6TB5.BK!r>#a)Q]Nfl=%RK&u^fNOG([mr<r!Z#S4RK&t;>[C1[qlaE1#M/iCRK&rlkh6qpD_m[@#
JoT^gUZI*hrT/dBS$qO#JoS;?bN4?;e`EsBK!t6YO`?J&K&rWdjL0ZK]XGk#JoTI`Wo\iop>q:BPd^%#
JoS&8dcH)BcK2IBK!t!RQuRt&qW3=jVWHXBK!rS*^i=sGi,PORK&usmL:3S[k])2o\8f^RK&tPEY-rqj
o!X[#OE#m6TB5.BK!r>#a)Q]Nfl=%RK&u^fNOG([mr<r!Z#S4RK&t;>[C1[qlaE1#M/iCRK&rlkh6qpD
_m[@#JoT^gUZI*hrT/dBS$qO#JoS;?bN4?;e`EsBK!t6YO`?J&K&rWdjL0ZK]XGk#JoTI`Wo\iop>q:B
Pd^%#JoS&8dcH)BcK2IBK!t!RQuRt&qW3=jVWHXBK!rS*^i=sGi,PORK&usmL:3S[k])2o\8f^RK&tPE
Y-rqjo!X[#OE#m6TB5.BK!r>#a)Q]Nfl=%RK&u^fNOG([mr<r!Z#S4RK&t;>[C1[qlaE1#M/iCRK&rlk
h6qpD_m[@#JoT^gUZI*hrT/dBS$qO#JoS;?bN4?;e`EsBK!t6YO`?J&K&rWdjL0ZK]XGk#JoTI`Wo\io
p>q:BPd^%#JoS&8dcH)BcK2IBK!t!RQuRt&qW3=jVWHXBK!rS*^i=sGi,PORK&usmL:3S[k])2o\8f^R
K&tPEY-rqjo!X[#OE#d~>

%%EndBinary
grestore
np
183.97 234.36 mo
176.77 234.36 li
176.77 218.04 li
183.97 218.04 li
183.97 234.36 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 132.873 294.547 ]ct
[7.44 0 0 16.56 43.7334 60.0672 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 62 
/H 138 
/M[62 0 0 -138 0 138 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 62 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 62 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 62 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
jT'l4JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcOm4JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&jT'l4JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcOm4JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&jT'l4JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcOm4JcLB&JcLB&JcLB&JcLB&SH+0~>

%%EndBinary
grestore
np
199.647 234.36 mo
197.913 234.36 li
197.913 218.04 li
199.647 218.04 li
199.647 234.36 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 132.873 294.547 ]ct
[1.92 0 0 16.56 64.9734 60.0672 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 16 
/H 138 
/M[16 0 0 -138 0 138 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 16 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 16 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 16 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
nX/i;nHSNNnOW0SnX/l<!(cVanX/i;nHSNNnOW0So9fQFnOW0SnX/i;nHSNNnOW9VrW_n[nOW0SnX/i;
nHSNNogo$PnHSNNnOW0SnX/i;nHS]Sr0["FnHSNNnOW0SnX/i;pBLL!nX/i;nHSNNnOW0SnX0)BqFL,\
nX/i;nHSNNnOW0Sq3^uFnOW0SnX/i;nHSNNnOWK\p]g8UnOW0SnX/i;nHSNNqagHPnHSNNnOW0SnX/i;
nHSoYp6bA@nHSNNnOW0SnX/i;r<Dp!nX/i;nHSNNnOW0SnX0;HoLSKVnX/i;nHSNNnOW0Ss-WDFnOW0S
nX/i;nHSNNnONWancnWOnOW0SnX/i;nHSNNnOW0SnX/i;nHSNNnOW3T!!_t\nOW0SnX/i;nHSNNo18mP
nHSNNnOW0SnX/i;nHSWQrg<4HnHSNNnOW0SnX/i;o`k@!nX/i;nHSNNnOW0SnX0#@r(->^nX/i;nHSNN
nOW0SpR(iFnOW0SnX/i;nHSNNnOWEZq?HJWnOW0SnX/i;nHSNNq+1<PnHSNNnOW0SnX/i;nHSiWpmCSB
nHSNNnOW0SnX/i;qZcd!nX/i;nHSNNnOW0SnX05Fp.4]XnX/i;nHSNNnOW0SrL!8FnOW0SnX/i;nHSNN
nOWW`oEOiQnOW0SnX/i;nHSNNs%)`PnHSNNnOW0SnX/i;nHJu\nsJr<nHSNNnOW0SnX/i;nHSNNnOW0S
nX/i;nHSNNnOW3T!!_t\nOW0SnX/i;nHSNNo18mPnHSNNnOW0SnX/i;nHSWQrg<4HnHSNNnOW0SnX/i;
o`k@!nX/i;nHSNNnOW0SnX0#@r(->^nX/i;nHSNNnOW0SpR(iFnOW0SnX/i;nHSNNnOWEZq?HJWnOW0S
nX/i;nHSNNq+1<PnHSNNnOW0SnX/i;nHSiWpmCSBnHSNNnOW0SnX/i;qZcd!nX/i;nHSNNnOW0SnX05F
p.4]XnX/i;nHSNNnOW0SrL!8FnOW0SnX/i;nHSNNnOWW`oEOiQnOW0SnX/i;nHSNNs%)`PnHSNNnOW0S
nX/i;nHJu\nsJr<nHSNNnOW0SnX/i;nHSNNnOW0SnX/i;nHSQO!1<:InHSNNnOW0SnX/i;o*54!nX/i;
nHSNNnOW0SnX/r>r^cP`nX/i;nHSNNnOW0SJ,~>

%%EndBinary
grestore
np
gsave
169.287 234.36 mo
199.648 234.36 li
199.648 218.04 li
169.287 218.04 li
169.287 234.36 li
clp
1 1 1 rgb
OPDWNA+CambriaMath*1 [9.96 0 0 -9.96 0 0 ]msf
176.607 227.64 mo
(\327)sh
grestore
gsave
169.287 234.36 mo
199.648 234.36 li
199.648 218.04 li
169.287 218.04 li
169.287 234.36 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
183.807 227.64 mo
(1)sh
grestore
gsave
169.287 234.36 mo
199.648 234.36 li
199.648 218.04 li
169.287 218.04 li
169.287 234.36 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
188.847 227.64 mo
( )sh
grestore
162.77 234.36 mo
156.687 234.36 li
162.327 234.36 li
162.327 218.04 li
162.77 218.04 li
162.77 234.36 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 132.873 294.547 ]ct
[6.36 0 0 16.56 23.6934 60.0672 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 53 
/H 138 
/M[53 0 0 -138 0 138 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 53 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 53 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 53 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
biR'WluD!(biRHbp9r1bbiST-f!`eBioTLfbdPc9!--6EbdQnYi,R!&fXCI]b]1kgppS_]b]2\)lK-6u
c>il(biR'WmW%-(biRNdoX;t`biSZ/e@*S@jQ5XfbdPi;rc-0DbdQt[hJpd$g:$U]b]1kgqR4k]b]2b+
kiL$scuK#(biR'Wn8[9(biRTfo!Zb^biS`1d^IA>k2kdfbdPo=r,KsBbdR%]gi:R"gpZa]b]1kgr3k"]
b]2h-k2jgqdW,/(biR'Wno<E(biRZhn@$P\biS3"iO6sMfB)_fbdP`8pZ9ufbdQMNlZ(/1c*dV\b]1kg
mC(r]b]2:sp#XE+b]3F>e`G#`j)O@(biR-Ys0g-kbiS9$hmUaKg#_kfbdP`8q;p,fbdQSPl#Fr/caNh]
b]1kgn$_)]b]2@uoB"3)b]3L@e)ef^j`0L(biR3[rO0pibiS?&h6tOIgZA"fbdP`8qrQ8fbdQYRkAe`-
dC/t]b]1kgn[@5]b]2G"n`A!'b]3RBdH/T\kAfX(biR9]qmO^gbiSE(gU>=Gh<".fbdP`8m,d3fbdQ,C
p2S=<bdR7ceoApqijS0]b]1nh!9MG5b]3%3i8r1kfQ$S(biR'Wpi4i(biRlnlF+oVcK5)fbdP`8mcE?f
bdQ2EoPr+:bdR=ee8`^ojL4<]b]1tjroMA4b]3+5hW;tig2Z_(biR'WqJju(biRrpkdJ]Td,k5fbdP`8
nE&KfbdQ8Gno;n8bdRCgdW*Lmk-jH]b]2%lr8l/2b]317guZbggi;k(biR'Wr,L,(biS#rk-iKRdcLAf
bdP`8o&\WfbdQ>In8Z\6bdQkXiGm*'f=(C]b]1kgpU8Y]b]2Y(lfH@!c#E`'biR'Wm;_'(biRKcosW(a
biSW.e[E\Aj5oRfbdPf:s)H9EbdQqZhf6m%fs^O]b]1kgq6ne]b]2_*l/g-tcZ/r(biR'Wmr@3(biRQe
o<uk_biS]0e$dJ?jlP^fbdPl<rGg'CbdR"\h/U[#gU?[]b]1kgqmOq]b]2e,kN0prd;f)(biR'WnT!?(
biRWgn[?Y]biSc2dC.8=kN1jfbdPr>qf0jAbdR(^gMtI!h6ug]b]1kgm'bl]b]27rp>sN,b]3C=f&b,a
ic4:(biR*X!4L*kbiS6#i3pjLf]DefbdP`8puU&fbdQPOl>b&0cF3b]b]1kgm^D#]b]2=to]=<*b]3I?
eE+o_jDjF(biR0ZrjL$jbiS<%hR:XJg?%qfbdP`8qW62fbdQVQk]+i.d'in]b]1kgn@%/]b]2D!o&\*(
b]3OAdcJ]]k&KR(biR6\r3jghbiSB'gpYFHgu\(fbdP`8r8l>fbdQ\Sk&JW,d^K%]b]1kgo![;]b]2J#
nE%m&b]3"2iT8:lf5^M(biR'WpMnc(biRimlaG#Wc/erebdP`8mH*9fbdQ/Dol84;bdR:deT&gpj0n6]
b]1qis5hJ5b]3(4hrW(jfl?Y(J,~>

%%EndBinary
grestore
np
169.97 234.36 mo
162.77 234.36 li
162.77 218.04 li
169.407 218.04 li
169.407 234.36 li
169.97 234.36 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 132.873 294.547 ]ct
[7.44 0 0 16.56 29.8134 60.0672 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 62 
/H 138 
/M[62 0 0 -138 0 138 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 62 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 62 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 62 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
_Z7TYr_UU2_Z9S<afrZZp]/M<_m&f1cVVLZo!$QH_bfe%eH!Lklql>2_Z8r*gT\RljoF6<_m&/tiD@Dl
i3;:H_bf.hk5`E(g/.'2_Z8;mmBFK)e,\t<_m%Nbo2*=)cER#H_beMVq#J=:aADe2_Z7Z[s00C;_Z0\@
`3@-Ur;ak<_m&u6b##tUpTVoH_bft*ciCtfnPI\2_Z9,/f!*%glN#T<_m&?$geblgjfmXH_bf=miW-m#
hb`E2_Z7TYr_UU2_Z9S<afrZZp]/M<_m&f1cVVLZo!$QH_bfe%eH!Lklql>2_Z8r*gT\RljoF6<_m&/t
iD@Dli3;:H_bf.hk5`E(g/.'2_Z8;mmBFK)e,\t<_m%Nbo2*=)cER#H_beMVq#J=:aADe2_Z7Z[s00C;
_Z0\@`3@-Ur;ak<_m&u6b##tUpTVoH_bft*ciCtfnPI\2_Z9,/f!*%glN#T<_m&?$geblgjfmXH_bf=m
iW-m#hb`E2_Z7TYr_UU2_Z9S<afrZZp]/M<_m&f1cVVLZo!$QH_bfe%eH!Lklql>2_Z8r*gT\RljoF6<
_m&/tiD@Dli3;:H_bf.hk5`E(g/.'2_Z8;mmBFK)e,\t<_m%Nbo2*=)cER#H_beMVq#J=:aADe2_Z7Z[
s00C;_Z0\@`3@-Ur;ak<_m&u6b##tUpTVoH_bft*ciCtfnPI\2_Z9,/f!*%glN#T<_m&?$geblgjfmXH
_bf=miW-m#hb`E2_Z7TYr_UU2_Z9S<afrZZp]/M<_m&f1cVVLZo!$QH_bfe%eH!Lklql>2_Z8r*gT\Rl
joF6<_m&/tiD@Dli3;:H_bf.hk5`E(g/.'2_Z8;mmBFK)e,\t<_m%Nbo2*=)cER#H_beMVq#J=:aADe2
_Z7Z[s00C;_Z0\@`3@-Ur;ak<_m&u6b##tUpTVoH_bft*ciCtfnPI\2_Z9,/f!*%glN#T<_m&?$geblg
jfmXH_bf=miW-m#hb`E2_Z7TYr_UU2_Z9S<afrZZp]/M<_m&f1cVVLZo!$QH_bfe%eH!Lklql>2_Z8r*
gT\RljoF6<_m&/tiD@Dli3;:H_bf.hk5`E(g/.'2_Z8;mmBFK)e,\t<_m%Nbo2*=)cER#H_beMVq#J=:
aADe2_Z7Z[s00C;_Z0\@`3@-Ur;ak<_m&u6b##tUpTVoH_bft*ciCtfnPI\2_Z9,/f!*%glN#T<_m&?$
geblgjfmXH_bf=miW-m#hb`E2_Z7TYr_UU2_Z9S<afrZZp]/M<_m&f1cVVLZo!$QH_bfe%eH!Lklql>2
_Z8r*gT\RljoF6<_m&/tiD@Dli3;:H_bf.hk5`E(g/.'2_Z8;mmBFK)e,\t<_m%Nbo2*=)cER#H_beMV
q#J=:aADe2_Z7Z[s00C;_Z0\@`3@-Ur;ak<_m&u6b##tUpTVoH_bft*ciCtfnPI\2_Z9,/f!*%glN#T<
_m&?$geblgjfmXH_bf=miW-m#hb`E2_Z7TYr_UU2_Z9S<afrZZp]/M<_m&f1cVVLZo!$QH_bfe%eH!Lk
lql>2_Z8r*gT\RlJ,~>

%%EndBinary
grestore
np
162.327 234.36 mo
156.687 234.36 li
156.687 218.04 li
162.327 218.04 li
162.327 234.36 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 132.873 294.547 ]ct
[5.88 0 0 16.56 23.6934 60.0672 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 49 
/H 138 
/M[49 0 0 -138 0 138 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 49 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 49 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 49 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
d,iW_jDjR,d,iW_pi4u,d,j#jp9r=fd,j`)ijR3RdcLMjd'h;@k2kpjd'h;@qW6>jd'hbMoPr7>d'iIa
i,R-*e@,=acuIFokdK`acuIFor3k.acuIt)o&\6,cuJ[=hW<+meoCS,d,iW_l>c!,d,iW_rc-D,d,j5p
n@$\`d,jr/gpYRLf]Dqjd'h;@m,d?jd'h;@!9MVid'htSmW$V8d'i[gg2YL$g:$aacuIFom^D/acuIIp
!9MS9cuJ1/m,cU&cuJmCf]CJggi<",d,iW_n8[E,d,i`brjL0nd,j>smC(A]d,k&2fs]7IgZA.jd'h;@
n)`Qjd'hABs)HEId'i(VlZ(;5d'idjf5]1!h6usacuIFon[@AacuIRsrT2D7cuJ:2l/g:#cuK!Fe`G/d
hf84,d,iW_o5WW,d,iieqmOjkd,jQ$kI/`Wd,k88e$dVCiT9Rjd'h;@p#Xujd'hSHq/OdCd'i:\j`/Z/
d'`pod;dOpj0nBacuIFopU8eacuIe$pZ9c1cuJL8j5nXrd;]/+d,iW_j`0X,d,iW_q/P&,d,j&kosW4e
d,jc*iO7*Qe)gSjd'h;@jQ5djd'h;@puU2jd'h\Kp2SI@d'iC_ic3?,d^K1acuIFok-jTacuIFoqR5"a
cuIn'o]=H.cuJU;i8r=oe8bG,d,iW_k],j,d,iW_r,L8,d,j/no!Znbd,jl-hR:dNf&cejd'h;@lK.3j
d'h;@roMVjd'hnQn8Zh:d'iUegi:^&fXCUacuIFom'c#acuIFo!4L:`cuJ+-mcDg(cuJgAg?$\ig2Zk,
d,iW_mW%9,d,iZ`!4L6od,jAtm'b8\d,k)3fXB.Hgu\4jd'h;@nE&Wjd'hDCrc-<Hd'i"Tm;^M7d'i^h
fl>C#gU?gacuIFon$_5acuILqs5hV9cuJ40lfHL%cuJpDfB(Afh/W(,d,iW_nT!K,d,iccrO1'md,jK"
l*erYd,k26e[EhEhrXFjd'h;@oB"ijd'hMFqf1!Ed'i4ZkAel1d'ipndrEariO86acuIFoosWYacuI_"
q;ou3cuJF6jlOjtcuB'IdH/``j)OL,d,iW_pMno,d,iuipU8Fgd,j](j0m<SdH(Aid'h;@jlPjjd'h;@
q;p8jd'h_Lol8@?d'iF`iGm6+e$f7acuIFojL4HacuIFoppSkacuIh%p>sZ0cuJO9ioSOqdW,;,d,iW_
k&K^,d,iW_qJk,,d,j)loX<+dd,jf+i3q!PeE-Yjd'h;@kiM'jd'h;@r8lJjd'hhOno<%<d'iOchJpp(
f!bIacuIFolF,lacuIForjL:acuJ%+nE&$*cuJa?guZnkfQ$_,d,iW_luD-,d,iW_!--D+d,j;rm^CJ^
d,k#1g:#@Jg?&(jd'h;@mcEKjd'h>A!--BId'i%UluCD6d'iaifQ#:"gpZmacuIFon@%;acuFR~>

%%EndBinary
grestore
np
171.207 234.36 mo
169.97 234.36 li
169.97 218.04 li
171.207 218.04 li
171.207 234.36 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 132.873 294.547 ]ct
[1.44 0 0 16.56 37.0134 60.0672 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 12 
/H 138 
/M[12 0 0 -138 0 138 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 12 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 12 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 12 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
p#YkTol9ZdosXO5p#YkTol9ZdqR6=1ol9ZdosXO5p#YkTol9ZdosXO5s5j":osXO5p#YkTol9ZdosXO5
p#YtWrjMK>p#YkTol9ZdosXO5p#YkTol9rlq;q:Xol9ZdosXO5p#YkTol9Zdp9jt0ol9ZdosXO5p#YkT
ol9ZdosXO5qrR_:osXO5p#YkTol9ZdosXO5p#YkT!-.^Pp#YkTol9ZdosXO5p#YkTol9fhrT3^\ol9Zd
osXO5p#YkTol9ZdosXj>pi5ugosXO5p#YkTol9ZdosXO5pZ;G:osXO5p#YkTol9ZdosXO5p#YkTr,MRQ
p#YkTol9ZdosXO5p#YkTol9ZdosXO5p#YkTol9ZdosXO5p#YkTqJlFQp#YkTol9ZdosXO5p#YkTol9Zd
s0h[1ol9ZdosXO5p#YkTol9ZdosXX8rc.VmosXO5p#YkTol9ZdosXO5p#Z.\q6os9p#YkTol9ZdosXO5
p#YkTp2L(Pp#YkTol9ZdosXO5p#YkTol9ZdqmQC1ol9ZdosXO5p#YkTol9ZdosXO5!9Nq9osXO5p#YkT
ol9ZdosXO5p#Z"XrO2B=p#YkTol9ZdosXO5p#YkTol9umpuV1Wol9ZdosXO5p#YkTol9ZdpU:+1ol9Zd
osXO5p#YkTol9ZdosXO5r8me:osXO5p#YkTol9ZdosXO5p#YkTol9ZdosXO5p#YkTol9ZdosXO5qW7Y:
osXO5p#YkTol9ZdosXO5p#YkTs)IdQp#YkTol9ZdosXO5p#YkTol9cgroNg]ol9ZdosXO5p#YkTol9Zd
osXg=q/Q)hosXO5p#YkTol9ZdosXO5p>l;9osXO5p#YkTol9ZdosXO5p#YkTqf2LQp#YkTol9ZdosXO5
p#YkTol9Zd!4MU0ol9ZdosXO5p#YkTol9ZdosX[9rGhMlosXO5p#YkTol9ZdosXO5p#YkTol9iir8mU[
ol9ZdosXO5p#YkTol9ZdosXm?pMolfosXO5p#YkTol9ZdosXO5puVM:osXO5p#YkTol9ZdosXO5p#YkT
rGhXQp#YkTol9ZdosXO5p#YkTol9]e!9Nm^ol9ZdosXO5p#YkTol9ZdosXa;qf2;josXO5p#YkTol9Zd
osXO5J,~>

%%EndBinary
grestore
np
169.97 234.36 mo
169.407 234.36 li
169.407 218.04 li
169.97 218.04 li
169.97 234.36 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 132.873 294.547 ]ct
[.84 0 0 16.56 36.4134 60.0672 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 7 
/H 138 
/M[7 0 0 -138 0 138 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 7 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 7 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 7 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
q>gArqG@"gqQTfmq>gArqG@"gqQTfmq>gArqG@"gqQTfm!!)lrqQTfmq>gArqG@"gqQTfmq>gArqG@"g
qQTfmq>gArqG@1lquHStqG@"gqQTfmq>gArqG@"gqQTfmq>gArqG@"gqQTfmrW)lsqQTfmq>gArqG@"g
qQTfmq>gArqG@"gqQTfmq>gArqG@+jrW)f!qG@"gqQTfmq>gArqG@"gqQTfmq>gArqG@"gqQTfmquH`s
qQTfmq>gArqG@"gqQTfmq>gArqG@"gqQTfmq>gArqG@%h!!)l"qG@"gqQTfmq>gArqG@"gqQTfmq>gAr
qG@"gqQTfmq>gArqG@"gqQTfmq>gArqG@"gqQTfmq>gArqG@"gqQTfmq>^N"qloonq>gArqG@"gqQTfm
q>gArqG@"gqQTfmq>gArqG@"gs02F*qG@"gqQTfmq>gArqG@"gqQTfmq>gArqG@"gqQTfmq>gN!rNQ,p
q>gArqG@"gqQTfmq>gArqG@"gqQTfmq>gArqG@"grNQ:*qG@"gqQTfmq>gArqG@"gqQTfmq>gArqG@"g
qQTfmq>gGts02>rq>gArqG@"gqQTfmq>gArqG@"gqQTfmq>gArqG@"gqlg()qG@"gqQTfmq>gArqG@"g
qQTfmq>gArqG@"gqQTfmq>gArqG@"gqQTfmq>gArqG@"gqQTfmq>gArqG@"gqQTfmq>gAr!)WPhq>gAr
qG@"gqQTfmq>gArqG@"gqQTfmq>gArqG@"gqQTurr)!4iqQTfmq>gArqG@"gqQTfmq>gArqG@"gqQTfm
q>gArr_WPiq>gArqG@"gqQTfmq>gArqG@"gqQTfmq>gArqG@"gqQTopr_WFkqQTfmq>gArqG@"gqQTfm
q>gArqG@"gqQTfmq>gArr)!Diq>gArqG@"gqQTfmq>gArqG@"gqQTfmq>gArqG@"gqQTin!)WLlqQTfm
q>gArqG@"gqQTfmq>gArqG@"gqQTfmq>gArqG@"gqQTfmq>gArqG@"gqQTfmq>gArqG@"gqQTfmq>gAr
qG7.lqZ-JsqG@"gqQTfmq>gArqG@"gqQTfmq>gArqG;\~>

%%EndBinary
grestore
np
gsave
156.687 234.36 mo
171.327 234.36 li
171.327 218.04 li
156.687 218.04 li
156.687 234.36 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
163.767 227.64 mo
(5)sh
grestore
gsave
156.687 234.36 mo
171.327 234.36 li
171.327 218.04 li
156.687 218.04 li
156.687 234.36 li
clp
.578984 .587127 .597516 rgb
%ADOBeginSubsetFont: NKWBAA+CambriaMath AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
systemdict begin
OPDWNA+CambriaMath dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B88EAF6D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OPDWNA+CambriaMath /Encoding get
dup 32 /space put
pop
%ADOEndSubsetFont
/OPDWNA+CambriaMath*1 
[32{/.notdef}rp /space 182{/.notdef}rp /multiply 40{/.notdef}rp]
OPDWNA+CambriaMath nf
OPDWNA+CambriaMath*1 [9.96 0 0 -9.96 0 0 ]msf
185.007 241.56 mo
(  )
[40.079 0 ]xsh
grestore
127.627 268.682 mo
127.627 265.46 130.239 262.847 133.462 262.847 cv
143.392 262.847 li
146.615 262.847 149.227 265.46 149.227 268.682 cv
149.227 285.718 li
149.227 288.94 146.615 291.552 143.392 291.552 cv
133.462 291.552 li
130.239 291.552 127.627 288.94 127.627 285.718 cv
127.627 268.682 li
.898 .714 .443 rgb
ef
191.827 269.302 mo
191.827 265.737 194.717 262.848 198.282 262.848 cv
206.972 262.848 li
210.537 262.848 213.427 265.737 213.427 269.302 cv
213.427 285.098 li
213.427 288.663 210.537 291.552 206.972 291.552 cv
198.282 291.552 li
194.717 291.552 191.827 288.663 191.827 285.098 cv
191.827 269.302 li
ef
144.427 264.642 mo
196.772 264.642 li
196.772 289.759 li
144.427 289.759 li
144.427 264.642 li
ef
134.484 262.893 mo
141.684 262.893 li
141.684 291.598 li
134.484 291.598 li
134.484 262.893 li
.596 .282 .024 rgb
ef
162.484 264.601 mo
169.684 264.601 li
169.684 289.718 li
162.484 289.718 li
162.484 264.601 li
1 0 0 rgb
ef
149.055 264.601 mo
156.255 264.601 li
156.255 289.718 li
149.055 289.718 li
149.055 264.601 li
.137422 .122799 .126081 rgb
ef
182.77 264.601 mo
189.97 264.601 li
189.97 289.718 li
182.77 289.718 li
182.77 264.601 li
1 .863 0 rgb
ef
143.007 287.4 mo
141.684 287.4 li
141.684 271.2 li
144.427 271.2 li
143.007 271.2 li
143.007 287.4 li
134.484 287.4 mo
128.367 287.4 li
128.367 271.2 li
134.484 271.2 li
134.484 287.4 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 132.873 294.547 ]ct
[16.32 0 0 16.44 -4.62665 7.02717 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 136 
/H 137 
/M[136 0 0 -137 0 137 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 136 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 136 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 136 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
K&udhMmi)_P]>i*S`S\hVRG!_YAqa*\E1Th_7$n_b&OY*e)dLhgpWf_j`-Q*mcBDhpU5^_!-*U1q/M;R
nE#kBkI-n#hJoCRe`EsBbdP!#_f<KR]&h&BZ*r)#W,^SRTB5.BQF?1#NH+[RK]W6BK!tNaM/i'*K&udh
Mmi)_P]>i*S`S\hVRG!_YAqa*\E1Th_7$n_b&OY*e)dLhgpWf_j`-Q*mcBDhpU5^_!-*U1q/M;RnE#kB
kI-n#hJoCRe`EsBbdP!#_f<KR]&h&BZ*r)#W,^SRTB5.BQF?1#NH+[RK]W6BK!tNaM/i'*K&udhMmi)_
P]>i*S`S\hVRG!_YAqa*\E1Th_7$n_b&OY*e)dLhgpWf_j`-Q*mcBDhpU5^_!-*U1q/M;RnE#kBkI-n#
hJoCRe`EsBbdP!#_f<KR]&h&BZ*r)#W,^SRTB5.BQF?1#NH+[RK]W6BK!tNaM/i'*K&udhMmi)_P]>i*
S`S\hVRG!_YAqa*\E1Th_7$n_b&OY*e)dLhgpWf_j`-Q*mcBDhpU5^_!-*U1q/M;RnE#kBkI-n#hJoCR
e`EsBbdP!#_f<KR]&h&BZ*r)#W,^SRTB5.BQF?1#NH+[RK]W6BK!tNaM/i'*K&udhMmi)_P]>i*S`S\h
VRG!_YAqa*\E1Th_7$n_b&OY*e)dLhgpWf_j`-Q*mcBDhpU5^_!-*U1q/M;RnE#kBkI-n#hJoCRe`EsB
bdP!#_f<KR]&h&BZ*r)#W,^SRTB5.BQF?1#NH+[RK]W6BK!tNaM/i'*K&udhMmi)_P]>i*S`S\hVRG!_
YAqa*\E1Th_7$n_b&OY*e)dLhgpWf_j`-Q*mcBDhpU5^_!-*U1q/M;RnE#kBkI-n#hJoCRe`EsBbdP!#
_f<KR]&h&BZ*r)#W,^SRTB5.BQF?1#NH+[RK]W6BK!tNaM/i'*K&udhMmi)_P]>i*S`S\hVRG!_YAqa*
\E1Th_7$n_b&OY*e)dLhgpWf_j`-Q*mcBDhpU5^_!-*U1q/M;RnE#kBkI-n#hJoCRe`EsBbdP!#_f<KR
]&h&BZ*r)#W,^SRTB5.BQF?1#NH+[RK]W6BK!tNaM/i'*K&udhMmi)_P]>i*S`S\hVRG!_YAqa*\E1Th
_7$n_b&OY*e)dLhgpWf_j`-Q*mcBDhpU5^_!-*U1q/M;RnE#kBkI-n#hJoCRe`EsBbdP!#_f<KR]&h&B
Z*r)#W,^SRTB5.BQF?1#NH+[RK]W6BK!tNaM/i'*K&udhMmi)_P]>i*S`S\hVRG!_YAqa*\E1Th_7$n_
b&OY*e)dLhgpWf_j`-Q*mcBDhpU5^_!-*U1q/M;RnE#kBkI-n#hJoCRe`EsBbdP!#_f<KR]&h&BZ*r)#
W,^SRTB5.BQF?1#NH+[RK]W6BK!tNaM/i'*K&udhMmi)_P]>i*S`S\hVRG!_YAqa*\E1Th_7$n_b&OY*
e)dLhgpWf_j`-Q*mcBDhpU5^_!-*U1q/M;RnE#kBkI-n#hJoCRe`EsBbdP!#_f<KR]&h&BZ*r)#W,^SR
TB5.BQF?1#NH+[RK]W6BK!tNaM/i'*K&udhMmi)_P]>i*S`S\hVRG!_YAqa*\E1Th_7$n_b&OY*e)dLh
gpWf_j`-Q*mcBDhpU5^_!-*U1q/M;RnE#kBkI-n#hJoCRe`EsBbdP!#_f<KR]&h&BZ*r)#W,^SRTB5.B
QF?1#NH+[RK]W6BK!tNaM/i'*K&udhMmi)_P]>i*S`S\hVRG!_YAqa*\E1Th_7$n_b&OY*e)dLhgpWf_
j`-Q*mcBDhpU5^_!-*U1q/M;RnE#kBkI-n#hJoCRe`EsBbdP!#_f<KR]&h&BZ*r)#W,^SRTB5.BQF?1#
NH+[RK]W6BK!tNaM/i'*K&udhMmi)_P]>i*S`S\hVRG!_YAqa*\E1Th_7$n_b&OY*e)dLhgpWf_j`-Q*
mcBDhpU5^_!-*U1q/M;RnE#kBkI-n#hJoCRe`EsBbdP!#_f<KR]&h&BZ*r)#W,^SRTB5.BQF?1#NH+[R
K]W6BK!tNaM/i'*K&udhMmi)_P]>i*S`S\hVRG!_YAqa*\E1Th_7$n_b&OY*e)dLhgpWf_j`-Q*mcBDh
pU5^_!-*U1q/M;RnE#kBkI-n#hJoCRe`EsBbdP!#_f:2~>

%%EndBinary
grestore
np
141.684 287.4 mo
134.484 287.4 li
134.484 271.2 li
141.684 271.2 li
141.684 287.4 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 132.873 294.547 ]ct
[7.44 0 0 16.44 1.49335 7.02717 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 62 
/H 137 
/M[62 0 0 -137 0 137 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 62 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 62 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 62 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
_jJ>4rW^@H_jL<la[j;RpmB9m_asG)cN_:Snjq2"_ZoRseX46Fliu)H_jK[ZgIT3dk*Y"m_areli<I2e
i(2p"_ZnqakEs.Xg'6gH_jK%Hm7>,!e<o`m_ar/Zo*3+"c:IY"_Zn;Oq3]&ja9MPH_jJD6s%($3_jCEp
`(7cMrKtWm_asV.ap,bNpINP"_Zob#d$V^AnHRGH_jKj_ek![_l^6@m_artqg]kZ`j[e9"_Zo+fig@VS
hZi0H_jJ>4rW^@H_jL<la[j;RpmB9m_asG)cN_:Snjq2"_ZoRseX46Fliu)H_jK[ZgIT3dk*Y"m_arel
i<I2ei(2p"_ZnqakEs.Xg'6gH_jK%Hm7>,!e<o`m_ar/Zo*3+"c:IY"_Zn;Oq3]&ja9MPH_jJD6s%($3
_jCEp`(7cMrKtWm_asV.ap,bNpINP"_Zob#d$V^AnHRGH_jKj_ek![_l^6@m_artqg]kZ`j[e9"_Zo+f
ig@VShZi0H_jJ>4rW^@H_jL<la[j;RpmB9m_asG)cN_:Snjq2"_ZoRseX46Fliu)H_jK[ZgIT3dk*Y"m
_areli<I2ei(2p"_ZnqakEs.Xg'6gH_jK%Hm7>,!e<o`m_ar/Zo*3+"c:IY"_Zn;Oq3]&ja9MPH_jJD6
s%($3_jCEp`(7cMrKtWm_asV.ap,bNpINP"_Zob#d$V^AnHRGH_jKj_ek![_l^6@m_artqg]kZ`j[e9"
_Zo+fig@VShZi0H_jJ>4rW^@H_jL<la[j;RpmB9m_asG)cN_:Snjq2"_ZoRseX46Fliu)H_jK[ZgIT3d
k*Y"m_areli<I2ei(2p"_ZnqakEs.Xg'6gH_jK%Hm7>,!e<o`m_ar/Zo*3+"c:IY"_Zn;Oq3]&ja9MPH
_jJD6s%($3_jCEp`(7cMrKtWm_asV.ap,bNpINP"_Zob#d$V^AnHRGH_jKj_ek![_l^6@m_artqg]kZ`
j[e9"_Zo+fig@VShZi0H_jJ>4rW^@H_jL<la[j;RpmB9m_asG)cN_:Snjq2"_ZoRseX46Fliu)H_jK[Z
gIT3dk*Y"m_areli<I2ei(2p"_ZnqakEs.Xg'6gH_jK%Hm7>,!e<o`m_ar/Zo*3+"c:IY"_Zn;Oq3]&j
a9MPH_jJD6s%($3_jCEp`(7cMrKtWm_asV.ap,bNpINP"_Zob#d$V^AnHRGH_jKj_ek![_l^6@m_artq
g]kZ`j[e9"_Zo+fig@VShZi0H_jJ>4rW^@H_jL<la[j;RpmB9m_asG)cN_:Snjq2"_ZoRseX46Fliu)H
_jK[ZgIT3dk*Y"m_areli<I2ei(2p"_ZnqakEs.Xg'6gH_jK%Hm7>,!e<o`m_ar/Zo*3+"c:IY"_Zn;O
q3]&ja9MPH_jJD6s%($3_jCEp`(7cMrKtWm_asV.ap,bNpINP"_Zob#d$V^AnHRGH_jKj_ek![_l^6@m
_artqg]kZ`j[e9"_Zo+fig@VShZi0H_jJ>4rW^@H_jL<la[j;RpmB9m_asG)cN_:Snjq2"_ZoRseX46F
liu)HJ,~>

%%EndBinary
grestore
np
gsave
128.367 287.52 mo
149.486 287.52 li
149.486 271.199 li
128.367 271.199 li
128.367 287.52 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
135.567 280.8 mo
(1 )
[5.03979 0 ]xsh
grestore
gsave
128.367 287.52 mo
149.486 287.52 li
149.486 271.199 li
128.367 271.199 li
128.367 287.52 li
clp
.578984 .587127 .597516 rgb
OPDWNA+CambriaMath*1 [9.96 0 0 -9.96 0 0 ]msf
156.807 294.719 mo
(  )
[40.079 0 ]xsh
grestore
161.247 287.4 mo
156.255 287.4 li
156.255 287.16 li
161.247 287.16 li
161.247 287.4 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 132.873 294.547 ]ct
[5.28 0 0 .48 23.2133 7.02717 ]ct
snap_to_device
<<
/T 1
/W 44 
/H 4 
/M[44 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~jlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUc
jlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUc
jlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUc~>
<~[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ
[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ
[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ~>
<~EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<
EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<
EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
156.255 287.4 mo
149.055 287.4 li
149.367 287.4 li
149.367 271.2 li
155.247 271.2 li
155.247 287.16 li
156.255 287.16 li
156.255 287.4 li
150.555 274.415 mo
150.555 280.889 li
154.908 280.889 li
154.908 274.415 li
150.555 274.415 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 132.873 294.547 ]ct
[7.44 0 0 16.44 16.0133 7.02717 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 62 
/H 137 
/M[62 0 0 -137 0 137 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 62 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 62 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 62 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
jT'l4JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcOm4JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&jT'l4JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcOm4JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&jT'l4JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcOm4JcLB&JcLB&JcLB&JcOF'J,~>

%%EndBinary
grestore
np
144.427 287.4 mo
143.007 287.4 li
143.007 271.2 li
144.427 271.2 li
144.427 287.4 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 132.873 294.547 ]ct
[1.68 0 0 16.44 10.0133 7.02717 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 14 
/H 137 
/M[14 0 0 -137 0 137 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 14 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 14 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 14 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
oB#SPo5XB`o="71oB#SPo5Oclo]>\Qo5XB`o="71oB#SPo5Xflp#YeRo5XB`o="71oB#SPo5Xckp>tnS
o5XB`o="71oB#SPo5X`jpZ;"To5XB`o="71oB#SPo5X]ipuV+Uo5XB`o="71oB#SPo5XZhq;q4Vo5XB`
o="71oB#SPo5XWgqW7=Wo5XB`o="71oB#SPo5XTfqrRFXo5XB`o="71oB#SPo5XQer8mOYo5XB`o="71
oB#SPo5XNdrT3XZo5XB`o="71oB#SPo5XKcroNa[o5XB`o="71oB#SPo5XHbs5ij\o5XB`o="71oB#SP
o5XEa!9Ng\o5XB`o="71oB#SPo5XB`o="71oB#SPo5XB`o="71oAot\oX=@2oB#SPo5XB`o="71oB$"\
osXI3oB#SPo5XB`o="71oB#t[p9sR4oB#SPo5XB`o="71oB#qZpU9[5oB#SPo5XB`o="71oB#nYppTd6
oB#SPo5XB`o="71oB#kXq6om7oB#SPo5XB`o="71oB#hWqR6!8oB#SPo5XB`o="71oB#eVqmQ*9oB#SP
o5XB`o="71oB#bUr3l3:oB#SPo5XB`o="71oB#_TrO2<;oB#SPo5XB`o="71oB#\SrjME<oB#SPo5XB`
o="71oB#YRs0hN=oB#SPo5XB`o="71oB#VQ!4MK=oB#SPo5XB`o="71oB#SPo5XB`o="71oB#SPo5XB`
o<nX=oPsKao="71oB#SPo5XB`o="[=ol9Tbo="71oB#SPo5XB`o="X<p2T]co="71oB#SPo5XB`o="U;
pMofdo="71oB#SPo5XB`o="71oAot\oX=@2oB#SPo5XB`o="71oB$"\osXI3oB#SPo5XB`o="71oB#t[
p9sR4oB#SPo5XB`o="71oB#qZpU9[5oB#SPo5XB`o="71oB#nYppTd6oB#SPo5XB`o="71oB#kXq6om7
oB#SPo5XB`o="71oB#hWqR6!8oB#SPo5XB`o="71oB#eVqmQ*9oB#SPo5XB`o="71oB#bUr3l3:oB#SP
o5XB`o="71oB#_TrO2<;oB#SPo5XB`o="71oB#\SrjME<oB#SPo5XB`o="71oB#YRs0hN=oB#SPo5XB`
o="71oB#VQ!4MK=J,~>

%%EndBinary
grestore
np
149.055 287.4 mo
144.427 287.4 li
144.427 271.2 li
149.055 271.2 li
149.055 287.4 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 132.873 294.547 ]ct
[4.8 0 0 16.44 11.4533 7.02717 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 40 
/H 137 
/M[40 0 0 -137 0 137 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 40 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 40 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 40 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
g#^nqfl?lMi8rY#fl?WFkN1C*fl?B?mcE-1fl?-8p#Xl8fl>m1r8lV?fl>^,s0g[jfl>^,ppT1jfl>^,
n[@\jfl>^,lF-2jfl>^,j0n]jfl>^,gp[3jfl>^,fs^j!h/V-0fs^TojDil7fs^?hlZ(V>fs^*ano<@E
fs]jZq/P*Lfs]US!--]Rfs]RRqrQ_sfs]RRo]>5sfs]RRmH*`sfs]RRk2l6sfs]RRhrXasfs]RRg#W4B
g:#[Sg#`%<iO7EZg#_e5kdK/ag#_P.n$^nhg#_;'p9rXog#_%urO1C!g#^nqrc-_5g#^nqpMo55g#^nq
n8[`5g#^nql#H65g#^nqfl?lMi8rY#fl?WFkN1C*fl?B?mcE-1fl?-8p#Xl8fl>m1r8lV?fl>^,s0g[j
fl>^,ppT1jfl>^,n[@\jfl>^,lF-2jfl>^,j0n]jfl>^,gp[3jfl>^,fs^j!h/V-0fs^TojDil7fs^?h
lZ(V>fs^*ano<@Efs]jZq/P*Lfs]US!--]Rfs]RRqrQ_sfs]RRo]>5sfs]RRmH*`sfs]RRk2l6sfs]RR
hrXasfs]RRg#W4Bg:#[Sg#`%<iO7EZg#_e5kdK/ag#_P.n$^nhg#_;'p9rXog#_%urO1C!g#^nqrc-_5
g#^nqpMo55g#^nqn8[`5g#^nql#H65g#^nqfl?lMi8rY#fl?WFkN1C*fl?B?mcE-1fl?-8p#Xl8fl>m1
r8lV?fl>^,s0g[jfl>^,ppT1jfl>^,n[@\jfl>^,lF-2jfl>^,j0n]jfl>^,gp[3jfl>^,fs^j!h/V-0
fs^TojDil7fs^?hlZ(V>fs^*ano<@Efs]jZq/P*Lfs]US!--]Rfs]RRqrQ_sfs]RRo]>5sfs]RRmH*`s
fs]RRk2l6sfs]RRhrXasfs]RRg#W4Bg:#[Sg#`%<iO7EZg#_e5kdK/ag#_P.n$^nhg#_;'p9rXog#_%u
rO1C!g#^nqrc-_5g#^nqpMo55g#^nqn8[`5g#^nql#H65g#^nqfl?lMi8rY#fl?WFkN1C*fl?B?mcE-1
fl?-8p#Xl8fl>m1r8lV?fl>^,s0g[jfl>^,ppT1jfl>^,n[@\jfl>^,lF-2jfl>^,j0n]jfl>^,gp[3j
fl>^,fs^j!h/V-0fs^TojDil7fs^?hlZ(V>fs^*ano<@Efs]jZq/P*Lfs]US!--]Rfs]RRqrQ_sfs]RR
o]>5sfs]RRmH*`sfs]RRk2l6sfs]RRhrXasfs]RRg#W4Bg:#[Sg#`%<iO7EZg#_e5kdK/ag#_P.n$^nh
g#_;'p9rXog#_%urO1C!g#^nqrc-_5g#^nqpMo55g#^nqn8[`5g#^nql#H65g#^nqfl;N~>

%%EndBinary
grestore
np
149.367 287.4 mo
149.055 287.4 li
149.055 271.2 li
149.367 271.2 li
149.367 287.4 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 132.873 294.547 ]ct
[.6 0 0 16.44 16.0133 7.02717 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 5 
/H 137 
/M[5 0 0 -137 0 137 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 5 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 5 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 5 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&l2Z>~>

%%EndBinary
grestore
np
154.908 280.889 mo
150.555 280.889 li
150.555 274.415 li
154.908 274.415 li
154.908 280.889 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 132.873 294.547 ]ct
[4.56 0 0 6.72 17.5733 13.5072 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 38 
/H 56 
/M[38 0 0 -56 0 56 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 38 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 38 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 38 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
rr@WNJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcOa0J,~>

%%EndBinary
grestore
np
gsave
142.887 287.52 mo
161.247 287.52 li
161.247 271.199 li
142.887 271.199 li
142.887 287.52 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
150.207 280.8 mo
(0)sh
grestore
gsave
142.887 287.52 mo
161.247 287.52 li
161.247 271.199 li
142.887 271.199 li
142.887 287.52 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
155.247 280.8 mo
( )sh
grestore
194.247 287.16 mo
189.97 287.16 li
189.97 270.96 li
194.247 270.96 li
194.247 287.16 li
182.77 287.16 mo
169.684 287.16 li
169.684 270.96 li
182.77 270.96 li
182.77 287.16 li
162.484 287.16 mo
161.247 287.16 li
161.247 271.2 li
156.255 271.2 li
156.255 270.96 li
162.484 270.96 li
162.484 287.16 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 132.873 294.547 ]ct
[38.28 0 0 16.44 23.2134 7.26716 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 319 
/H 137 
/M[319 0 0 -137 0 137 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 319 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 319 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 319 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
K&qUG^u`JBK!p9>rjIN#JoSJD`oVg6K&umkLphoD]!f_#JoQB^pi25RK&sK'bdN,3K!t?\NcBYjZuOFR
K&qUGo&Z"BK!qqmdW'kYJoU7!K&qUG^u`JBK!p9>rjIN#JoSJD`oVg6K&umkLphoD]!f_#JoQB^pi25R
K&sK'bdN,3K!t?\NcBYjZuOFRK&qUGo&Z"BK!qqmdW'kYJoU7!K&qUG^u`JBK!p9>rjIN#JoSJD`oVg6
K&umkLphoD]!f_#JoQB^pi25RK&sK'bdN,3K!t?\NcBYjZuOFRK&qUGo&Z"BK!qqmdW'kYJoU7!K&qUG
^u`JBK!p9>rjIN#JoSJD`oVg6K&umkLphoD]!f_#JoQB^pi25RK&sK'bdN,3K!t?\NcBYjZuOFRK&qUG
o&Z"BK!qqmdW'kYJoU7!K&qUG^u`JBK!p9>rjIN#JoSJD`oVg6K&umkLphoD]!f_#JoQB^pi25RK&sK'
bdN,3K!t?\NcBYjZuOFRK&qUGo&Z"BK!qqmdW'kYJoU7!K&qUG^u`JBK!p9>rjIN#JoSJD`oVg6K&umk
LphoD]!f_#JoQB^pi25RK&sK'bdN,3K!t?\NcBYjZuOFRK&qUGo&Z"BK!qqmdW'kYJoU7!K&qUG^u`JB
K!p9>rjIN#JoSJD`oVg6K&umkLphoD]!f_#JoQB^pi25RK&sK'bdN,3K!t?\NcBYjZuOFRK&qUGo&Z"B
K!qqmdW'kYJoU7!K&qUG^u`JBK!p9>rjIN#JoSJD`oVg6K&umkLphoD]!f_#JoQB^pi25RK&sK'bdN,3
K!t?\NcBYjZuOFRK&qUGo&Z"BK!qqmdW'kYJoU7!K&qUG^u`JBK!p9>rjIN#JoSJD`oVg6K&umkLphoD
]!f_#JoQB^pi25RK&sK'bdN,3K!t?\NcBYjZuOFRK&qUGo&Z"BK!qqmdW'kYJoU7!K&qUG^u`JBK!p9>
rjIN#JoSJD`oVg6K&umkLphoD]!f_#JoQB^pi25RK&sK'bdN,3K!t?\NcBYjZuOFRK&qUGo&Z"BK!qqm
dW'kYJoU7!K&qUG^u`JBK!p9>rjIN#JoSJD`oVg6K&umkLphoD]!f_#JoQB^pi25RK&sK'bdN,3K!t?\
NcBYjZuOFRK&qUGo&Z"BK!qqmdW'kYJoU7!K&qUG^u`JBK!p9>rjIN#JoSJD`oVg6K&umkLphoD]!f_#
JoQB^pi25RK&sK'bdN,3K!t?\NcBYjZuOFRK&qUGo&Z"BK!qqmdW'kYJoU7!K&qUG^u`JBK!p9>rjIN#
JoSJD`oVg6K&umkLphoD]!f_#JoQB^pi25RK&sK'bdN,3K!t?\NcBYjZuOFRK&qUGo&Z"BK!qqmdW'kY
JoU7!K&qUG^u`JBK!p9>rjIN#JoSJD`oVg6K&umkLphoD]!f_#JoQB^pi25RK&sK'bdN,3K!t?\NcBYj
ZuOFRK&qUGo&Z"BK!qqmdW'kYJoU7!K&qUG^u`JBK!p9>rjIN#JoSJD`oVg6K&umkLphoD]!f_#JoQB^
pi25RK&sK'bdN,3K!t?\NcBYjZuOFRK&qUGo&Z"BK!qqmdW'kYJoU7!K&qUG^u`JBK!p9>rjIN#JoSJD
`oVg6K&umkLphoD]!f_#JoQB^pi25RK&sK'bdN,3K!t?\NcBYjZuOFRK&qUGo&Z"BK!qqmdW'kYJoU7!
K&qUG^u`JBK!p9>rjIN#JoSJD`oVg6K&umkLphoD]!f_#JoQB^pi25RK&sK'bdN,3K!t?\NcBYjZuOFR
K&qUGo&Z"BK!qqmdW'kYJoU7!K&qUG^u`JBK!p9>rjIN#JoSJD`oVg6K&umkLphoD]!f_#JoQB^pi25R
K&sK'bdN,3K!t?\NcBYjZuOFRK&qUGo&Z"BK!qqmdW'kYJoU7!K&qUG^u`JBK!p9>rjIN#JoSJD`oVg6
K&umkLphoD]!f_#JoQB^pi25RK&sK'bdN,3K!t?\NcBYjZuOFRK&qUGo&Z"BK!qqmdW'kYJoU7!K&qUG
^u`JBK!p9>rjIN#JoSJD`oVg6K&umkLphoD]!f_#JoQB^pi25RK&sK'bdN,3K!t?\NcBYjZuOFRK&qUG
o&Z"BK!qqmdW'kYJoU7!K&qUG^u`JBK!p9>rjIN#JoSJD`oVg6K&umkLphoD]!f_#JoQB^pi25RK&sK'
bdN,3K!t?\NcBYjZuOFRK&qUGo&Z"BK!qqmdW'kYJoU7!K&qUG^u`JBK!p9>rjIN#JoSJD`oVg6K&umk
LphoD]!f_#JoQB^pi25RK&sK'bdN,3K!t?\NcBYjZuOFRK&qUGo&Z"BK!qqmdW'kYJoU7!K&qUG^u`JB
K!p9>rjIN#JoSJD`oVg6K&umkLphoD]!f_#JoQB^pi25RK&sK'bdN,3K!t?\NcBYjZuOFRK&qUGo&Z"B
K!qqmdW'kYJoU7!K&qUG^u`JBK!p9>rjIN#JoSJD`oVg6K&umkLphoD]!f_#JoQB^pi25RK&sK'bdN,3
K!t?\NcBYjZuOFRK&qUGo&Z"BK!qqmdW'kYJoU7!K&qUG^u`JBK!p9>rjIN#JoSJD`oVg6K&umkLphoD
]!f_#JoQB^pi25RK&sK'bdN,3K!t?\NcBYjZuOFRK&qUGo&Z"BK!qqmdW'kYJoU7!K&qUG^u`JBK!p9>
rjIN#JoSJD`oVg6K&umkLphoD]!f_#JoQB^pi25RK&sK'bdN,3K!t?\NcBYjZuOFRK&qUGo&Z"BK!qqm
dW'kYJoU7!K&qUG^u`JBK!p9>rjIN#JoSJD`oVg6K&umkLphoD]!f_#JoQB^pi25RK&sK'bdN,3K!t?\
NcBYjZuOFRK&qUGo&Z"BK!qqmdW'kYJoU7!K&qUG^u`JBK!p9>rjIN#JoSJD`oVg6K&umkLphoD]!f_#
JoQB^pi25RK&sK'bdN,3K!t?\NcBYjZuOFRK&qUGo&Z"BK!qqmdW'kYJoU7!K&qUG^u`JBK!p9>rjIN#
JoSJD`oVg6K&umkLphoD]!f_#JoQB^pi25RK&sK'bdN,3K!t?\NcBYjZuOFRK&qUGo&Z"BK!qqmdW'kY
JoU7!K&qUG^u`JBK!p9>rjIN#JoSJD`oVg6K&umkLphoD]!f_#JoQB^pi25RK&sK'bdN,3K!t?\NcBYj
ZuOFRK&qUGo&Z"BK!qqmdW'kYJoU7!K&qUG^u`JBK!p9>rjIN#JoSJD`oVg6K&umkLphoD]!f_#JoQB^
pi25RK&sK'bdN,3K!t?\NcBYjZuOFRK&qUGo&Z"BK!qqmdW'kYJoU7!K&qUG^u`JBK!p9>rjIN#JoSJD
`oVg6K&umkLphoD]!f_#JoQB^pi25RK&sK'bdN,3K!t?\NcBYjZuOFRK&qUGo&Z"BK!qqmdW'kYJoU7!
K&qUG^u`JBK!p9>rjIN#JoSJD`oVg6K&umkLphoD]!f_#JoQB^pi25RK&sK'bdN,3K!t?\NcBYjZuOFR
K&qUGo&Z"BK!qqmdW'kYJoU7!K&qUG^u`JBK!p9>rjIN#JoSJD`oVg6K&umkLphoD]!f_#JoQB^pi25R
K&sK'bdN,3K!t?\NcBYjZuOFRK&qUGo&Z"BK!qqmdW'kYJoU7!K&qUG^u`JBK!p9>rjIN#JoSJDJ,~>

%%EndBinary
grestore
np
169.684 287.16 mo
162.484 287.16 li
162.484 270.96 li
169.684 270.96 li
169.684 287.16 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 132.873 294.547 ]ct
[7.44 0 0 16.44 29.4534 7.26716 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 62 
/H 137 
/M[62 0 0 -137 0 137 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 62 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 62 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 62 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
_uILP`W3pVqZ)NSq#AS<[fF_S_uK9-PQ:1Pec2cPfDrhhkl@7Sk5X<<V#]HS_uJWpV?#HPkPq%Pl2\a%
f)VuSeGo%<P5t1S_uJ!^\,a_Pq>Z<PquFY7`;m^S_uB]:L&h2Pa8`dPaoK?ZpAg6So`*;<ZN/GS_uK-)
QiQIPg&J&Pg]57ljT(tSirA$<T`F0S_uILP`W3pVqZ)NSq#AS<[fF_S_uK9-PQ:1Pec2cPfDrhhkl@7S
k5X<<V#]HS_uJWpV?#HPkPq%Pl2\a%f)VuSeGo%<P5t1S_uJ!^\,a_Pq>Z<PquFY7`;m^S_uB]:L&h2P
a8`dPaoK?ZpAg6So`*;<ZN/GS_uK-)QiQIPg&J&Pg]57ljT(tSirA$<T`F0S_uILP`W3pVqZ)NSq#AS<
[fF_S_uK9-PQ:1Pec2cPfDrhhkl@7Sk5X<<V#]HS_uJWpV?#HPkPq%Pl2\a%f)VuSeGo%<P5t1S_uJ!^
\,a_Pq>Z<PquFY7`;m^S_uB]:L&h2Pa8`dPaoK?ZpAg6So`*;<ZN/GS_uK-)QiQIPg&J&Pg]57ljT(tS
irA$<T`F0S_uILP`W3pVqZ)NSq#AS<[fF_S_uK9-PQ:1Pec2cPfDrhhkl@7Sk5X<<V#]HS_uJWpV?#HP
kPq%Pl2\a%f)VuSeGo%<P5t1S_uJ!^\,a_Pq>Z<PquFY7`;m^S_uB]:L&h2Pa8`dPaoK?ZpAg6So`*;<
ZN/GS_uK-)QiQIPg&J&Pg]57ljT(tSirA$<T`F0S_uILP`W3pVqZ)NSq#AS<[fF_S_uK9-PQ:1Pec2cP
fDrhhkl@7Sk5X<<V#]HS_uJWpV?#HPkPq%Pl2\a%f)VuSeGo%<P5t1S_uJ!^\,a_Pq>Z<PquFY7`;m^S
_uB]:L&h2Pa8`dPaoK?ZpAg6So`*;<ZN/GS_uK-)QiQIPg&J&Pg]57ljT(tSirA$<T`F0S_uILP`W3pV
qZ)NSq#AS<[fF_S_uK9-PQ:1Pec2cPfDrhhkl@7Sk5X<<V#]HS_uJWpV?#HPkPq%Pl2\a%f)VuSeGo%<
P5t1S_uJ!^\,a_Pq>Z<PquFY7`;m^S_uB]:L&h2Pa8`dPaoK?ZpAg6So`*;<ZN/GS_uK-)QiQIPg&J&P
g]57ljT(tSirA$<T`F0S_uILP`W3pVqZ)NSq#AS<[fF_S_uK9-PQ:1Pec2cPfDpF~>

%%EndBinary
grestore
np
156.255 271.2 mo
155.247 271.2 li
155.247 270.96 li
156.255 270.96 li
156.255 271.2 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 132.873 294.547 ]ct
[1.2 0 0 .48 22.2534 23.2272 ]ct
snap_to_device
<<
/T 1
/W 10 
/H 4 
/M[10 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
189.97 287.16 mo
182.77 287.16 li
182.77 270.96 li
189.97 270.96 li
189.97 287.16 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 132.873 294.547 ]ct
[7.44 0 0 16.44 49.7333 7.26716 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 62 
/H 137 
/M[62 0 0 -137 0 137 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 62 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 62 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 62 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
_uIX0rW'q<_uKVhakXc6q#AS<_qanbcN(l_o%_[K_Z90*ec3PBli>Z<_uJuVgYB[Hk5X<<_qa8Pi;gdq
i8!DK_Z8NmkPrHTg&UC<_uJ?DmG,SZeGo%<_q`W>o)Q].cJ8-K_Z7m[q>\@fa8l,<_uI^2s4kKl_uB_l
`8&61rVsq<_qb(gaoK?ZpY=$K_Z9?/d/V#=nGq#<_uK/[f%e.Cli5Z<_qaGUg]57ljkSbK_Z8]rir?pO
hZ2a<_uIX0rW'q<_uKVhakXc6q#AS<_qanbcN(l_o%_[K_Z90*ec3PBli>Z<_uJuVgYB[Hk5X<<_qa8P
i;gdqi8!DK_Z8NmkPrHTg&UC<_uJ?DmG,SZeGo%<_q`W>o)Q].cJ8-K_Z7m[q>\@fa8l,<_uI^2s4kKl
_uB_l`8&61rVsq<_qb(gaoK?ZpY=$K_Z9?/d/V#=nGq#<_uK/[f%e.Cli5Z<_qaGUg]57ljkSbK_Z8]r
ir?pOhZ2a<_uIX0rW'q<_uKVhakXc6q#AS<_qanbcN(l_o%_[K_Z90*ec3PBli>Z<_uJuVgYB[Hk5X<<
_qa8Pi;gdqi8!DK_Z8NmkPrHTg&UC<_uJ?DmG,SZeGo%<_q`W>o)Q].cJ8-K_Z7m[q>\@fa8l,<_uI^2
s4kKl_uB_l`8&61rVsq<_qb(gaoK?ZpY=$K_Z9?/d/V#=nGq#<_uK/[f%e.Cli5Z<_qaGUg]57ljkSbK
_Z8]rir?pOhZ2a<_uIX0rW'q<_uKVhakXc6q#AS<_qanbcN(l_o%_[K_Z90*ec3PBli>Z<_uJuVgYB[H
k5X<<_qa8Pi;gdqi8!DK_Z8NmkPrHTg&UC<_uJ?DmG,SZeGo%<_q`W>o)Q].cJ8-K_Z7m[q>\@fa8l,<
_uI^2s4kKl_uB_l`8&61rVsq<_qb(gaoK?ZpY=$K_Z9?/d/V#=nGq#<_uK/[f%e.Cli5Z<_qaGUg]57l
jkSbK_Z8]rir?pOhZ2a<_uIX0rW'q<_uKVhakXc6q#AS<_qanbcN(l_o%_[K_Z90*ec3PBli>Z<_uJuV
gYB[Hk5X<<_qa8Pi;gdqi8!DK_Z8NmkPrHTg&UC<_uJ?DmG,SZeGo%<_q`W>o)Q].cJ8-K_Z7m[q>\@f
a8l,<_uI^2s4kKl_uB_l`8&61rVsq<_qb(gaoK?ZpY=$K_Z9?/d/V#=nGq#<_uK/[f%e.Cli5Z<_qaGU
g]57ljkSbK_Z8]rir?pOhZ2a<_uIX0rW'q<_uKVhakXc6q#AS<_qanbcN(l_o%_[K_Z90*ec3PBli>Z<
_uJuVgYB[Hk5X<<_qa8Pi;gdqi8!DK_Z8NmkPrHTg&UC<_uJ?DmG,SZeGo%<_q`W>o)Q].cJ8-K_Z7m[
q>\@fa8l,<_uI^2s4kKl_uB_l`8&61rVsq<_qb(gaoK?ZpY=$K_Z9?/d/V#=nGq#<_uK/[f%e.Cli5Z<
_qaGUg]57ljkSbK_Z8]rir?pOhZ2a<_uIX0rW'q<_uKVhakXc6q#AS<_qanbcN(l_o%_[K_Z90*ec3PB
li>Z<J,~>

%%EndBinary
grestore
np
161.247 287.16 mo
156.255 287.16 li
156.255 271.2 li
161.247 271.2 li
161.247 287.16 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 132.873 294.547 ]ct
[5.28 0 0 16.2 23.2134 7.26716 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 44 
/H 135 
/M[44 0 0 -135 0 135 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 44 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 44 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 44 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
e`G>ig2[%1e`G>ihf8C1e`G>ijDja1e`G>il#H*1e`G>imW%H1e`G>io5Wf1e`G>ipi5/1e`G>irGgM1
e`GAj!4LEte`GPoqmP$pe`G_tp9rLke`Go$n[?tfe`H))m'bGae`H8.kI/o\e`HG3ijRBWe`HV8h6tjR
e`He=fXB=MfB*%oe[F"Jgu\Coe[F"JiT9aoe[F"Jk2l*oe[F"JlfIHoe[F"JnE&foe[F"Jp#Y/oe[F"J
qW6Moe[F"Js5hkoe[F+Mrc-KMe[F:Rq/OsHe[FIWoPrFCe[FX\mr?n>e[Fgal>bA9e[G!fj`/i4e[F1O
r,L9Ke[F@TpMnaFe[FOYno<4Ae[F^^m;^\<e[Fmck],/7e[G'hj)NW2e[G6mhJq*-e[GErfl>R(f!YRe
eT'.$gU@!feT'.$i3r?feT'.$jgO]feT'.$lF-&feT'.$n$_DfeT'.$oX<bfeT'.$q6o+feT'.$rjLIf
eT'4&s5he>eT'C+qW689eT'R0p#X`4eT'a5nE&3/eT'p:lfH[*eT(*?k2k.%eT(9DiT8UueT(HIgu[(p
eT(WNfB(PkfQ$n1e`G>ih/W71e`G>iic4U1e`G>ikAfs1e`G>iluD<1e`G>inT!Z1e`G>ig2[%1e`G>i
hf8C1e`G>ijDja1e`G>il#H*1e`G>imW%H1e`G>io5Wf1e`G>ipi5/1e`G>irGgM1e`GAj!4LEte`GPo
qmP$pe`G_tp9rLke`Go$n[?tfe`H))m'bGae`H8.kI/o\e`HG3ijRBWe`HV8h6tjRe`He=fXB=MfB*%o
e[F"Jgu\Coe[F"JiT9aoe[F"Jk2l*oe[F"JlfIHoe[F"JnE&foe[F"Jp#Y/oe[F"JqW6Moe[F"Js5hko
e[F+Mrc-KMe[F:Rq/OsHe[FIWoPrFCe[FX\mr?n>e[Fgal>bA9e[G!fj`/i4e[F1Or,L9Ke[F@TpMnaF
e[FOYno<4Ae[F^^m;^\<e[Fmck],/7e[G'hj)NW2e[G6mhJq*-e[GErfl>R(f!YReeT'.$gU@!feT'.$
i3r?feT'.$jgO]feT'.$lF-&feT'.$n$_DfeT'.$oX<bfeT'.$q6o+feT'.$rjLIfeT'4&s5he>eT'C+
qW689eT'R0p#X`4eT'a5nE&3/eT'p:lfH[*eT(*?k2k.%eT(9DiT8UueT(HIgu[(peT(WNfB(PkfQ$n1
e`G>ih/W71e`G>iic4U1e`G>ikAfs1e`G>iluD<1e`G>inT!Z1e`G>ig2[%1e`G>ihf8C1e`G>ijDja1
e`G>il#H*1e`G>imW%H1e`G>io5Wf1e`G>ipi5/1e`G>irGgM1e`GAj!4LEte`GPoqmP$pe`G_tp9rLk
J,~>

%%EndBinary
grestore
np
156.255 287.16 mo
155.247 287.16 li
155.247 271.2 li
156.255 271.2 li
156.255 287.16 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 132.873 294.547 ]ct
[1.2 0 0 16.2 22.2534 7.26716 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 10 
/H 135 
/M[10 0 0 -135 0 135 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 10 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 10 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 10 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLl4
J,~>

%%EndBinary
grestore
np
gsave
155.127 287.16 mo
194.247 287.16 li
194.247 270.839 li
155.127 270.839 li
155.127 287.16 li
clp
1 1 1 rgb
OPDWNA+CambriaMath*1 [9.96 0 0 -9.96 0 0 ]msf
162.447 280.56 mo
(\327)sh
grestore
gsave
155.127 287.16 mo
194.247 287.16 li
194.247 270.839 li
155.127 270.839 li
155.127 287.16 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
169.647 280.56 mo
(100)
[5.03979 5.03979 0 ]xsh
grestore
gsave
155.127 287.16 mo
194.247 287.16 li
194.247 270.839 li
155.127 270.839 li
155.127 287.16 li
clp
1 1 1 rgb
OPDWMZ+Calibri*1 [9.96 0 0 -9.96 0 0 ]msf
184.887 280.56 mo
( )sh
grestore
1 lw
0 lc
1 lj
10 ml
[3 1 ] 0 dsh
true sadj
85.5266 172.197 mo
85.5266 182.53 li
137.777 196.864 li
137.777 207.257 li
.137422 .122799 .126081 rgb
@
1 lc
0 lj
[] 0 dsh
140.277 203.257 mo
137.777 207.257 li
135.277 203.257 li
@
0 lc
1 lj
[3 1 ] 0 dsh
125.727 172.197 mo
125.727 182.53 li
152.477 196.864 li
152.477 207.257 li
@
1 lc
0 lj
[] 0 dsh
154.977 203.257 mo
152.477 207.257 li
149.977 203.257 li
@
0 lc
1 lj
[3 1 ] 0 dsh
227.177 172.197 mo
227.177 182.53 li
180.927 196.864 li
180.927 207.257 li
@
1 lc
0 lj
[] 0 dsh
178.427 203.257 mo
180.927 207.257 li
183.427 203.257 li
@
0 lc
1 lj
[3 1 ] 0 dsh
311.427 172.197 mo
311.427 182.53 li
201.927 196.864 li
201.927 207.257 li
@
1 lc
0 lj
[] 0 dsh
199.427 203.257 mo
201.927 207.257 li
204.427 203.257 li
@
0 lc
1 lj
[3 1 ] 0 dsh
166.347 172.197 mo
166.347 207.009 li
@
1 lc
0 lj
[] 0 dsh
168.847 203.009 mo
166.347 207.009 li
163.847 203.009 li
@
0 lc
1 lj
[3 1 ] 0 dsh
180.17 239.997 mo
180.17 246.197 li
166.379 254.797 li
166.379 260.657 li
@
1 lc
0 lj
[] 0 dsh
163.879 256.657 mo
166.379 260.657 li
168.879 256.657 li
@
0 lc
1 lj
[3 1 ] 0 dsh
201.727 239.997 mo
201.727 246.197 li
186.527 254.797 li
186.527 260.657 li
@
1 lc
0 lj
[] 0 dsh
184.026 256.657 mo
186.526 260.657 li
189.026 256.657 li
@
0 lc
1 lj
[3 1 ] 0 dsh
138.077 239.997 mo
138.077 260.657 li
@
1 lc
0 lj
[] 0 dsh
140.577 256.657 mo
138.077 260.657 li
135.577 256.657 li
@
0 lc
1 lj
[3 1 ] 0 dsh
152.587 239.997 mo
152.587 260.657 li
@
1 lc
0 lj
[] 0 dsh
155.088 256.657 mo
152.588 260.657 li
150.088 256.657 li
@
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/OPDWNA+CambriaMath*1 uf
/OPDWNA+CambriaMath uf
/NKWBAA+CambriaMath uf
/OPDWMZ+Calibri*1 uf
/OPDWMZ+Calibri uf
/XOSAAA+Calibri uf
/OPDWNB+Calibri-Identity-H uf
/OPDWNB+Calibri /CIDFont ur
/OPDWMY+Calibri-Bold*1 uf
/OPDWMY+Calibri-Bold uf
/ONKBAA+Calibri-Bold uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
